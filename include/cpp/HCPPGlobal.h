/***********************************************************
 * File generated by the HALCON-Compiler hcomp version 12.0
 * File for HALCON/C++ Vers 3.0 interface
 * Usage: Prototypes for HALCON/C++ Operators
 *
 * Software by: MVTec Software GmbH, www.mvtec.com
 ***********************************************************/



namespace Halcon {


#ifndef H_SYSTEM_PROC_NUMBER
#define H_SYSTEM_PROC_NUMBER 2075
#endif


// HALCON/C++ operators 
LIntExport Herror union_cotangential_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *UnionContours, const Halcon::HTuple &FitClippingLength, const Halcon::HTuple &FitLength, const Halcon::HTuple &MaxTangAngle, const Halcon::HTuple &MaxDist, const Halcon::HTuple &MaxDistPerp, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &Mode);
LIntExport Herror union_cotangential_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *UnionContours, double FitClippingLength, double FitLength, double MaxTangAngle, double MaxDist, double MaxDistPerp, double MaxOverlap, const char *Mode);
LIntExport Herror polar_trans_contour_xld_inv(const Halcon::Hobject &PolarContour, Halcon::Hobject *XYTransContour, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleEnd, const Halcon::HTuple &RadiusStart, const Halcon::HTuple &RadiusEnd, const Halcon::HTuple &WidthIn, const Halcon::HTuple &HeightIn, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror polar_trans_contour_xld_inv(const Halcon::Hobject &PolarContour,Halcon::Hobject *XYTransContour, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong WidthIn, Hlong HeightIn, Hlong Width, Hlong Height);
LIntExport Herror polar_trans_contour_xld(const Halcon::Hobject &Contour, Halcon::Hobject *PolarTransContour, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleEnd, const Halcon::HTuple &RadiusStart, const Halcon::HTuple &RadiusEnd, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror polar_trans_contour_xld(const Halcon::Hobject &Contour,Halcon::Hobject *PolarTransContour, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong Width, Hlong Height);
LIntExport Herror gen_nurbs_interp(const Halcon::HTuple &Rows, const Halcon::HTuple &Cols, const Halcon::HTuple &Tangents, const Halcon::HTuple &Degree, Halcon::HTuple *CtrlRows, Halcon::HTuple *CtrlCols, Halcon::HTuple *Knots);
LIntExport Herror gen_contour_nurbs_xld(Halcon::Hobject *Contour, const Halcon::HTuple &Rows, const Halcon::HTuple &Cols, const Halcon::HTuple &Knots, const Halcon::HTuple &Weights, const Halcon::HTuple &Degree, const Halcon::HTuple &MaxError, const Halcon::HTuple &MaxDistance);
LIntExport Herror union2_closed_polygons_xld(const Halcon::Hobject &Polygons1, const Halcon::Hobject &Polygons2, Halcon::Hobject *PolygonsUnion);
LIntExport Herror union2_closed_contours_xld(const Halcon::Hobject &Contours1, const Halcon::Hobject &Contours2, Halcon::Hobject *ContoursUnion);
LIntExport Herror symm_difference_closed_polygons_xld(const Halcon::Hobject &Polygons1, const Halcon::Hobject &Polygons2, Halcon::Hobject *PolygonsDifference);
LIntExport Herror symm_difference_closed_contours_xld(const Halcon::Hobject &Contours1, const Halcon::Hobject &Contours2, Halcon::Hobject *ContoursDifference);
LIntExport Herror difference_closed_polygons_xld(const Halcon::Hobject &Polygons, const Halcon::Hobject &Sub, Halcon::Hobject *PolygonsDifference);
LIntExport Herror difference_closed_contours_xld(const Halcon::Hobject &Contours, const Halcon::Hobject &Sub, Halcon::Hobject *ContoursDifference);
LIntExport Herror intersection_closed_polygons_xld(const Halcon::Hobject &Polygons1, const Halcon::Hobject &Polygons2, Halcon::Hobject *PolygonsIntersection);
LIntExport Herror intersection_closed_contours_xld(const Halcon::Hobject &Contours1, const Halcon::Hobject &Contours2, Halcon::Hobject *ContoursIntersection);
LIntExport Herror union_cocircular_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *UnionContours, const Halcon::HTuple &MaxArcAngleDiff, const Halcon::HTuple &MaxArcOverlap, const Halcon::HTuple &MaxTangentAngle, const Halcon::HTuple &MaxDist, const Halcon::HTuple &MaxRadiusDiff, const Halcon::HTuple &MaxCenterDist, const Halcon::HTuple &MergeSmallContours, const Halcon::HTuple &Iterations);
LIntExport Herror union_cocircular_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *UnionContours, double MaxArcAngleDiff, double MaxArcOverlap, double MaxTangentAngle, double MaxDist, double MaxRadiusDiff, double MaxCenterDist, const char *MergeSmallContours, Hlong Iterations);
LIntExport Herror crop_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *CroppedContours, const Halcon::HTuple &Row1, const Halcon::HTuple &Col1, const Halcon::HTuple &Row2, const Halcon::HTuple &Col2, const Halcon::HTuple &CloseContours);
LIntExport Herror crop_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *CroppedContours, double Row1, double Col1, double Row2, double Col2, const char *CloseContours);
LIntExport Herror gen_cross_contour_xld(Halcon::Hobject *Cross, const Halcon::HTuple &Row, const Halcon::HTuple &Col, const Halcon::HTuple &Size, const Halcon::HTuple &Angle);
LIntExport Herror gen_cross_contour_xld(Halcon::Hobject *Cross, double Row, double Col, double Size, double Angle);
LIntExport Herror sort_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *SortedContours, const Halcon::HTuple &SortMode, const Halcon::HTuple &Order, const Halcon::HTuple &RowOrCol);
LIntExport Herror sort_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *SortedContours, const char *SortMode, const char *Order, const char *RowOrCol);
LIntExport Herror merge_cont_line_scan_xld(const Halcon::Hobject &CurrConts, const Halcon::Hobject &PrevConts, Halcon::Hobject *CurrMergedConts, Halcon::Hobject *PrevMergedConts, const Halcon::HTuple &ImageHeight, const Halcon::HTuple &Margin, const Halcon::HTuple &MergeBorder, const Halcon::HTuple &MaxImagesCont);
LIntExport Herror merge_cont_line_scan_xld(const Halcon::Hobject &CurrConts, const Halcon::Hobject &PrevConts,Halcon::Hobject *CurrMergedConts,Halcon::Hobject *PrevMergedConts, Hlong ImageHeight, double Margin, const char *MergeBorder, Hlong MaxImagesCont);
LIntExport Herror read_polygon_xld_arc_info(Halcon::Hobject *Polygons, const Halcon::HTuple &FileName);
LIntExport Herror read_polygon_xld_arc_info(Halcon::Hobject *Polygons, const char *FileName);
LIntExport Herror write_polygon_xld_arc_info(const Halcon::Hobject &Polygons, const Halcon::HTuple &FileName);
LIntExport Herror write_polygon_xld_arc_info(const Halcon::Hobject &Polygons, const char *FileName);
LIntExport Herror read_contour_xld_arc_info(Halcon::Hobject *Contours, const Halcon::HTuple &FileName);
LIntExport Herror read_contour_xld_arc_info(Halcon::Hobject *Contours, const char *FileName);
LIntExport Herror write_contour_xld_arc_info(const Halcon::Hobject &Contours, const Halcon::HTuple &FileName);
LIntExport Herror write_contour_xld_arc_info(const Halcon::Hobject &Contours, const char *FileName);
LIntExport Herror read_world_file(const Halcon::HTuple &FileName, Halcon::HTuple *WorldTransformation);
LIntExport Herror read_world_file(const char *FileName, Halcon::HTuple *WorldTransformation);
LIntExport Herror gen_parallel_contour_xld(const Halcon::Hobject &Contours, Halcon::Hobject *ParallelContours, const Halcon::HTuple &Mode, const Halcon::HTuple &Distance);
LIntExport Herror gen_parallel_contour_xld(const Halcon::Hobject &Contours,Halcon::Hobject *ParallelContours, const char *Mode, double Distance);
LIntExport Herror gen_rectangle2_contour_xld(Halcon::Hobject *Rectangle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2);
LIntExport Herror gen_rectangle2_contour_xld(Halcon::Hobject *Rectangle, double Row, double Column, double Phi, double Length1, double Length2);
LIntExport Herror dist_rectangle2_contour_points_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2, Halcon::HTuple *Distances);
LIntExport Herror dist_rectangle2_contour_points_xld(const Halcon::Hobject &Contour, Hlong ClippingEndPoints, double Row, double Column, double Phi, double Length1, double Length2, Halcon::HTuple *Distances);
LIntExport Herror fit_rectangle2_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Algorithm, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &MaxClosureDist, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2, Halcon::HTuple *PointOrder);
LIntExport Herror fit_rectangle2_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Algorithm, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &MaxClosureDist, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, double *Row, double *Column, double *Phi, double *Length1, double *Length2, char *PointOrder);
LIntExport Herror fit_rectangle2_contour_xld(const Halcon::Hobject &Contours, const char *Algorithm, Hlong MaxNumPoints, double MaxClosureDist, Hlong ClippingEndPoints, Hlong Iterations, double ClippingFactor, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2, Halcon::HTuple *PointOrder);
LIntExport Herror fit_rectangle2_contour_xld(const Halcon::Hobject &Contours, const char *Algorithm, Hlong MaxNumPoints, double MaxClosureDist, Hlong ClippingEndPoints, Hlong Iterations, double ClippingFactor, double *Row, double *Column, double *Phi, double *Length1, double *Length2, char *PointOrder);
LIntExport Herror segment_contour_attrib_xld(const Halcon::Hobject &Contour, Halcon::Hobject *ContourPart, const Halcon::HTuple &Attribute, const Halcon::HTuple &Operation, const Halcon::HTuple &Min, const Halcon::HTuple &Max);
LIntExport Herror segment_contour_attrib_xld(const Halcon::Hobject &Contour,Halcon::Hobject *ContourPart, const char *Attribute, const char *Operation, double Min, double Max);
LIntExport Herror segment_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *ContoursSplit, const Halcon::HTuple &Mode, const Halcon::HTuple &SmoothCont, const Halcon::HTuple &MaxLineDist1, const Halcon::HTuple &MaxLineDist2);
LIntExport Herror segment_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *ContoursSplit, const char *Mode, Hlong SmoothCont, double MaxLineDist1, double MaxLineDist2);
LIntExport Herror fit_circle_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Algorithm, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &MaxClosureDist, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Radius, Halcon::HTuple *StartPhi, Halcon::HTuple *EndPhi, Halcon::HTuple *PointOrder);
LIntExport Herror fit_circle_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Algorithm, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &MaxClosureDist, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, double *Row, double *Column, double *Radius, double *StartPhi, double *EndPhi, char *PointOrder);
LIntExport Herror fit_circle_contour_xld(const Halcon::Hobject &Contours, const char *Algorithm, Hlong MaxNumPoints, double MaxClosureDist, Hlong ClippingEndPoints, Hlong Iterations, double ClippingFactor, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Radius, Halcon::HTuple *StartPhi, Halcon::HTuple *EndPhi, Halcon::HTuple *PointOrder);
LIntExport Herror fit_circle_contour_xld(const Halcon::Hobject &Contours, const char *Algorithm, Hlong MaxNumPoints, double MaxClosureDist, Hlong ClippingEndPoints, Hlong Iterations, double ClippingFactor, double *Row, double *Column, double *Radius, double *StartPhi, double *EndPhi, char *PointOrder);
LIntExport Herror fit_line_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Algorithm, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, Halcon::HTuple *RowBegin, Halcon::HTuple *ColBegin, Halcon::HTuple *RowEnd, Halcon::HTuple *ColEnd, Halcon::HTuple *Nr, Halcon::HTuple *Nc, Halcon::HTuple *Dist);
LIntExport Herror fit_line_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Algorithm, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, double *RowBegin, double *ColBegin, double *RowEnd, double *ColEnd, double *Nr, double *Nc, double *Dist);
LIntExport Herror fit_line_contour_xld(const Halcon::Hobject &Contours, const char *Algorithm, Hlong MaxNumPoints, Hlong ClippingEndPoints, Hlong Iterations, double ClippingFactor, Halcon::HTuple *RowBegin, Halcon::HTuple *ColBegin, Halcon::HTuple *RowEnd, Halcon::HTuple *ColEnd, Halcon::HTuple *Nr, Halcon::HTuple *Nc, Halcon::HTuple *Dist);
LIntExport Herror fit_line_contour_xld(const Halcon::Hobject &Contours, const char *Algorithm, Hlong MaxNumPoints, Hlong ClippingEndPoints, Hlong Iterations, double ClippingFactor, double *RowBegin, double *ColBegin, double *RowEnd, double *ColEnd, double *Nr, double *Nc, double *Dist);
LIntExport Herror dist_ellipse_contour_points_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &DistanceMode, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, Halcon::HTuple *Distances);
LIntExport Herror dist_ellipse_contour_points_xld(const Halcon::Hobject &Contour, const char *DistanceMode, Hlong ClippingEndPoints, double Row, double Column, double Phi, double Radius1, double Radius2, Halcon::HTuple *Distances);
LIntExport Herror dist_ellipse_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Mode, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, Halcon::HTuple *MinDist, Halcon::HTuple *MaxDist, Halcon::HTuple *AvgDist, Halcon::HTuple *SigmaDist);
LIntExport Herror dist_ellipse_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Mode, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, double *MinDist, double *MaxDist, double *AvgDist, double *SigmaDist);
LIntExport Herror dist_ellipse_contour_xld(const Halcon::Hobject &Contours, const char *Mode, Hlong MaxNumPoints, Hlong ClippingEndPoints, double Row, double Column, double Phi, double Radius1, double Radius2, Halcon::HTuple *MinDist, Halcon::HTuple *MaxDist, Halcon::HTuple *AvgDist, Halcon::HTuple *SigmaDist);
LIntExport Herror dist_ellipse_contour_xld(const Halcon::Hobject &Contours, const char *Mode, Hlong MaxNumPoints, Hlong ClippingEndPoints, double Row, double Column, double Phi, double Radius1, double Radius2, double *MinDist, double *MaxDist, double *AvgDist, double *SigmaDist);
LIntExport Herror fit_ellipse_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Algorithm, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &MaxClosureDist, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &VossTabSize, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Radius1, Halcon::HTuple *Radius2, Halcon::HTuple *StartPhi, Halcon::HTuple *EndPhi, Halcon::HTuple *PointOrder);
LIntExport Herror fit_ellipse_contour_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &Algorithm, const Halcon::HTuple &MaxNumPoints, const Halcon::HTuple &MaxClosureDist, const Halcon::HTuple &ClippingEndPoints, const Halcon::HTuple &VossTabSize, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, double *Row, double *Column, double *Phi, double *Radius1, double *Radius2, double *StartPhi, double *EndPhi, char *PointOrder);
LIntExport Herror fit_ellipse_contour_xld(const Halcon::Hobject &Contours, const char *Algorithm, Hlong MaxNumPoints, double MaxClosureDist, Hlong ClippingEndPoints, Hlong VossTabSize, Hlong Iterations, double ClippingFactor, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Radius1, Halcon::HTuple *Radius2, Halcon::HTuple *StartPhi, Halcon::HTuple *EndPhi, Halcon::HTuple *PointOrder);
LIntExport Herror fit_ellipse_contour_xld(const Halcon::Hobject &Contours, const char *Algorithm, Hlong MaxNumPoints, double MaxClosureDist, Hlong ClippingEndPoints, Hlong VossTabSize, Hlong Iterations, double ClippingFactor, double *Row, double *Column, double *Phi, double *Radius1, double *Radius2, double *StartPhi, double *EndPhi, char *PointOrder);
LIntExport Herror gen_circle_contour_xld(Halcon::Hobject *ContCircle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius, const Halcon::HTuple &StartPhi, const Halcon::HTuple &EndPhi, const Halcon::HTuple &PointOrder, const Halcon::HTuple &Resolution);
LIntExport Herror gen_circle_contour_xld(Halcon::Hobject *ContCircle, double Row, double Column, double Radius, double StartPhi, double EndPhi, const char *PointOrder, double Resolution);
LIntExport Herror gen_ellipse_contour_xld(Halcon::Hobject *ContEllipse, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, const Halcon::HTuple &StartPhi, const Halcon::HTuple &EndPhi, const Halcon::HTuple &PointOrder, const Halcon::HTuple &Resolution);
LIntExport Herror gen_ellipse_contour_xld(Halcon::Hobject *ContEllipse, double Row, double Column, double Phi, double Radius1, double Radius2, double StartPhi, double EndPhi, const char *PointOrder, double Resolution);
LIntExport Herror add_noise_white_contour_xld(const Halcon::Hobject &Contours, Halcon::Hobject *NoisyContours, const Halcon::HTuple &NumRegrPoints, const Halcon::HTuple &Amp);
LIntExport Herror add_noise_white_contour_xld(const Halcon::Hobject &Contours,Halcon::Hobject *NoisyContours, Hlong NumRegrPoints, double Amp);
LIntExport Herror combine_roads_xld(const Halcon::Hobject &EdgePolygons, const Halcon::Hobject &ModParallels, const Halcon::Hobject &ExtParallels, const Halcon::Hobject &CenterLines, Halcon::Hobject *RoadSides, const Halcon::HTuple &MaxAngleParallel, const Halcon::HTuple &MaxAngleColinear, const Halcon::HTuple &MaxDistanceParallel, const Halcon::HTuple &MaxDistanceColinear);
LIntExport Herror combine_roads_xld(const Halcon::Hobject &EdgePolygons, const Halcon::Hobject &ModParallels, const Halcon::Hobject &ExtParallels, const Halcon::Hobject &CenterLines,Halcon::Hobject *RoadSides, double MaxAngleParallel, double MaxAngleColinear, double MaxDistanceParallel, double MaxDistanceColinear);
LIntExport Herror max_parallels_xld(const Halcon::Hobject &ExtParallels, Halcon::Hobject *MaxPolygons);
LIntExport Herror mod_parallels_xld(const Halcon::Hobject &Parallels, const Halcon::Hobject &Image, Halcon::Hobject *ModParallels, Halcon::Hobject *ExtParallels, const Halcon::HTuple &Quality, const Halcon::HTuple &MinGray, const Halcon::HTuple &MaxGray, const Halcon::HTuple &MaxStandard);
LIntExport Herror mod_parallels_xld(const Halcon::Hobject &Parallels, const Halcon::Hobject &Image,Halcon::Hobject *ModParallels,Halcon::Hobject *ExtParallels, double Quality, Hlong MinGray, Hlong MaxGray, double MaxStandard);
LIntExport Herror info_parallels_xld(const Halcon::Hobject &Parallels, const Halcon::Hobject &Image, Halcon::HTuple *QualityMin, Halcon::HTuple *QualityMax, Halcon::HTuple *GrayMin, Halcon::HTuple *GrayMax, Halcon::HTuple *StandardMin, Halcon::HTuple *StandardMax);
LIntExport Herror info_parallels_xld(const Halcon::Hobject &Parallels, const Halcon::Hobject &Image, double *QualityMin, double *QualityMax, Hlong *GrayMin, Hlong *GrayMax, double *StandardMin, double *StandardMax);
LIntExport Herror get_parallels_xld(const Halcon::Hobject &Parallels, Halcon::HTuple *Row1, Halcon::HTuple *Col1, Halcon::HTuple *Length1, Halcon::HTuple *Phi1, Halcon::HTuple *Row2, Halcon::HTuple *Col2, Halcon::HTuple *Length2, Halcon::HTuple *Phi2);
LIntExport Herror gen_parallels_xld(const Halcon::Hobject &Polygons, Halcon::Hobject *Parallels, const Halcon::HTuple &Len, const Halcon::HTuple &Dist, const Halcon::HTuple &Alpha, const Halcon::HTuple &Merge);
LIntExport Herror gen_parallels_xld(const Halcon::Hobject &Polygons,Halcon::Hobject *Parallels, double Len, double Dist, double Alpha, const char *Merge);
LIntExport Herror get_lines_xld(const Halcon::Hobject &Polygon, Halcon::HTuple *BeginRow, Halcon::HTuple *BeginCol, Halcon::HTuple *EndRow, Halcon::HTuple *EndCol, Halcon::HTuple *Length, Halcon::HTuple *Phi);
LIntExport Herror get_polygon_xld(const Halcon::Hobject &Polygon, Halcon::HTuple *Row, Halcon::HTuple *Col, Halcon::HTuple *Length, Halcon::HTuple *Phi);
LIntExport Herror gen_polygons_xld(const Halcon::Hobject &Contours, Halcon::Hobject *Polygons, const Halcon::HTuple &Type, const Halcon::HTuple &Alpha);
LIntExport Herror gen_polygons_xld(const Halcon::Hobject &Contours,Halcon::Hobject *Polygons, const char *Type, double Alpha);
LIntExport Herror split_contours_xld(const Halcon::Hobject &Polygons, Halcon::Hobject *Contours, const Halcon::HTuple &Mode, const Halcon::HTuple &Weight, const Halcon::HTuple &Smooth);
LIntExport Herror split_contours_xld(const Halcon::Hobject &Polygons,Halcon::Hobject *Contours, const char *Mode, Hlong Weight, Hlong Smooth);
LIntExport Herror projective_trans_contour_xld(const Halcon::Hobject &Contours, Halcon::Hobject *ContoursProjTrans, const Halcon::HTuple &HomMat2D);
LIntExport Herror affine_trans_polygon_xld(const Halcon::Hobject &Polygons, Halcon::Hobject *PolygonsAffineTrans, const Halcon::HTuple &HomMat2D);
LIntExport Herror affine_trans_contour_xld(const Halcon::Hobject &Contours, Halcon::Hobject *ContoursAffineTrans, const Halcon::HTuple &HomMat2D);
LIntExport Herror close_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *ClosedContours);
LIntExport Herror clip_end_points_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *ClippedContours, const Halcon::HTuple &Mode, const Halcon::HTuple &Length);
LIntExport Herror clip_end_points_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *ClippedContours, const char *Mode, double Length);
LIntExport Herror clip_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *ClippedContours, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2);
LIntExport Herror clip_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *ClippedContours, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror local_max_contours_xld(const Halcon::Hobject &Contours, const Halcon::Hobject &Image, Halcon::Hobject *LocalMaxContours, const Halcon::HTuple &MinPercent, const Halcon::HTuple &MinDiff, const Halcon::HTuple &Distance);
LIntExport Herror local_max_contours_xld(const Halcon::Hobject &Contours, const Halcon::Hobject &Image,Halcon::Hobject *LocalMaxContours, Hlong MinPercent, Hlong MinDiff, Hlong Distance);
LIntExport Herror union_straight_contours_histo_xld(const Halcon::Hobject &Contours, Halcon::Hobject *UnionContours, Halcon::Hobject *SelectedContours, const Halcon::HTuple &RefLineStartRow, const Halcon::HTuple &RefLineStartColumn, const Halcon::HTuple &RefLineEndRow, const Halcon::HTuple &RefLineEndColumn, const Halcon::HTuple &Width, const Halcon::HTuple &MaxWidth, const Halcon::HTuple &FilterSize, Halcon::HTuple *HistoValues);
LIntExport Herror union_straight_contours_histo_xld(const Halcon::Hobject &Contours,Halcon::Hobject *UnionContours,Halcon::Hobject *SelectedContours, Hlong RefLineStartRow, Hlong RefLineStartColumn, Hlong RefLineEndRow, Hlong RefLineEndColumn, Hlong Width, Hlong MaxWidth, Hlong FilterSize, Halcon::HTuple *HistoValues);
LIntExport Herror union_straight_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *UnionContours, const Halcon::HTuple &MaxDist, const Halcon::HTuple &MaxDiff, const Halcon::HTuple &Percent, const Halcon::HTuple &Mode, const Halcon::HTuple &Iterations);
LIntExport Herror union_collinear_contours_ext_xld(const Halcon::Hobject &Contours, Halcon::Hobject *UnionContours, const Halcon::HTuple &MaxDistAbs, const Halcon::HTuple &MaxDistRel, const Halcon::HTuple &MaxShift, const Halcon::HTuple &MaxAngle, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &MaxRegrError, const Halcon::HTuple &MaxCosts, const Halcon::HTuple &WeightDist, const Halcon::HTuple &WeightShift, const Halcon::HTuple &WeightAngle, const Halcon::HTuple &WeightLink, const Halcon::HTuple &WeightRegr, const Halcon::HTuple &Mode);
LIntExport Herror union_collinear_contours_ext_xld(const Halcon::Hobject &Contours,Halcon::Hobject *UnionContours, double MaxDistAbs, double MaxDistRel, double MaxShift, double MaxAngle, double MaxOverlap, double MaxRegrError, double MaxCosts, double WeightDist, double WeightShift, double WeightAngle, double WeightLink, double WeightRegr, const char *Mode);
LIntExport Herror union_collinear_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *UnionContours, const Halcon::HTuple &MaxDistAbs, const Halcon::HTuple &MaxDistRel, const Halcon::HTuple &MaxShift, const Halcon::HTuple &MaxAngle, const Halcon::HTuple &Mode);
LIntExport Herror union_collinear_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *UnionContours, double MaxDistAbs, double MaxDistRel, double MaxShift, double MaxAngle, const char *Mode);
LIntExport Herror union_adjacent_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *UnionContours, const Halcon::HTuple &MaxDistAbs, const Halcon::HTuple &MaxDistRel, const Halcon::HTuple &Mode);
LIntExport Herror union_adjacent_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *UnionContours, double MaxDistAbs, double MaxDistRel, const char *Mode);
LIntExport Herror select_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *SelectedContours, const Halcon::HTuple &Feature, const Halcon::HTuple &Min1, const Halcon::HTuple &Max1, const Halcon::HTuple &Min2, const Halcon::HTuple &Max2);
LIntExport Herror select_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *SelectedContours, const char *Feature, double Min1, double Max1, double Min2, double Max2);
LIntExport Herror get_regress_params_xld(const Halcon::Hobject &Contours, Halcon::HTuple *Length, Halcon::HTuple *Nx, Halcon::HTuple *Ny, Halcon::HTuple *Dist, Halcon::HTuple *Fpx, Halcon::HTuple *Fpy, Halcon::HTuple *Lpx, Halcon::HTuple *Lpy, Halcon::HTuple *Mean, Halcon::HTuple *Deviation);
LIntExport Herror regress_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *RegressContours, const Halcon::HTuple &Mode, const Halcon::HTuple &Iterations);
LIntExport Herror regress_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *RegressContours, const char *Mode, Hlong Iterations);
LIntExport Herror get_contour_angle_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &AngleMode, const Halcon::HTuple &CalcMode, const Halcon::HTuple &Lookaround, Halcon::HTuple *Angles);
LIntExport Herror get_contour_angle_xld(const Halcon::Hobject &Contour, const char *AngleMode, const char *CalcMode, Hlong Lookaround, Halcon::HTuple *Angles);
LIntExport Herror smooth_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *SmoothedContours, const Halcon::HTuple &NumRegrPoints);
LIntExport Herror smooth_contours_xld(const Halcon::Hobject &Contours,Halcon::Hobject *SmoothedContours, Hlong NumRegrPoints);
LIntExport Herror contour_point_num_xld(const Halcon::Hobject &Contour, Halcon::HTuple *Length);
LIntExport Herror contour_point_num_xld(const Halcon::Hobject &Contour, Hlong *Length);
LIntExport Herror query_contour_global_attribs_xld(const Halcon::Hobject &Contour, Halcon::HTuple *Attribs);
LIntExport Herror get_contour_global_attrib_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &Name, Halcon::HTuple *Attrib);
LIntExport Herror get_contour_global_attrib_xld(const Halcon::Hobject &Contour, const char *Name, Halcon::HTuple *Attrib);
LIntExport Herror query_contour_attribs_xld(const Halcon::Hobject &Contour, Halcon::HTuple *Attribs);
LIntExport Herror get_contour_attrib_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &Name, Halcon::HTuple *Attrib);
LIntExport Herror get_contour_attrib_xld(const Halcon::Hobject &Contour, const char *Name, Halcon::HTuple *Attrib);
LIntExport Herror get_contour_xld(const Halcon::Hobject &Contour, Halcon::HTuple *Row, Halcon::HTuple *Col);
LIntExport Herror gen_contour_region_xld(const Halcon::Hobject &Regions, Halcon::Hobject *Contours, const Halcon::HTuple &Mode);
LIntExport Herror gen_contour_region_xld(const Halcon::Hobject &Regions,Halcon::Hobject *Contours, const char *Mode);
LIntExport Herror gen_contour_polygon_rounded_xld(Halcon::Hobject *Contour, const Halcon::HTuple &Row, const Halcon::HTuple &Col, const Halcon::HTuple &Radius, const Halcon::HTuple &SamplingInterval);
LIntExport Herror gen_contour_polygon_xld(Halcon::Hobject *Contour, const Halcon::HTuple &Row, const Halcon::HTuple &Col);
LIntExport Herror gen_contours_skeleton_xld(const Halcon::Hobject &Skeleton, Halcon::Hobject *Contours, const Halcon::HTuple &Length, const Halcon::HTuple &Mode);
LIntExport Herror gen_contours_skeleton_xld(const Halcon::Hobject &Skeleton,Halcon::Hobject *Contours, Hlong Length, const char *Mode);
LIntExport Herror disp_xld(const Halcon::Hobject &XLDObject, const Halcon::HTuple &WindowHandle);
LIntExport Herror disp_xld(const Halcon::Hobject &XLDObject, Hlong WindowHandle);
LIntExport Herror wiener_filter_ni(const Halcon::Hobject &Image, const Halcon::Hobject &Psf, const Halcon::Hobject &NoiseRegion, Halcon::Hobject *RestoredImage, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight);
LIntExport Herror wiener_filter_ni(const Halcon::Hobject &Image, const Halcon::Hobject &Psf, const Halcon::Hobject &NoiseRegion,Halcon::Hobject *RestoredImage, Hlong MaskWidth, Hlong MaskHeight);
LIntExport Herror wiener_filter(const Halcon::Hobject &Image, const Halcon::Hobject &Psf, const Halcon::Hobject &FilteredImage, Halcon::Hobject *RestoredImage);
LIntExport Herror gen_psf_motion(Halcon::Hobject *Psf, const Halcon::HTuple &PSFwidth, const Halcon::HTuple &PSFheight, const Halcon::HTuple &Blurring, const Halcon::HTuple &Angle, const Halcon::HTuple &Type);
LIntExport Herror gen_psf_motion(Halcon::Hobject *Psf, Hlong PSFwidth, Hlong PSFheight, double Blurring, Hlong Angle, Hlong Type);
LIntExport Herror simulate_motion(const Halcon::Hobject &Image, Halcon::Hobject *MovedImage, const Halcon::HTuple &Blurring, const Halcon::HTuple &Angle, const Halcon::HTuple &Type);
LIntExport Herror simulate_motion(const Halcon::Hobject &Image,Halcon::Hobject *MovedImage, double Blurring, Hlong Angle, Hlong Type);
LIntExport Herror gen_psf_defocus(Halcon::Hobject *Psf, const Halcon::HTuple &PSFwidth, const Halcon::HTuple &PSFheight, const Halcon::HTuple &Blurring);
LIntExport Herror gen_psf_defocus(Halcon::Hobject *Psf, Hlong PSFwidth, Hlong PSFheight, double Blurring);
LIntExport Herror simulate_defocus(const Halcon::Hobject &Image, Halcon::Hobject *DefocusedImage, const Halcon::HTuple &Blurring);
LIntExport Herror simulate_defocus(const Halcon::Hobject &Image,Halcon::Hobject *DefocusedImage, double Blurring);
LIntExport Herror deserialize_variation_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_variation_model(const Halcon::HTuple &SerializedItemHandle, Hlong *ModelID);
LIntExport Herror deserialize_variation_model(Hlong SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_variation_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror serialize_variation_model(const Halcon::HTuple &ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_variation_model(const Halcon::HTuple &ModelID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_variation_model(Hlong ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_variation_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror read_variation_model(const Halcon::HTuple &FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_variation_model(const Halcon::HTuple &FileName, Hlong *ModelID);
LIntExport Herror read_variation_model(const char *FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_variation_model(const char *FileName, Hlong *ModelID);
LIntExport Herror write_variation_model(const Halcon::HTuple &ModelID, const Halcon::HTuple &FileName);
LIntExport Herror write_variation_model(Hlong ModelID, const char *FileName);
LIntExport Herror get_thresh_images_variation_model(Halcon::Hobject *MinImage, Halcon::Hobject *MaxImage, const Halcon::HTuple &ModelID);
LIntExport Herror get_thresh_images_variation_model(Halcon::Hobject *MinImage,Halcon::Hobject *MaxImage, Hlong ModelID);
LIntExport Herror get_variation_model(Halcon::Hobject *Image, Halcon::Hobject *VarImage, const Halcon::HTuple &ModelID);
LIntExport Herror get_variation_model(Halcon::Hobject *Image,Halcon::Hobject *VarImage, Hlong ModelID);
LIntExport Herror compare_ext_variation_model(const Halcon::Hobject &Image, Halcon::Hobject *Region, const Halcon::HTuple &ModelID, const Halcon::HTuple &Mode);
LIntExport Herror compare_ext_variation_model(const Halcon::Hobject &Image,Halcon::Hobject *Region, Hlong ModelID, const char *Mode);
LIntExport Herror compare_variation_model(const Halcon::Hobject &Image, Halcon::Hobject *Region, const Halcon::HTuple &ModelID);
LIntExport Herror compare_variation_model(const Halcon::Hobject &Image,Halcon::Hobject *Region, Hlong ModelID);
LIntExport Herror prepare_direct_variation_model(const Halcon::Hobject &RefImage, const Halcon::Hobject &VarImage, const Halcon::HTuple &ModelID, const Halcon::HTuple &AbsThreshold, const Halcon::HTuple &VarThreshold);
LIntExport Herror prepare_direct_variation_model(const Halcon::Hobject &RefImage, const Halcon::Hobject &VarImage, Hlong ModelID, double AbsThreshold, double VarThreshold);
LIntExport Herror prepare_variation_model(const Halcon::HTuple &ModelID, const Halcon::HTuple &AbsThreshold, const Halcon::HTuple &VarThreshold);
LIntExport Herror prepare_variation_model(Hlong ModelID, double AbsThreshold, double VarThreshold);
LIntExport Herror train_variation_model(const Halcon::Hobject &Images, const Halcon::HTuple &ModelID);
LIntExport Herror train_variation_model(const Halcon::Hobject &Images, Hlong ModelID);
LIntExport Herror clear_all_variation_models(void);
LIntExport Herror clear_variation_model(const Halcon::HTuple &ModelID);
LIntExport Herror clear_variation_model(Hlong ModelID);
LIntExport Herror clear_train_data_variation_model(const Halcon::HTuple &ModelID);
LIntExport Herror clear_train_data_variation_model(Hlong ModelID);
LIntExport Herror create_variation_model(const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Type, const Halcon::HTuple &Mode, Halcon::HTuple *ModelID);
LIntExport Herror create_variation_model(const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Type, const Halcon::HTuple &Mode, Hlong *ModelID);
LIntExport Herror create_variation_model(Hlong Width, Hlong Height, const char *Type, const char *Mode, Halcon::HTuple *ModelID);
LIntExport Herror create_variation_model(Hlong Width, Hlong Height, const char *Type, const char *Mode, Hlong *ModelID);
LIntExport Herror tuple_union(const Halcon::HTuple &Set1, const Halcon::HTuple &Set2, Halcon::HTuple *Union);
LIntExport Herror tuple_union(const Halcon::HTuple &Set1, const Halcon::HTuple &Set2, Hlong *Union);
LIntExport Herror tuple_intersection(const Halcon::HTuple &Set1, const Halcon::HTuple &Set2, Halcon::HTuple *Intersection);
LIntExport Herror tuple_intersection(const Halcon::HTuple &Set1, const Halcon::HTuple &Set2, Hlong *Intersection);
LIntExport Herror tuple_difference(const Halcon::HTuple &Set1, const Halcon::HTuple &Set2, Halcon::HTuple *Difference);
LIntExport Herror tuple_difference(const Halcon::HTuple &Set1, const Halcon::HTuple &Set2, Hlong *Difference);
LIntExport Herror tuple_symmdiff(const Halcon::HTuple &Set1, const Halcon::HTuple &Set2, Halcon::HTuple *SymmDiff);
LIntExport Herror tuple_symmdiff(const Halcon::HTuple &Set1, const Halcon::HTuple &Set2, Hlong *SymmDiff);
LIntExport Herror tuple_is_string_elem(const Halcon::HTuple &T, Halcon::HTuple *IsString);
LIntExport Herror tuple_is_string_elem(const Halcon::HTuple &T, Hlong *IsString);
LIntExport Herror tuple_is_real_elem(const Halcon::HTuple &T, Halcon::HTuple *IsReal);
LIntExport Herror tuple_is_real_elem(const Halcon::HTuple &T, Hlong *IsReal);
LIntExport Herror tuple_is_int_elem(const Halcon::HTuple &T, Halcon::HTuple *IsInt);
LIntExport Herror tuple_is_int_elem(const Halcon::HTuple &T, Hlong *IsInt);
LIntExport Herror tuple_type_elem(const Halcon::HTuple &T, Halcon::HTuple *Types);
LIntExport Herror tuple_type_elem(const Halcon::HTuple &T, Hlong *Types);
LIntExport Herror tuple_is_mixed(const Halcon::HTuple &T, Halcon::HTuple *IsMixed);
LIntExport Herror tuple_is_mixed(const Halcon::HTuple &T, Hlong *IsMixed);
LIntExport Herror tuple_is_string(const Halcon::HTuple &T, Halcon::HTuple *IsString);
LIntExport Herror tuple_is_string(const Halcon::HTuple &T, Hlong *IsString);
LIntExport Herror tuple_is_real(const Halcon::HTuple &T, Halcon::HTuple *IsReal);
LIntExport Herror tuple_is_real(const Halcon::HTuple &T, Hlong *IsReal);
LIntExport Herror tuple_is_int(const Halcon::HTuple &T, Halcon::HTuple *IsInt);
LIntExport Herror tuple_is_int(const Halcon::HTuple &T, Hlong *IsInt);
LIntExport Herror tuple_type(const Halcon::HTuple &T, Halcon::HTuple *Type);
LIntExport Herror tuple_type(const Halcon::HTuple &T, Hlong *Type);
LIntExport Herror tuple_histo_range(const Halcon::HTuple &Tuple, const Halcon::HTuple &Min, const Halcon::HTuple &Max, const Halcon::HTuple &NumBins, Halcon::HTuple *Histo, Halcon::HTuple *BinSize);
LIntExport Herror tuple_histo_range(const Halcon::HTuple &Tuple, const Halcon::HTuple &Min, const Halcon::HTuple &Max, const Halcon::HTuple &NumBins, Hlong *Histo, double *BinSize);
LIntExport Herror tuple_regexp_select(const Halcon::HTuple &Data, const Halcon::HTuple &Expression, Halcon::HTuple *Selection);
LIntExport Herror tuple_regexp_select(const Halcon::HTuple &Data, const Halcon::HTuple &Expression, char *Selection);
LIntExport Herror tuple_regexp_select(const char *Data, const char *Expression, Halcon::HTuple *Selection);
LIntExport Herror tuple_regexp_select(const char *Data, const char *Expression, char *Selection);
LIntExport Herror tuple_regexp_test(const Halcon::HTuple &Data, const Halcon::HTuple &Expression, Halcon::HTuple *NumMatches);
LIntExport Herror tuple_regexp_test(const Halcon::HTuple &Data, const Halcon::HTuple &Expression, Hlong *NumMatches);
LIntExport Herror tuple_regexp_test(const char *Data, const char *Expression, Halcon::HTuple *NumMatches);
LIntExport Herror tuple_regexp_test(const char *Data, const char *Expression, Hlong *NumMatches);
LIntExport Herror tuple_regexp_replace(const Halcon::HTuple &Data, const Halcon::HTuple &Expression, const Halcon::HTuple &Replace, Halcon::HTuple *Result);
LIntExport Herror tuple_regexp_replace(const Halcon::HTuple &Data, const Halcon::HTuple &Expression, const Halcon::HTuple &Replace, char *Result);
LIntExport Herror tuple_regexp_replace(const char *Data, const char *Expression, const char *Replace, Halcon::HTuple *Result);
LIntExport Herror tuple_regexp_replace(const char *Data, const char *Expression, const char *Replace, char *Result);
LIntExport Herror tuple_regexp_match(const Halcon::HTuple &Data, const Halcon::HTuple &Expression, Halcon::HTuple *Matches);
LIntExport Herror tuple_regexp_match(const Halcon::HTuple &Data, const Halcon::HTuple &Expression, char *Matches);
LIntExport Herror tuple_regexp_match(const char *Data, const char *Expression, Halcon::HTuple *Matches);
LIntExport Herror tuple_regexp_match(const char *Data, const char *Expression, char *Matches);
LIntExport Herror tuple_rand(const Halcon::HTuple &Length, Halcon::HTuple *Rand);
LIntExport Herror tuple_rand(const Halcon::HTuple &Length, double *Rand);
LIntExport Herror tuple_rand(Hlong Length, Halcon::HTuple *Rand);
LIntExport Herror tuple_rand(Hlong Length, double *Rand);
LIntExport Herror tuple_length(const Halcon::HTuple &Tuple, Halcon::HTuple *Length);
LIntExport Herror tuple_length(const Halcon::HTuple &Tuple, Hlong *Length);
LIntExport Herror tuple_sgn(const Halcon::HTuple &T, Halcon::HTuple *Sgn);
LIntExport Herror tuple_sgn(const Halcon::HTuple &T, Hlong *Sgn);
LIntExport Herror tuple_max2(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Max2);
LIntExport Herror tuple_max2(const Halcon::HTuple &T1, const Halcon::HTuple &T2, double *Max2);
LIntExport Herror tuple_min2(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Min2);
LIntExport Herror tuple_min2(const Halcon::HTuple &T1, const Halcon::HTuple &T2, double *Min2);
LIntExport Herror tuple_max(const Halcon::HTuple &Tuple, Halcon::HTuple *Max);
LIntExport Herror tuple_max(const Halcon::HTuple &Tuple, double *Max);
LIntExport Herror tuple_min(const Halcon::HTuple &Tuple, Halcon::HTuple *Min);
LIntExport Herror tuple_min(const Halcon::HTuple &Tuple, double *Min);
LIntExport Herror tuple_cumul(const Halcon::HTuple &Tuple, Halcon::HTuple *Cumul);
LIntExport Herror tuple_cumul(const Halcon::HTuple &Tuple, double *Cumul);
LIntExport Herror tuple_select_rank(const Halcon::HTuple &Tuple, const Halcon::HTuple &RankIndex, Halcon::HTuple *Selected);
LIntExport Herror tuple_select_rank(const Halcon::HTuple &Tuple, const Halcon::HTuple &RankIndex, Hlong *Selected);
LIntExport Herror tuple_median(const Halcon::HTuple &Tuple, Halcon::HTuple *Median);
LIntExport Herror tuple_median(const Halcon::HTuple &Tuple, Hlong *Median);
LIntExport Herror tuple_sum(const Halcon::HTuple &Tuple, Halcon::HTuple *Sum);
LIntExport Herror tuple_sum(const Halcon::HTuple &Tuple, double *Sum);
LIntExport Herror tuple_mean(const Halcon::HTuple &Tuple, Halcon::HTuple *Mean);
LIntExport Herror tuple_mean(const Halcon::HTuple &Tuple, double *Mean);
LIntExport Herror tuple_deviation(const Halcon::HTuple &Tuple, Halcon::HTuple *Deviation);
LIntExport Herror tuple_deviation(const Halcon::HTuple &Tuple, double *Deviation);
LIntExport Herror tuple_uniq(const Halcon::HTuple &Tuple, Halcon::HTuple *Uniq);
LIntExport Herror tuple_uniq(const Halcon::HTuple &Tuple, Hlong *Uniq);
LIntExport Herror tuple_find_last(const Halcon::HTuple &Tuple, const Halcon::HTuple &ToFind, Halcon::HTuple *Index);
LIntExport Herror tuple_find_last(const Halcon::HTuple &Tuple, const Halcon::HTuple &ToFind, Hlong *Index);
LIntExport Herror tuple_find_first(const Halcon::HTuple &Tuple, const Halcon::HTuple &ToFind, Halcon::HTuple *Index);
LIntExport Herror tuple_find_first(const Halcon::HTuple &Tuple, const Halcon::HTuple &ToFind, Hlong *Index);
LIntExport Herror tuple_find(const Halcon::HTuple &Tuple, const Halcon::HTuple &ToFind, Halcon::HTuple *Indices);
LIntExport Herror tuple_find(const Halcon::HTuple &Tuple, const Halcon::HTuple &ToFind, Hlong *Indices);
LIntExport Herror tuple_sort_index(const Halcon::HTuple &Tuple, Halcon::HTuple *Indices);
LIntExport Herror tuple_sort_index(const Halcon::HTuple &Tuple, Hlong *Indices);
LIntExport Herror tuple_sort(const Halcon::HTuple &Tuple, Halcon::HTuple *Sorted);
LIntExport Herror tuple_sort(const Halcon::HTuple &Tuple, Hlong *Sorted);
LIntExport Herror tuple_inverse(const Halcon::HTuple &Tuple, Halcon::HTuple *Inverted);
LIntExport Herror tuple_inverse(const Halcon::HTuple &Tuple, Hlong *Inverted);
LIntExport Herror tuple_concat(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Concat);
LIntExport Herror tuple_concat(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Concat);
LIntExport Herror tuple_select_range(const Halcon::HTuple &Tuple, const Halcon::HTuple &Leftindex, const Halcon::HTuple &Rightindex, Halcon::HTuple *Selected);
LIntExport Herror tuple_select_range(const Halcon::HTuple &Tuple, const Halcon::HTuple &Leftindex, const Halcon::HTuple &Rightindex, Hlong *Selected);
LIntExport Herror tuple_last_n(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, Halcon::HTuple *Selected);
LIntExport Herror tuple_last_n(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, Hlong *Selected);
LIntExport Herror tuple_first_n(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, Halcon::HTuple *Selected);
LIntExport Herror tuple_first_n(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, Hlong *Selected);
LIntExport Herror tuple_insert(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, const Halcon::HTuple &InsertTuple, Halcon::HTuple *Extended);
LIntExport Herror tuple_replace(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, const Halcon::HTuple &ReplaceTuple, Halcon::HTuple *Replaced);
LIntExport Herror tuple_remove(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, Halcon::HTuple *Reduced);
LIntExport Herror tuple_remove(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, Hlong *Reduced);
LIntExport Herror tuple_select_mask(const Halcon::HTuple &Tuple, const Halcon::HTuple &Mask, Halcon::HTuple *Selected);
LIntExport Herror tuple_select_mask(const Halcon::HTuple &Tuple, const Halcon::HTuple &Mask, Hlong *Selected);
LIntExport Herror tuple_select(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, Halcon::HTuple *Selected);
LIntExport Herror tuple_select(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, Hlong *Selected);
LIntExport Herror tuple_str_bit_select(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, Halcon::HTuple *Selected);
LIntExport Herror tuple_str_bit_select(const Halcon::HTuple &Tuple, const Halcon::HTuple &Index, char *Selected);
LIntExport Herror tuple_gen_sequence(const Halcon::HTuple &Start, const Halcon::HTuple &End, const Halcon::HTuple &Step, Halcon::HTuple *Sequence);
LIntExport Herror tuple_gen_sequence(const Halcon::HTuple &Start, const Halcon::HTuple &End, const Halcon::HTuple &Step, Hlong *Sequence);
LIntExport Herror tuple_gen_const(const Halcon::HTuple &Length, const Halcon::HTuple &Const, Halcon::HTuple *Newtuple);
LIntExport Herror tuple_gen_const(const Halcon::HTuple &Length, const Halcon::HTuple &Const, Hlong *Newtuple);
LIntExport Herror tuple_environment(const Halcon::HTuple &Names, Halcon::HTuple *Values);
LIntExport Herror tuple_environment(const Halcon::HTuple &Names, char *Values);
LIntExport Herror tuple_environment(const char *Names, Halcon::HTuple *Values);
LIntExport Herror tuple_environment(const char *Names, char *Values);
LIntExport Herror tuple_split(const Halcon::HTuple &String, const Halcon::HTuple &Separator, Halcon::HTuple *Substrings);
LIntExport Herror tuple_split(const Halcon::HTuple &String, const Halcon::HTuple &Separator, char *Substrings);
LIntExport Herror tuple_split(const char *String, const char *Separator, Halcon::HTuple *Substrings);
LIntExport Herror tuple_split(const char *String, const char *Separator, char *Substrings);
LIntExport Herror tuple_substr(const Halcon::HTuple &String, const Halcon::HTuple &Position1, const Halcon::HTuple &Position2, Halcon::HTuple *Substring);
LIntExport Herror tuple_substr(const Halcon::HTuple &String, const Halcon::HTuple &Position1, const Halcon::HTuple &Position2, char *Substring);
LIntExport Herror tuple_str_last_n(const Halcon::HTuple &String, const Halcon::HTuple &Position, Halcon::HTuple *Substring);
LIntExport Herror tuple_str_last_n(const Halcon::HTuple &String, const Halcon::HTuple &Position, char *Substring);
LIntExport Herror tuple_str_first_n(const Halcon::HTuple &String, const Halcon::HTuple &Position, Halcon::HTuple *Substring);
LIntExport Herror tuple_str_first_n(const Halcon::HTuple &String, const Halcon::HTuple &Position, char *Substring);
LIntExport Herror tuple_strrchr(const Halcon::HTuple &String, const Halcon::HTuple &ToFind, Halcon::HTuple *Position);
LIntExport Herror tuple_strrchr(const Halcon::HTuple &String, const Halcon::HTuple &ToFind, Hlong *Position);
LIntExport Herror tuple_strrchr(const char *String, const char *ToFind, Halcon::HTuple *Position);
LIntExport Herror tuple_strrchr(const char *String, const char *ToFind, Hlong *Position);
LIntExport Herror tuple_strchr(const Halcon::HTuple &String, const Halcon::HTuple &ToFind, Halcon::HTuple *Position);
LIntExport Herror tuple_strchr(const Halcon::HTuple &String, const Halcon::HTuple &ToFind, Hlong *Position);
LIntExport Herror tuple_strchr(const char *String, const char *ToFind, Halcon::HTuple *Position);
LIntExport Herror tuple_strchr(const char *String, const char *ToFind, Hlong *Position);
LIntExport Herror tuple_strrstr(const Halcon::HTuple &String, const Halcon::HTuple &ToFind, Halcon::HTuple *Position);
LIntExport Herror tuple_strrstr(const Halcon::HTuple &String, const Halcon::HTuple &ToFind, Hlong *Position);
LIntExport Herror tuple_strrstr(const char *String, const char *ToFind, Halcon::HTuple *Position);
LIntExport Herror tuple_strrstr(const char *String, const char *ToFind, Hlong *Position);
LIntExport Herror tuple_strstr(const Halcon::HTuple &String, const Halcon::HTuple &ToFind, Halcon::HTuple *Position);
LIntExport Herror tuple_strstr(const Halcon::HTuple &String, const Halcon::HTuple &ToFind, Hlong *Position);
LIntExport Herror tuple_strstr(const char *String, const char *ToFind, Halcon::HTuple *Position);
LIntExport Herror tuple_strstr(const char *String, const char *ToFind, Hlong *Position);
LIntExport Herror tuple_strlen(const Halcon::HTuple &T1, Halcon::HTuple *Length);
LIntExport Herror tuple_strlen(const Halcon::HTuple &T1, Hlong *Length);
LIntExport Herror tuple_strlen(const char *T1, Halcon::HTuple *Length);
LIntExport Herror tuple_strlen(const char *T1, Hlong *Length);
LIntExport Herror tuple_less_equal_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Lesseq);
LIntExport Herror tuple_less_equal_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Lesseq);
LIntExport Herror tuple_less_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Less);
LIntExport Herror tuple_less_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Less);
LIntExport Herror tuple_greater_equal_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Greatereq);
LIntExport Herror tuple_greater_equal_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Greatereq);
LIntExport Herror tuple_greater_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Greater);
LIntExport Herror tuple_greater_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Greater);
LIntExport Herror tuple_not_equal_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Nequal);
LIntExport Herror tuple_not_equal_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Nequal);
LIntExport Herror tuple_equal_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Equal);
LIntExport Herror tuple_equal_elem(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Equal);
LIntExport Herror tuple_less_equal(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Lesseq);
LIntExport Herror tuple_less_equal(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Lesseq);
LIntExport Herror tuple_less(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Less);
LIntExport Herror tuple_less(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Less);
LIntExport Herror tuple_greater_equal(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Greatereq);
LIntExport Herror tuple_greater_equal(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Greatereq);
LIntExport Herror tuple_greater(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Greater);
LIntExport Herror tuple_greater(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Greater);
LIntExport Herror tuple_not_equal(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Nequal);
LIntExport Herror tuple_not_equal(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Nequal);
LIntExport Herror tuple_equal(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Equal);
LIntExport Herror tuple_equal(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Equal);
LIntExport Herror tuple_not(const Halcon::HTuple &T, Halcon::HTuple *Not);
LIntExport Herror tuple_not(const Halcon::HTuple &T, Hlong *Not);
LIntExport Herror tuple_not(Hlong T, Halcon::HTuple *Not);
LIntExport Herror tuple_not(Hlong T, Hlong *Not);
LIntExport Herror tuple_xor(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Xor);
LIntExport Herror tuple_xor(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Xor);
LIntExport Herror tuple_xor(Hlong T1, Hlong T2, Halcon::HTuple *Xor);
LIntExport Herror tuple_xor(Hlong T1, Hlong T2, Hlong *Xor);
LIntExport Herror tuple_or(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Or);
LIntExport Herror tuple_or(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Or);
LIntExport Herror tuple_or(Hlong T1, Hlong T2, Halcon::HTuple *Or);
LIntExport Herror tuple_or(Hlong T1, Hlong T2, Hlong *Or);
LIntExport Herror tuple_and(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *And);
LIntExport Herror tuple_and(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *And);
LIntExport Herror tuple_and(Hlong T1, Hlong T2, Halcon::HTuple *And);
LIntExport Herror tuple_and(Hlong T1, Hlong T2, Hlong *And);
LIntExport Herror tuple_bnot(const Halcon::HTuple &T, Halcon::HTuple *BNot);
LIntExport Herror tuple_bnot(const Halcon::HTuple &T, Hlong *BNot);
LIntExport Herror tuple_bnot(Hlong T, Halcon::HTuple *BNot);
LIntExport Herror tuple_bnot(Hlong T, Hlong *BNot);
LIntExport Herror tuple_bxor(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *BXor);
LIntExport Herror tuple_bxor(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *BXor);
LIntExport Herror tuple_bxor(Hlong T1, Hlong T2, Halcon::HTuple *BXor);
LIntExport Herror tuple_bxor(Hlong T1, Hlong T2, Hlong *BXor);
LIntExport Herror tuple_bor(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *BOr);
LIntExport Herror tuple_bor(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *BOr);
LIntExport Herror tuple_bor(Hlong T1, Hlong T2, Halcon::HTuple *BOr);
LIntExport Herror tuple_bor(Hlong T1, Hlong T2, Hlong *BOr);
LIntExport Herror tuple_band(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *BAnd);
LIntExport Herror tuple_band(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *BAnd);
LIntExport Herror tuple_band(Hlong T1, Hlong T2, Halcon::HTuple *BAnd);
LIntExport Herror tuple_band(Hlong T1, Hlong T2, Hlong *BAnd);
LIntExport Herror tuple_rsh(const Halcon::HTuple &T, const Halcon::HTuple &Shift, Halcon::HTuple *Rsh);
LIntExport Herror tuple_rsh(const Halcon::HTuple &T, const Halcon::HTuple &Shift, Hlong *Rsh);
LIntExport Herror tuple_rsh(Hlong T, Hlong Shift, Halcon::HTuple *Rsh);
LIntExport Herror tuple_rsh(Hlong T, Hlong Shift, Hlong *Rsh);
LIntExport Herror tuple_lsh(const Halcon::HTuple &T, const Halcon::HTuple &Shift, Halcon::HTuple *Lsh);
LIntExport Herror tuple_lsh(const Halcon::HTuple &T, const Halcon::HTuple &Shift, Hlong *Lsh);
LIntExport Herror tuple_lsh(Hlong T, Hlong Shift, Halcon::HTuple *Lsh);
LIntExport Herror tuple_lsh(Hlong T, Hlong Shift, Hlong *Lsh);
LIntExport Herror tuple_chrt(const Halcon::HTuple &T, Halcon::HTuple *Chrt);
LIntExport Herror tuple_chrt(const Halcon::HTuple &T, char *Chrt);
LIntExport Herror tuple_chrt(Hlong T, Halcon::HTuple *Chrt);
LIntExport Herror tuple_chrt(Hlong T, char *Chrt);
LIntExport Herror tuple_ords(const Halcon::HTuple &T, Halcon::HTuple *Ords);
LIntExport Herror tuple_ords(const Halcon::HTuple &T, Hlong *Ords);
LIntExport Herror tuple_chr(const Halcon::HTuple &T, Halcon::HTuple *Chr);
LIntExport Herror tuple_chr(const Halcon::HTuple &T, char *Chr);
LIntExport Herror tuple_chr(Hlong T, Halcon::HTuple *Chr);
LIntExport Herror tuple_chr(Hlong T, char *Chr);
LIntExport Herror tuple_ord(const Halcon::HTuple &T, Halcon::HTuple *Ord);
LIntExport Herror tuple_ord(const Halcon::HTuple &T, Hlong *Ord);
LIntExport Herror tuple_ord(const char *T, Halcon::HTuple *Ord);
LIntExport Herror tuple_ord(const char *T, Hlong *Ord);
LIntExport Herror tuple_string(const Halcon::HTuple &T, const Halcon::HTuple &Format, Halcon::HTuple *String);
LIntExport Herror tuple_string(const Halcon::HTuple &T, const Halcon::HTuple &Format, char *String);
LIntExport Herror tuple_is_number(const Halcon::HTuple &T, Halcon::HTuple *IsNumber);
LIntExport Herror tuple_is_number(const Halcon::HTuple &T, Hlong *IsNumber);
LIntExport Herror tuple_number(const Halcon::HTuple &T, Halcon::HTuple *Number);
LIntExport Herror tuple_number(const Halcon::HTuple &T, double *Number);
LIntExport Herror tuple_round(const Halcon::HTuple &T, Halcon::HTuple *Round);
LIntExport Herror tuple_round(const Halcon::HTuple &T, Hlong *Round);
LIntExport Herror tuple_int(const Halcon::HTuple &T, Halcon::HTuple *Int);
LIntExport Herror tuple_int(const Halcon::HTuple &T, Hlong *Int);
LIntExport Herror tuple_real(const Halcon::HTuple &T, Halcon::HTuple *Real);
LIntExport Herror tuple_real(const Halcon::HTuple &T, double *Real);
LIntExport Herror tuple_ldexp(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Ldexp);
LIntExport Herror tuple_ldexp(const Halcon::HTuple &T1, const Halcon::HTuple &T2, double *Ldexp);
LIntExport Herror tuple_fmod(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Fmod);
LIntExport Herror tuple_fmod(const Halcon::HTuple &T1, const Halcon::HTuple &T2, double *Fmod);
LIntExport Herror tuple_mod(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Mod);
LIntExport Herror tuple_mod(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Hlong *Mod);
LIntExport Herror tuple_mod(Hlong T1, Hlong T2, Halcon::HTuple *Mod);
LIntExport Herror tuple_mod(Hlong T1, Hlong T2, Hlong *Mod);
LIntExport Herror tuple_ceil(const Halcon::HTuple &T, Halcon::HTuple *Ceil);
LIntExport Herror tuple_ceil(const Halcon::HTuple &T, double *Ceil);
LIntExport Herror tuple_floor(const Halcon::HTuple &T, Halcon::HTuple *Floor);
LIntExport Herror tuple_floor(const Halcon::HTuple &T, double *Floor);
LIntExport Herror tuple_pow(const Halcon::HTuple &T1, const Halcon::HTuple &T2, Halcon::HTuple *Pow);
LIntExport Herror tuple_pow(const Halcon::HTuple &T1, const Halcon::HTuple &T2, double *Pow);
LIntExport Herror tuple_log10(const Halcon::HTuple &T, Halcon::HTuple *Log);
LIntExport Herror tuple_log10(const Halcon::HTuple &T, double *Log);
LIntExport Herror tuple_log(const Halcon::HTuple &T, Halcon::HTuple *Log);
LIntExport Herror tuple_log(const Halcon::HTuple &T, double *Log);
LIntExport Herror tuple_exp(const Halcon::HTuple &T, Halcon::HTuple *Exp);
LIntExport Herror tuple_exp(const Halcon::HTuple &T, double *Exp);
LIntExport Herror tuple_tanh(const Halcon::HTuple &T, Halcon::HTuple *Tanh);
LIntExport Herror tuple_tanh(const Halcon::HTuple &T, double *Tanh);
LIntExport Herror tuple_cosh(const Halcon::HTuple &T, Halcon::HTuple *Cosh);
LIntExport Herror tuple_cosh(const Halcon::HTuple &T, double *Cosh);
LIntExport Herror tuple_sinh(const Halcon::HTuple &T, Halcon::HTuple *Sinh);
LIntExport Herror tuple_sinh(const Halcon::HTuple &T, double *Sinh);
LIntExport Herror tuple_rad(const Halcon::HTuple &Deg, Halcon::HTuple *Rad);
LIntExport Herror tuple_rad(const Halcon::HTuple &Deg, double *Rad);
LIntExport Herror tuple_deg(const Halcon::HTuple &Rad, Halcon::HTuple *Deg);
LIntExport Herror tuple_deg(const Halcon::HTuple &Rad, double *Deg);
LIntExport Herror tuple_atan2(const Halcon::HTuple &Y, const Halcon::HTuple &X, Halcon::HTuple *ATan);
LIntExport Herror tuple_atan2(const Halcon::HTuple &Y, const Halcon::HTuple &X, double *ATan);
LIntExport Herror tuple_atan(const Halcon::HTuple &T, Halcon::HTuple *ATan);
LIntExport Herror tuple_atan(const Halcon::HTuple &T, double *ATan);
LIntExport Herror tuple_acos(const Halcon::HTuple &T, Halcon::HTuple *ACos);
LIntExport Herror tuple_acos(const Halcon::HTuple &T, double *ACos);
LIntExport Herror tuple_asin(const Halcon::HTuple &T, Halcon::HTuple *ASin);
LIntExport Herror tuple_asin(const Halcon::HTuple &T, double *ASin);
LIntExport Herror tuple_tan(const Halcon::HTuple &T, Halcon::HTuple *Tan);
LIntExport Herror tuple_tan(const Halcon::HTuple &T, double *Tan);
LIntExport Herror tuple_cos(const Halcon::HTuple &T, Halcon::HTuple *Cos);
LIntExport Herror tuple_cos(const Halcon::HTuple &T, double *Cos);
LIntExport Herror tuple_sin(const Halcon::HTuple &T, Halcon::HTuple *Sin);
LIntExport Herror tuple_sin(const Halcon::HTuple &T, double *Sin);
LIntExport Herror tuple_fabs(const Halcon::HTuple &T, Halcon::HTuple *Abs);
LIntExport Herror tuple_fabs(const Halcon::HTuple &T, double *Abs);
LIntExport Herror tuple_sqrt(const Halcon::HTuple &T, Halcon::HTuple *Sqrt);
LIntExport Herror tuple_sqrt(const Halcon::HTuple &T, double *Sqrt);
LIntExport Herror tuple_abs(const Halcon::HTuple &T, Halcon::HTuple *Abs);
LIntExport Herror tuple_abs(const Halcon::HTuple &T, double *Abs);
LIntExport Herror tuple_neg(const Halcon::HTuple &T, Halcon::HTuple *Neg);
LIntExport Herror tuple_neg(const Halcon::HTuple &T, double *Neg);
LIntExport Herror tuple_div(const Halcon::HTuple &Q1, const Halcon::HTuple &Q2, Halcon::HTuple *Quot);
LIntExport Herror tuple_div(const Halcon::HTuple &Q1, const Halcon::HTuple &Q2, double *Quot);
LIntExport Herror tuple_mult(const Halcon::HTuple &P1, const Halcon::HTuple &P2, Halcon::HTuple *Prod);
LIntExport Herror tuple_mult(const Halcon::HTuple &P1, const Halcon::HTuple &P2, double *Prod);
LIntExport Herror tuple_sub(const Halcon::HTuple &D1, const Halcon::HTuple &D2, Halcon::HTuple *Diff);
LIntExport Herror tuple_sub(const Halcon::HTuple &D1, const Halcon::HTuple &D2, double *Diff);
LIntExport Herror tuple_add(const Halcon::HTuple &S1, const Halcon::HTuple &S2, Halcon::HTuple *Sum);
LIntExport Herror tuple_add(const Halcon::HTuple &S1, const Halcon::HTuple &S2, double *Sum);
LIntExport Herror deserialize_tuple(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *Tuple);
LIntExport Herror deserialize_tuple(const Halcon::HTuple &SerializedItemHandle, double *Tuple);
LIntExport Herror deserialize_tuple(Hlong SerializedItemHandle, Halcon::HTuple *Tuple);
LIntExport Herror deserialize_tuple(Hlong SerializedItemHandle, double *Tuple);
LIntExport Herror serialize_tuple(const Halcon::HTuple &Tuple, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_tuple(const Halcon::HTuple &Tuple, Hlong *SerializedItemHandle);
LIntExport Herror serialize_tuple(double Tuple, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_tuple(double Tuple, Hlong *SerializedItemHandle);
LIntExport Herror write_tuple(const Halcon::HTuple &Tuple, const Halcon::HTuple &FileName);
LIntExport Herror read_tuple(const Halcon::HTuple &FileName, Halcon::HTuple *Tuple);
LIntExport Herror read_tuple(const Halcon::HTuple &FileName, double *Tuple);
LIntExport Herror read_tuple(const char *FileName, Halcon::HTuple *Tuple);
LIntExport Herror read_tuple(const char *FileName, double *Tuple);
LIntExport Herror pose_average(const Halcon::HTuple &Poses, const Halcon::HTuple &Weights, const Halcon::HTuple &Mode, const Halcon::HTuple &SigmaT, const Halcon::HTuple &SigmaR, Halcon::HTuple *AveragePose, Halcon::HTuple *Quality);
LIntExport Herror quat_rotate_point_3d(const Halcon::HTuple &Quaternion, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, Halcon::HTuple *Qx, Halcon::HTuple *Qy, Halcon::HTuple *Qz);
LIntExport Herror quat_rotate_point_3d(const Halcon::HTuple &Quaternion, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, double *Qx, double *Qy, double *Qz);
LIntExport Herror quat_conjugate(const Halcon::HTuple &Quaternion, Halcon::HTuple *ConjugatedQuaternion);
LIntExport Herror quat_normalize(const Halcon::HTuple &Quaternion, Halcon::HTuple *NormalizedQuaternion);
LIntExport Herror axis_angle_to_quat(const Halcon::HTuple &AxisX, const Halcon::HTuple &AxisY, const Halcon::HTuple &AxisZ, const Halcon::HTuple &Angle, Halcon::HTuple *Quaternion);
LIntExport Herror axis_angle_to_quat(double AxisX, double AxisY, double AxisZ, double Angle, Halcon::HTuple *Quaternion);
LIntExport Herror quat_to_pose(const Halcon::HTuple &Quaternion, Halcon::HTuple *Pose);
LIntExport Herror pose_invert(const Halcon::HTuple &Pose, Halcon::HTuple *PoseInvert);
LIntExport Herror pose_compose(const Halcon::HTuple &PoseLeft, const Halcon::HTuple &PoseRight, Halcon::HTuple *PoseCompose);
LIntExport Herror quat_to_hom_mat3d(const Halcon::HTuple &Quaternion, Halcon::HTuple *RotationMatrix);
LIntExport Herror pose_to_quat(const Halcon::HTuple &Pose, Halcon::HTuple *Quaternion);
LIntExport Herror quat_interpolate(const Halcon::HTuple &QuaternionStart, const Halcon::HTuple &QuaternionEnd, const Halcon::HTuple &InterpPos, Halcon::HTuple *QuaternionInterpolated);
LIntExport Herror quat_compose(const Halcon::HTuple &QuaternionLeft, const Halcon::HTuple &QuaternionRight, Halcon::HTuple *QuaternionComposed);
LIntExport Herror deserialize_hom_mat3d(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *HomMat3D);
LIntExport Herror deserialize_hom_mat3d(Hlong SerializedItemHandle, Halcon::HTuple *HomMat3D);
LIntExport Herror serialize_hom_mat3d(const Halcon::HTuple &HomMat3D, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_hom_mat3d(const Halcon::HTuple &HomMat3D, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_hom_mat2d(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *HomMat2D);
LIntExport Herror deserialize_hom_mat2d(Hlong SerializedItemHandle, Halcon::HTuple *HomMat2D);
LIntExport Herror serialize_hom_mat2d(const Halcon::HTuple &HomMat2D, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_hom_mat2d(const Halcon::HTuple &HomMat2D, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_quat(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *Quaternion);
LIntExport Herror deserialize_quat(Hlong SerializedItemHandle, Halcon::HTuple *Quaternion);
LIntExport Herror serialize_quat(const Halcon::HTuple &Quaternion, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_quat(const Halcon::HTuple &Quaternion, Hlong *SerializedItemHandle);
LIntExport Herror projective_trans_hom_point_3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, const Halcon::HTuple &Pw, Halcon::HTuple *Qx, Halcon::HTuple *Qy, Halcon::HTuple *Qz, Halcon::HTuple *Qw);
LIntExport Herror projective_trans_hom_point_3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, const Halcon::HTuple &Pw, double *Qx, double *Qy, double *Qz, double *Qw);
LIntExport Herror projective_trans_point_3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, Halcon::HTuple *Qx, Halcon::HTuple *Qy, Halcon::HTuple *Qz);
LIntExport Herror projective_trans_point_3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, double *Qx, double *Qy, double *Qz);
LIntExport Herror affine_trans_point_3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, Halcon::HTuple *Qx, Halcon::HTuple *Qy, Halcon::HTuple *Qz);
LIntExport Herror affine_trans_point_3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, double *Qx, double *Qy, double *Qz);
LIntExport Herror vector_to_hom_mat3d(const Halcon::HTuple &TransformationType, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, const Halcon::HTuple &Qx, const Halcon::HTuple &Qy, const Halcon::HTuple &Qz, Halcon::HTuple *HomMat3D);
LIntExport Herror hom_mat3d_determinant(const Halcon::HTuple &HomMat3D, Halcon::HTuple *Determinant);
LIntExport Herror hom_mat3d_determinant(const Halcon::HTuple &HomMat3D, double *Determinant);
LIntExport Herror hom_mat3d_transpose(const Halcon::HTuple &HomMat3D, Halcon::HTuple *HomMat3DTranspose);
LIntExport Herror hom_mat3d_invert(const Halcon::HTuple &HomMat3D, Halcon::HTuple *HomMat3DInvert);
LIntExport Herror hom_mat3d_compose(const Halcon::HTuple &HomMat3DLeft, const Halcon::HTuple &HomMat3DRight, Halcon::HTuple *HomMat3DCompose);
LIntExport Herror hom_mat3d_rotate_local(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Phi, const Halcon::HTuple &Axis, Halcon::HTuple *HomMat3DRotate);
LIntExport Herror hom_mat3d_rotate(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Phi, const Halcon::HTuple &Axis, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, Halcon::HTuple *HomMat3DRotate);
LIntExport Herror hom_mat3d_scale_local(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Sx, const Halcon::HTuple &Sy, const Halcon::HTuple &Sz, Halcon::HTuple *HomMat3DScale);
LIntExport Herror hom_mat3d_scale(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Sx, const Halcon::HTuple &Sy, const Halcon::HTuple &Sz, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, Halcon::HTuple *HomMat3DScale);
LIntExport Herror hom_mat3d_translate_local(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Tx, const Halcon::HTuple &Ty, const Halcon::HTuple &Tz, Halcon::HTuple *HomMat3DTranslate);
LIntExport Herror hom_mat3d_translate(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Tx, const Halcon::HTuple &Ty, const Halcon::HTuple &Tz, Halcon::HTuple *HomMat3DTranslate);
LIntExport Herror hom_mat3d_identity(Halcon::HTuple *HomMat3DIdentity);
LIntExport Herror hom_mat3d_project(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &PrincipalPointRow, const Halcon::HTuple &PrincipalPointCol, const Halcon::HTuple &Focus, Halcon::HTuple *HomMat2D);
LIntExport Herror bundle_adjust_mosaic(const Halcon::HTuple &NumImages, const Halcon::HTuple &ReferenceImage, const Halcon::HTuple &MappingSource, const Halcon::HTuple &MappingDest, const Halcon::HTuple &HomMatrices2D, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &NumCorrespondences, const Halcon::HTuple &Transformation, Halcon::HTuple *MosaicMatrices2D, Halcon::HTuple *Rows, Halcon::HTuple *Cols, Halcon::HTuple *Error);
LIntExport Herror proj_match_points_distortion_ransac_guided(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &GrayMatchMethod, const Halcon::HTuple &MaskSize, const Halcon::HTuple &HomMat2DGuide, const Halcon::HTuple &KappaGuide, const Halcon::HTuple &DistanceTolerance, const Halcon::HTuple &MatchThreshold, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &DistanceThreshold, const Halcon::HTuple &RandSeed, Halcon::HTuple *HomMat2D, Halcon::HTuple *Kappa, Halcon::HTuple *Error, Halcon::HTuple *Points1, Halcon::HTuple *Points2);
LIntExport Herror proj_match_points_distortion_ransac(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &GrayMatchMethod, const Halcon::HTuple &MaskSize, const Halcon::HTuple &RowMove, const Halcon::HTuple &ColMove, const Halcon::HTuple &RowTolerance, const Halcon::HTuple &ColTolerance, const Halcon::HTuple &Rotation, const Halcon::HTuple &MatchThreshold, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &DistanceThreshold, const Halcon::HTuple &RandSeed, Halcon::HTuple *HomMat2D, Halcon::HTuple *Kappa, Halcon::HTuple *Error, Halcon::HTuple *Points1, Halcon::HTuple *Points2);
LIntExport Herror proj_match_points_ransac_guided(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &GrayMatchMethod, const Halcon::HTuple &MaskSize, const Halcon::HTuple &HomMat2DGuide, const Halcon::HTuple &DistanceTolerance, const Halcon::HTuple &MatchThreshold, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &DistanceThreshold, const Halcon::HTuple &RandSeed, Halcon::HTuple *HomMat2D, Halcon::HTuple *Points1, Halcon::HTuple *Points2);
LIntExport Herror proj_match_points_ransac(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &GrayMatchMethod, const Halcon::HTuple &MaskSize, const Halcon::HTuple &RowMove, const Halcon::HTuple &ColMove, const Halcon::HTuple &RowTolerance, const Halcon::HTuple &ColTolerance, const Halcon::HTuple &Rotation, const Halcon::HTuple &MatchThreshold, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &DistanceThreshold, const Halcon::HTuple &RandSeed, Halcon::HTuple *HomMat2D, Halcon::HTuple *Points1, Halcon::HTuple *Points2);
LIntExport Herror vector_to_proj_hom_mat2d_distortion(const Halcon::HTuple &Points1Row, const Halcon::HTuple &Points1Col, const Halcon::HTuple &Points2Row, const Halcon::HTuple &Points2Col, const Halcon::HTuple &CovRR1, const Halcon::HTuple &CovRC1, const Halcon::HTuple &CovCC1, const Halcon::HTuple &CovRR2, const Halcon::HTuple &CovRC2, const Halcon::HTuple &CovCC2, const Halcon::HTuple &ImageWidth, const Halcon::HTuple &ImageHeight, const Halcon::HTuple &Method, Halcon::HTuple *HomMat2D, Halcon::HTuple *Kappa, Halcon::HTuple *Error);
LIntExport Herror hom_vector_to_proj_hom_mat2d(const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pw, const Halcon::HTuple &Qx, const Halcon::HTuple &Qy, const Halcon::HTuple &Qw, const Halcon::HTuple &Method, Halcon::HTuple *HomMat2D);
LIntExport Herror vector_to_proj_hom_mat2d(const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Qx, const Halcon::HTuple &Qy, const Halcon::HTuple &Method, const Halcon::HTuple &CovXX1, const Halcon::HTuple &CovYY1, const Halcon::HTuple &CovXY1, const Halcon::HTuple &CovXX2, const Halcon::HTuple &CovYY2, const Halcon::HTuple &CovXY2, Halcon::HTuple *HomMat2D, Halcon::HTuple *Covariance);
LIntExport Herror hom_mat2d_to_affine_par(const Halcon::HTuple &HomMat2D, Halcon::HTuple *Sx, Halcon::HTuple *Sy, Halcon::HTuple *Phi, Halcon::HTuple *Theta, Halcon::HTuple *Tx, Halcon::HTuple *Ty);
LIntExport Herror hom_mat2d_to_affine_par(const Halcon::HTuple &HomMat2D, double *Sx, double *Sy, double *Phi, double *Theta, double *Tx, double *Ty);
LIntExport Herror vector_angle_to_rigid(const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Angle1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, const Halcon::HTuple &Angle2, Halcon::HTuple *HomMat2D);
LIntExport Herror vector_angle_to_rigid(double Row1, double Column1, double Angle1, double Row2, double Column2, double Angle2, Halcon::HTuple *HomMat2D);
LIntExport Herror point_line_to_hom_mat2d(const Halcon::HTuple &TransformationType, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &L1x, const Halcon::HTuple &L1y, const Halcon::HTuple &L2x, const Halcon::HTuple &L2y, Halcon::HTuple *HomMat2D);
LIntExport Herror vector_to_rigid(const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Qx, const Halcon::HTuple &Qy, Halcon::HTuple *HomMat2D);
LIntExport Herror vector_to_similarity(const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Qx, const Halcon::HTuple &Qy, Halcon::HTuple *HomMat2D);
LIntExport Herror vector_to_aniso(const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Qx, const Halcon::HTuple &Qy, Halcon::HTuple *HomMat2D);
LIntExport Herror vector_to_hom_mat2d(const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Qx, const Halcon::HTuple &Qy, Halcon::HTuple *HomMat2D);
LIntExport Herror projective_trans_pixel(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Row, const Halcon::HTuple &Col, Halcon::HTuple *RowTrans, Halcon::HTuple *ColTrans);
LIntExport Herror projective_trans_pixel(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Row, const Halcon::HTuple &Col, double *RowTrans, double *ColTrans);
LIntExport Herror projective_trans_point_2d(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pw, Halcon::HTuple *Qx, Halcon::HTuple *Qy, Halcon::HTuple *Qw);
LIntExport Herror projective_trans_point_2d(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pw, double *Qx, double *Qy, double *Qw);
LIntExport Herror affine_trans_pixel(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Row, const Halcon::HTuple &Col, Halcon::HTuple *RowTrans, Halcon::HTuple *ColTrans);
LIntExport Herror affine_trans_pixel(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Row, const Halcon::HTuple &Col, double *RowTrans, double *ColTrans);
LIntExport Herror affine_trans_point_2d(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, Halcon::HTuple *Qx, Halcon::HTuple *Qy);
LIntExport Herror affine_trans_point_2d(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, double *Qx, double *Qy);
LIntExport Herror hom_mat2d_determinant(const Halcon::HTuple &HomMat2D, Halcon::HTuple *Determinant);
LIntExport Herror hom_mat2d_determinant(const Halcon::HTuple &HomMat2D, double *Determinant);
LIntExport Herror hom_mat2d_transpose(const Halcon::HTuple &HomMat2D, Halcon::HTuple *HomMat2DTranspose);
LIntExport Herror hom_mat2d_invert(const Halcon::HTuple &HomMat2D, Halcon::HTuple *HomMat2DInvert);
LIntExport Herror hom_mat2d_compose(const Halcon::HTuple &HomMat2DLeft, const Halcon::HTuple &HomMat2DRight, Halcon::HTuple *HomMat2DCompose);
LIntExport Herror hom_mat2d_reflect_local(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, Halcon::HTuple *HomMat2DReflect);
LIntExport Herror hom_mat2d_reflect(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Qx, const Halcon::HTuple &Qy, Halcon::HTuple *HomMat2DReflect);
LIntExport Herror hom_mat2d_slant_local(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Theta, const Halcon::HTuple &Axis, Halcon::HTuple *HomMat2DSlant);
LIntExport Herror hom_mat2d_slant(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Theta, const Halcon::HTuple &Axis, const Halcon::HTuple &Px, const Halcon::HTuple &Py, Halcon::HTuple *HomMat2DSlant);
LIntExport Herror hom_mat2d_rotate_local(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Phi, Halcon::HTuple *HomMat2DRotate);
LIntExport Herror hom_mat2d_rotate(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Phi, const Halcon::HTuple &Px, const Halcon::HTuple &Py, Halcon::HTuple *HomMat2DRotate);
LIntExport Herror hom_mat2d_scale_local(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Sx, const Halcon::HTuple &Sy, Halcon::HTuple *HomMat2DScale);
LIntExport Herror hom_mat2d_scale(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Sx, const Halcon::HTuple &Sy, const Halcon::HTuple &Px, const Halcon::HTuple &Py, Halcon::HTuple *HomMat2DScale);
LIntExport Herror hom_mat2d_translate_local(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Tx, const Halcon::HTuple &Ty, Halcon::HTuple *HomMat2DTranslate);
LIntExport Herror hom_mat2d_translate(const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Tx, const Halcon::HTuple &Ty, Halcon::HTuple *HomMat2DTranslate);
LIntExport Herror hom_mat2d_identity(Halcon::HTuple *HomMat2DIdentity);
LIntExport Herror clear_all_scattered_data_interpolators(void);
LIntExport Herror clear_scattered_data_interpolator(const Halcon::HTuple &ScatteredDataInterpolatorHandle);
LIntExport Herror clear_scattered_data_interpolator(Hlong ScatteredDataInterpolatorHandle);
LIntExport Herror interpolate_scattered_data(const Halcon::HTuple &ScatteredDataInterpolatorHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *ValueInterpolated);
LIntExport Herror interpolate_scattered_data(const Halcon::HTuple &ScatteredDataInterpolatorHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, double *ValueInterpolated);
LIntExport Herror interpolate_scattered_data(Hlong ScatteredDataInterpolatorHandle, double Row, double Column, Halcon::HTuple *ValueInterpolated);
LIntExport Herror interpolate_scattered_data(Hlong ScatteredDataInterpolatorHandle, double Row, double Column, double *ValueInterpolated);
LIntExport Herror create_scattered_data_interpolator(const Halcon::HTuple &Method, const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, const Halcon::HTuple &Values, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *ScatteredDataInterpolatorHandle);
LIntExport Herror create_scattered_data_interpolator(const Halcon::HTuple &Method, const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, const Halcon::HTuple &Values, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *ScatteredDataInterpolatorHandle);
LIntExport Herror interpolate_scattered_data_points_to_image(Halcon::Hobject *ImageInterpolated, const Halcon::HTuple &Method, const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, const Halcon::HTuple &Values, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror interpolate_scattered_data_image(const Halcon::Hobject &Image, const Halcon::Hobject &RegionInterpolate, Halcon::Hobject *ImageInterpolated, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror get_system_time(Halcon::HTuple *MSecond, Halcon::HTuple *Second, Halcon::HTuple *Minute, Halcon::HTuple *Hour, Halcon::HTuple *Day, Halcon::HTuple *YDay, Halcon::HTuple *Month, Halcon::HTuple *Year);
LIntExport Herror get_system_time(Hlong *MSecond, Hlong *Second, Hlong *Minute, Hlong *Hour, Hlong *Day, Hlong *YDay, Hlong *Month, Hlong *Year);
LIntExport Herror get_compute_device_param(const Halcon::HTuple &DeviceHandle, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_compute_device_param(const Halcon::HTuple &DeviceHandle, const Halcon::HTuple &ParamName, char *ParamValue);
LIntExport Herror get_compute_device_param(Hlong DeviceHandle, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_compute_device_param(Hlong DeviceHandle, const char *ParamName, char *ParamValue);
LIntExport Herror set_compute_device_param(const Halcon::HTuple &DeviceHandle, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror release_all_compute_devices(void);
LIntExport Herror release_compute_device(const Halcon::HTuple &DeviceHandle);
LIntExport Herror release_compute_device(Hlong DeviceHandle);
LIntExport Herror deactivate_all_compute_devices(void);
LIntExport Herror deactivate_compute_device(const Halcon::HTuple &DeviceHandle);
LIntExport Herror deactivate_compute_device(Hlong DeviceHandle);
LIntExport Herror activate_compute_device(const Halcon::HTuple &DeviceHandle);
LIntExport Herror activate_compute_device(Hlong DeviceHandle);
LIntExport Herror init_compute_device(const Halcon::HTuple &DeviceHandle, const Halcon::HTuple &Operators);
LIntExport Herror open_compute_device(const Halcon::HTuple &DeviceIdentifier, Halcon::HTuple *DeviceHandle);
LIntExport Herror open_compute_device(const Halcon::HTuple &DeviceIdentifier, Hlong *DeviceHandle);
LIntExport Herror open_compute_device(Hlong DeviceIdentifier, Halcon::HTuple *DeviceHandle);
LIntExport Herror open_compute_device(Hlong DeviceIdentifier, Hlong *DeviceHandle);
LIntExport Herror get_compute_device_info(const Halcon::HTuple &DeviceIdentifier, const Halcon::HTuple &InfoName, Halcon::HTuple *Info);
LIntExport Herror get_compute_device_info(const Halcon::HTuple &DeviceIdentifier, const Halcon::HTuple &InfoName, char *Info);
LIntExport Herror get_compute_device_info(Hlong DeviceIdentifier, const char *InfoName, Halcon::HTuple *Info);
LIntExport Herror get_compute_device_info(Hlong DeviceIdentifier, const char *InfoName, char *Info);
LIntExport Herror query_available_compute_devices(Halcon::HTuple *DeviceIdentifier);
LIntExport Herror clear_serial(const Halcon::HTuple &SerialHandle, const Halcon::HTuple &Channel);
LIntExport Herror clear_serial(Hlong SerialHandle, const char *Channel);
LIntExport Herror write_serial(const Halcon::HTuple &SerialHandle, const Halcon::HTuple &Data);
LIntExport Herror write_serial(Hlong SerialHandle, Hlong Data);
LIntExport Herror read_serial(const Halcon::HTuple &SerialHandle, const Halcon::HTuple &NumCharacters, Halcon::HTuple *Data);
LIntExport Herror read_serial(const Halcon::HTuple &SerialHandle, const Halcon::HTuple &NumCharacters, Hlong *Data);
LIntExport Herror read_serial(Hlong SerialHandle, Hlong NumCharacters, Halcon::HTuple *Data);
LIntExport Herror read_serial(Hlong SerialHandle, Hlong NumCharacters, Hlong *Data);
LIntExport Herror get_serial_param(const Halcon::HTuple &SerialHandle, Halcon::HTuple *BaudRate, Halcon::HTuple *DataBits, Halcon::HTuple *FlowControl, Halcon::HTuple *Parity, Halcon::HTuple *StopBits, Halcon::HTuple *TotalTimeOut, Halcon::HTuple *InterCharTimeOut);
LIntExport Herror get_serial_param(const Halcon::HTuple &SerialHandle, Hlong *BaudRate, Hlong *DataBits, char *FlowControl, char *Parity, Hlong *StopBits, Hlong *TotalTimeOut, Hlong *InterCharTimeOut);
LIntExport Herror get_serial_param(Hlong SerialHandle, Halcon::HTuple *BaudRate, Halcon::HTuple *DataBits, Halcon::HTuple *FlowControl, Halcon::HTuple *Parity, Halcon::HTuple *StopBits, Halcon::HTuple *TotalTimeOut, Halcon::HTuple *InterCharTimeOut);
LIntExport Herror get_serial_param(Hlong SerialHandle, Hlong *BaudRate, Hlong *DataBits, char *FlowControl, char *Parity, Hlong *StopBits, Hlong *TotalTimeOut, Hlong *InterCharTimeOut);
LIntExport Herror set_serial_param(const Halcon::HTuple &SerialHandle, const Halcon::HTuple &BaudRate, const Halcon::HTuple &DataBits, const Halcon::HTuple &FlowControl, const Halcon::HTuple &Parity, const Halcon::HTuple &StopBits, const Halcon::HTuple &TotalTimeOut, const Halcon::HTuple &InterCharTimeOut);
LIntExport Herror set_serial_param(Hlong SerialHandle, Hlong BaudRate, Hlong DataBits, const char *FlowControl, const char *Parity, Hlong StopBits, Hlong TotalTimeOut, Hlong InterCharTimeOut);
LIntExport Herror close_all_serials(void);
LIntExport Herror close_serial(const Halcon::HTuple &SerialHandle);
LIntExport Herror close_serial(Hlong SerialHandle);
LIntExport Herror open_serial(const Halcon::HTuple &PortName, Halcon::HTuple *SerialHandle);
LIntExport Herror open_serial(const Halcon::HTuple &PortName, Hlong *SerialHandle);
LIntExport Herror open_serial(const char *PortName, Halcon::HTuple *SerialHandle);
LIntExport Herror open_serial(const char *PortName, Hlong *SerialHandle);
LIntExport Herror wait_seconds(const Halcon::HTuple &Seconds);
LIntExport Herror wait_seconds(double Seconds);
LIntExport Herror system_call(const Halcon::HTuple &Command);
LIntExport Herror system_call(const char *Command);
LIntExport Herror set_system(const Halcon::HTuple &SystemParameter, const Halcon::HTuple &Value);
LIntExport Herror set_check(const Halcon::HTuple &Check);
LIntExport Herror set_check(const char *Check);
LIntExport Herror reset_obj_db(const Halcon::HTuple &DefaultImageWidth, const Halcon::HTuple &DefaultImageHeight, const Halcon::HTuple &DefaultChannels);
LIntExport Herror reset_obj_db(Hlong DefaultImageWidth, Hlong DefaultImageHeight, Hlong DefaultChannels);
LIntExport Herror get_system(const Halcon::HTuple &Query, Halcon::HTuple *Information);
LIntExport Herror get_system(const Halcon::HTuple &Query, Hlong *Information);
LIntExport Herror get_system(const char *Query, Halcon::HTuple *Information);
LIntExport Herror get_system(const char *Query, Hlong *Information);
LIntExport Herror get_check(Halcon::HTuple *Check);
LIntExport Herror get_error_text(const Halcon::HTuple &ErrorCode, Halcon::HTuple *ErrorMessage);
LIntExport Herror get_error_text(const Halcon::HTuple &ErrorCode, char *ErrorMessage);
LIntExport Herror get_error_text(Hlong ErrorCode, Halcon::HTuple *ErrorMessage);
LIntExport Herror get_error_text(Hlong ErrorCode, char *ErrorMessage);
LIntExport Herror count_seconds(Halcon::HTuple *Seconds);
LIntExport Herror count_seconds(double *Seconds);
LIntExport Herror count_relation(const Halcon::HTuple &RelationName, Halcon::HTuple *NumOfTuples);
LIntExport Herror count_relation(const Halcon::HTuple &RelationName, Hlong *NumOfTuples);
LIntExport Herror count_relation(const char *RelationName, Halcon::HTuple *NumOfTuples);
LIntExport Herror count_relation(const char *RelationName, Hlong *NumOfTuples);
LIntExport Herror receive_image(Halcon::Hobject *Image, const Halcon::HTuple &Socket);
LIntExport Herror receive_image(Halcon::Hobject *Image, Hlong Socket);
LIntExport Herror send_image(const Halcon::Hobject &Image, const Halcon::HTuple &Socket);
LIntExport Herror send_image(const Halcon::Hobject &Image, Hlong Socket);
LIntExport Herror receive_region(Halcon::Hobject *Region, const Halcon::HTuple &Socket);
LIntExport Herror receive_region(Halcon::Hobject *Region, Hlong Socket);
LIntExport Herror send_region(const Halcon::Hobject &Region, const Halcon::HTuple &Socket);
LIntExport Herror send_region(const Halcon::Hobject &Region, Hlong Socket);
LIntExport Herror receive_xld(Halcon::Hobject *XLD, const Halcon::HTuple &Socket);
LIntExport Herror receive_xld(Halcon::Hobject *XLD, Hlong Socket);
LIntExport Herror send_xld(const Halcon::Hobject &XLD, const Halcon::HTuple &Socket);
LIntExport Herror send_xld(const Halcon::Hobject &XLD, Hlong Socket);
LIntExport Herror receive_tuple(const Halcon::HTuple &Socket, Halcon::HTuple *Tuple);
LIntExport Herror receive_tuple(const Halcon::HTuple &Socket, char *Tuple);
LIntExport Herror receive_tuple(Hlong Socket, Halcon::HTuple *Tuple);
LIntExport Herror receive_tuple(Hlong Socket, char *Tuple);
LIntExport Herror send_tuple(const Halcon::HTuple &Socket, const Halcon::HTuple &Tuple);
LIntExport Herror receive_data(const Halcon::HTuple &Socket, const Halcon::HTuple &Format, Halcon::HTuple *Data, Halcon::HTuple *From);
LIntExport Herror receive_data(const Halcon::HTuple &Socket, const Halcon::HTuple &Format, char *Data, char *From);
LIntExport Herror receive_data(Hlong Socket, const char *Format, Halcon::HTuple *Data, Halcon::HTuple *From);
LIntExport Herror receive_data(Hlong Socket, const char *Format, char *Data, char *From);
LIntExport Herror send_data(const Halcon::HTuple &Socket, const Halcon::HTuple &Format, const Halcon::HTuple &Data, const Halcon::HTuple &To);
LIntExport Herror get_socket_param(const Halcon::HTuple &Socket, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_socket_param(const Halcon::HTuple &Socket, const Halcon::HTuple &ParamName, char *ParamValue);
LIntExport Herror get_socket_param(Hlong Socket, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_socket_param(Hlong Socket, const char *ParamName, char *ParamValue);
LIntExport Herror set_socket_param(const Halcon::HTuple &Socket, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror get_next_socket_data_type(const Halcon::HTuple &Socket, Halcon::HTuple *DataType);
LIntExport Herror get_next_socket_data_type(const Halcon::HTuple &Socket, char *DataType);
LIntExport Herror get_next_socket_data_type(Hlong Socket, Halcon::HTuple *DataType);
LIntExport Herror get_next_socket_data_type(Hlong Socket, char *DataType);
LIntExport Herror get_socket_descriptor(const Halcon::HTuple &Socket, Halcon::HTuple *SocketDescriptor);
LIntExport Herror get_socket_descriptor(const Halcon::HTuple &Socket, Hlong *SocketDescriptor);
LIntExport Herror get_socket_descriptor(Hlong Socket, Halcon::HTuple *SocketDescriptor);
LIntExport Herror get_socket_descriptor(Hlong Socket, Hlong *SocketDescriptor);
LIntExport Herror get_socket_timeout(const Halcon::HTuple &Socket, Halcon::HTuple *Timeout);
LIntExport Herror get_socket_timeout(const Halcon::HTuple &Socket, double *Timeout);
LIntExport Herror get_socket_timeout(Hlong Socket, Halcon::HTuple *Timeout);
LIntExport Herror get_socket_timeout(Hlong Socket, double *Timeout);
LIntExport Herror set_socket_timeout(const Halcon::HTuple &Socket, const Halcon::HTuple &Timeout);
LIntExport Herror set_socket_timeout(Hlong Socket, double Timeout);
LIntExport Herror close_all_sockets(void);
LIntExport Herror close_socket(const Halcon::HTuple &Socket);
LIntExport Herror close_socket(Hlong Socket);
LIntExport Herror socket_accept_connect(const Halcon::HTuple &AcceptingSocket, const Halcon::HTuple &Wait, Halcon::HTuple *Socket);
LIntExport Herror socket_accept_connect(const Halcon::HTuple &AcceptingSocket, const Halcon::HTuple &Wait, Hlong *Socket);
LIntExport Herror socket_accept_connect(Hlong AcceptingSocket, const char *Wait, Halcon::HTuple *Socket);
LIntExport Herror socket_accept_connect(Hlong AcceptingSocket, const char *Wait, Hlong *Socket);
LIntExport Herror open_socket_connect(const Halcon::HTuple &HostName, const Halcon::HTuple &Port, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Socket);
LIntExport Herror open_socket_connect(const Halcon::HTuple &HostName, const Halcon::HTuple &Port, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *Socket);
LIntExport Herror open_socket_accept(const Halcon::HTuple &Port, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *AcceptingSocket);
LIntExport Herror open_socket_accept(const Halcon::HTuple &Port, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *AcceptingSocket);
LIntExport Herror get_extended_error_info(Halcon::HTuple *OperatorName, Halcon::HTuple *ErrorCode, Halcon::HTuple *ErrorMessage);
LIntExport Herror get_extended_error_info(char *OperatorName, Hlong *ErrorCode, char *ErrorMessage);
LIntExport Herror get_modules(Halcon::HTuple *UsedModules, Halcon::HTuple *ModuleKey);
LIntExport Herror binocular_distance_ms(const Halcon::Hobject &ImageRect1, const Halcon::Hobject &ImageRect2, Halcon::Hobject *Distance, Halcon::Hobject *Score, const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, const Halcon::HTuple &MinDisparity, const Halcon::HTuple &MaxDisparity, const Halcon::HTuple &SurfaceSmoothing, const Halcon::HTuple &EdgeSmoothing, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror binocular_disparity_ms(const Halcon::Hobject &ImageRect1, const Halcon::Hobject &ImageRect2, Halcon::Hobject *Disparity, Halcon::Hobject *Score, const Halcon::HTuple &MinDisparity, const Halcon::HTuple &MaxDisparity, const Halcon::HTuple &SurfaceSmoothing, const Halcon::HTuple &EdgeSmoothing, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror binocular_disparity_ms(const Halcon::Hobject &ImageRect1, const Halcon::Hobject &ImageRect2,Halcon::Hobject *Disparity,Halcon::Hobject *Score, Hlong MinDisparity, Hlong MaxDisparity, Hlong SurfaceSmoothing, Hlong EdgeSmoothing, const char *GenParamName, const char *GenParamValue);
LIntExport Herror binocular_distance_mg(const Halcon::Hobject &ImageRect1, const Halcon::Hobject &ImageRect2, Halcon::Hobject *Distance, Halcon::Hobject *Score, const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, const Halcon::HTuple &GrayConstancy, const Halcon::HTuple &GradientConstancy, const Halcon::HTuple &Smoothness, const Halcon::HTuple &InitialGuess, const Halcon::HTuple &CalculateScore, const Halcon::HTuple &MGParamName, const Halcon::HTuple &MGParamValue);
LIntExport Herror binocular_disparity_mg(const Halcon::Hobject &ImageRect1, const Halcon::Hobject &ImageRect2, Halcon::Hobject *Disparity, Halcon::Hobject *Score, const Halcon::HTuple &GrayConstancy, const Halcon::HTuple &GradientConstancy, const Halcon::HTuple &Smoothness, const Halcon::HTuple &InitialGuess, const Halcon::HTuple &CalculateScore, const Halcon::HTuple &MGParamName, const Halcon::HTuple &MGParamValue);
LIntExport Herror reconst3d_from_fundamental_matrix(const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &CovRR1, const Halcon::HTuple &CovRC1, const Halcon::HTuple &CovCC1, const Halcon::HTuple &CovRR2, const Halcon::HTuple &CovRC2, const Halcon::HTuple &CovCC2, const Halcon::HTuple &FMatrix, const Halcon::HTuple &CovFMat, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z, Halcon::HTuple *W, Halcon::HTuple *CovXYZW);
LIntExport Herror reconst3d_from_fundamental_matrix(const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &CovRR1, const Halcon::HTuple &CovRC1, const Halcon::HTuple &CovCC1, const Halcon::HTuple &CovRR2, const Halcon::HTuple &CovRC2, const Halcon::HTuple &CovCC2, const Halcon::HTuple &FMatrix, const Halcon::HTuple &CovFMat, double *X, double *Y, double *Z, double *W, double *CovXYZW);
LIntExport Herror gen_binocular_proj_rectification(Halcon::Hobject *Map1, Halcon::Hobject *Map2, const Halcon::HTuple &FMatrix, const Halcon::HTuple &CovFMat, const Halcon::HTuple &Width1, const Halcon::HTuple &Height1, const Halcon::HTuple &Width2, const Halcon::HTuple &Height2, const Halcon::HTuple &SubSampling, const Halcon::HTuple &Mapping, Halcon::HTuple *CovFMatRect, Halcon::HTuple *H1, Halcon::HTuple *H2);
LIntExport Herror vector_to_fundamental_matrix_distortion(const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &CovRR1, const Halcon::HTuple &CovRC1, const Halcon::HTuple &CovCC1, const Halcon::HTuple &CovRR2, const Halcon::HTuple &CovRC2, const Halcon::HTuple &CovCC2, const Halcon::HTuple &ImageWidth, const Halcon::HTuple &ImageHeight, const Halcon::HTuple &Method, Halcon::HTuple *FMatrix, Halcon::HTuple *Kappa, Halcon::HTuple *Error, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z, Halcon::HTuple *W);
LIntExport Herror rel_pose_to_fundamental_matrix(const Halcon::HTuple &RelPose, const Halcon::HTuple &CovRelPose, const Halcon::HTuple &CamPar1, const Halcon::HTuple &CamPar2, Halcon::HTuple *FMatrix, Halcon::HTuple *CovFMat);
LIntExport Herror essential_to_fundamental_matrix(const Halcon::HTuple &EMatrix, const Halcon::HTuple &CovEMat, const Halcon::HTuple &CamMat1, const Halcon::HTuple &CamMat2, Halcon::HTuple *FMatrix, Halcon::HTuple *CovFMat);
LIntExport Herror vector_to_rel_pose(const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &CovRR1, const Halcon::HTuple &CovRC1, const Halcon::HTuple &CovCC1, const Halcon::HTuple &CovRR2, const Halcon::HTuple &CovRC2, const Halcon::HTuple &CovCC2, const Halcon::HTuple &CamPar1, const Halcon::HTuple &CamPar2, const Halcon::HTuple &Method, Halcon::HTuple *RelPose, Halcon::HTuple *CovRelPose, Halcon::HTuple *Error, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z, Halcon::HTuple *CovXYZ);
LIntExport Herror vector_to_essential_matrix(const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &CovRR1, const Halcon::HTuple &CovRC1, const Halcon::HTuple &CovCC1, const Halcon::HTuple &CovRR2, const Halcon::HTuple &CovRC2, const Halcon::HTuple &CovCC2, const Halcon::HTuple &CamMat1, const Halcon::HTuple &CamMat2, const Halcon::HTuple &Method, Halcon::HTuple *EMatrix, Halcon::HTuple *CovEMat, Halcon::HTuple *Error, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z, Halcon::HTuple *CovXYZ);
LIntExport Herror vector_to_fundamental_matrix(const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &CovRR1, const Halcon::HTuple &CovRC1, const Halcon::HTuple &CovCC1, const Halcon::HTuple &CovRR2, const Halcon::HTuple &CovRC2, const Halcon::HTuple &CovCC2, const Halcon::HTuple &Method, Halcon::HTuple *FMatrix, Halcon::HTuple *CovFMat, Halcon::HTuple *Error, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z, Halcon::HTuple *W, Halcon::HTuple *CovXYZW);
LIntExport Herror match_fundamental_matrix_distortion_ransac(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &GrayMatchMethod, const Halcon::HTuple &MaskSize, const Halcon::HTuple &RowMove, const Halcon::HTuple &ColMove, const Halcon::HTuple &RowTolerance, const Halcon::HTuple &ColTolerance, const Halcon::HTuple &Rotation, const Halcon::HTuple &MatchThreshold, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &DistanceThreshold, const Halcon::HTuple &RandSeed, Halcon::HTuple *FMatrix, Halcon::HTuple *Kappa, Halcon::HTuple *Error, Halcon::HTuple *Points1, Halcon::HTuple *Points2);
LIntExport Herror match_rel_pose_ransac(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &CamPar1, const Halcon::HTuple &CamPar2, const Halcon::HTuple &GrayMatchMethod, const Halcon::HTuple &MaskSize, const Halcon::HTuple &RowMove, const Halcon::HTuple &ColMove, const Halcon::HTuple &RowTolerance, const Halcon::HTuple &ColTolerance, const Halcon::HTuple &Rotation, const Halcon::HTuple &MatchThreshold, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &DistanceThreshold, const Halcon::HTuple &RandSeed, Halcon::HTuple *RelPose, Halcon::HTuple *CovRelPose, Halcon::HTuple *Error, Halcon::HTuple *Points1, Halcon::HTuple *Points2);
LIntExport Herror match_essential_matrix_ransac(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &CamMat1, const Halcon::HTuple &CamMat2, const Halcon::HTuple &GrayMatchMethod, const Halcon::HTuple &MaskSize, const Halcon::HTuple &RowMove, const Halcon::HTuple &ColMove, const Halcon::HTuple &RowTolerance, const Halcon::HTuple &ColTolerance, const Halcon::HTuple &Rotation, const Halcon::HTuple &MatchThreshold, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &DistanceThreshold, const Halcon::HTuple &RandSeed, Halcon::HTuple *EMatrix, Halcon::HTuple *CovEMat, Halcon::HTuple *Error, Halcon::HTuple *Points1, Halcon::HTuple *Points2);
LIntExport Herror match_fundamental_matrix_ransac(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &GrayMatchMethod, const Halcon::HTuple &MaskSize, const Halcon::HTuple &RowMove, const Halcon::HTuple &ColMove, const Halcon::HTuple &RowTolerance, const Halcon::HTuple &ColTolerance, const Halcon::HTuple &Rotation, const Halcon::HTuple &MatchThreshold, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &DistanceThreshold, const Halcon::HTuple &RandSeed, Halcon::HTuple *FMatrix, Halcon::HTuple *CovFMat, Halcon::HTuple *Error, Halcon::HTuple *Points1, Halcon::HTuple *Points2);
LIntExport Herror binocular_distance(const Halcon::Hobject &ImageRect1, const Halcon::Hobject &ImageRect2, Halcon::Hobject *Distance, Halcon::Hobject *Score, const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, const Halcon::HTuple &Method, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &TextureThresh, const Halcon::HTuple &MinDisparity, const Halcon::HTuple &MaxDisparity, const Halcon::HTuple &NumLevels, const Halcon::HTuple &ScoreThresh, const Halcon::HTuple &Filter, const Halcon::HTuple &SubDistance);
LIntExport Herror binocular_disparity(const Halcon::Hobject &ImageRect1, const Halcon::Hobject &ImageRect2, Halcon::Hobject *Disparity, Halcon::Hobject *Score, const Halcon::HTuple &Method, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &TextureThresh, const Halcon::HTuple &MinDisparity, const Halcon::HTuple &MaxDisparity, const Halcon::HTuple &NumLevels, const Halcon::HTuple &ScoreThresh, const Halcon::HTuple &Filter, const Halcon::HTuple &SubDisparity);
LIntExport Herror binocular_disparity(const Halcon::Hobject &ImageRect1, const Halcon::Hobject &ImageRect2,Halcon::Hobject *Disparity,Halcon::Hobject *Score, const char *Method, Hlong MaskWidth, Hlong MaskHeight, double TextureThresh, Hlong MinDisparity, Hlong MaxDisparity, Hlong NumLevels, double ScoreThresh, const char *Filter, const char *SubDisparity);
LIntExport Herror intersect_lines_of_sight(const Halcon::HTuple &CamParam1, const Halcon::HTuple &CamParam2, const Halcon::HTuple &RelPose, const Halcon::HTuple &Row1, const Halcon::HTuple &Col1, const Halcon::HTuple &Row2, const Halcon::HTuple &Col2, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z, Halcon::HTuple *Dist);
LIntExport Herror intersect_lines_of_sight(const Halcon::HTuple &CamParam1, const Halcon::HTuple &CamParam2, const Halcon::HTuple &RelPose, const Halcon::HTuple &Row1, const Halcon::HTuple &Col1, const Halcon::HTuple &Row2, const Halcon::HTuple &Col2, double *X, double *Y, double *Z, double *Dist);
LIntExport Herror disparity_image_to_xyz(const Halcon::Hobject &Disparity, Halcon::Hobject *X, Halcon::Hobject *Y, Halcon::Hobject *Z, const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect);
LIntExport Herror disparity_to_point_3d(const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, const Halcon::HTuple &Row1, const Halcon::HTuple &Col1, const Halcon::HTuple &Disparity, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z);
LIntExport Herror disparity_to_point_3d(const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, const Halcon::HTuple &Row1, const Halcon::HTuple &Col1, const Halcon::HTuple &Disparity, double *X, double *Y, double *Z);
LIntExport Herror disparity_to_distance(const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, const Halcon::HTuple &Disparity, Halcon::HTuple *Distance);
LIntExport Herror disparity_to_distance(const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, const Halcon::HTuple &Disparity, double *Distance);
LIntExport Herror distance_to_disparity(const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, const Halcon::HTuple &Distance, Halcon::HTuple *Disparity);
LIntExport Herror distance_to_disparity(const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, const Halcon::HTuple &Distance, double *Disparity);
LIntExport Herror gen_binocular_rectification_map(Halcon::Hobject *Map1, Halcon::Hobject *Map2, const Halcon::HTuple &CamParam1, const Halcon::HTuple &CamParam2, const Halcon::HTuple &RelPose, const Halcon::HTuple &SubSampling, const Halcon::HTuple &Method, const Halcon::HTuple &MapType, Halcon::HTuple *CamParamRect1, Halcon::HTuple *CamParamRect2, Halcon::HTuple *CamPoseRect1, Halcon::HTuple *CamPoseRect2, Halcon::HTuple *RelPoseRect);
LIntExport Herror binocular_calibration(const Halcon::HTuple &NX, const Halcon::HTuple &NY, const Halcon::HTuple &NZ, const Halcon::HTuple &NRow1, const Halcon::HTuple &NCol1, const Halcon::HTuple &NRow2, const Halcon::HTuple &NCol2, const Halcon::HTuple &StartCamParam1, const Halcon::HTuple &StartCamParam2, const Halcon::HTuple &NStartPose1, const Halcon::HTuple &NStartPose2, const Halcon::HTuple &EstimateParams, Halcon::HTuple *CamParam1, Halcon::HTuple *CamParam2, Halcon::HTuple *NFinalPose1, Halcon::HTuple *NFinalPose2, Halcon::HTuple *RelPose, Halcon::HTuple *Errors);
LIntExport Herror query_spy(Halcon::HTuple *Classes, Halcon::HTuple *Values);
LIntExport Herror set_spy(const Halcon::HTuple &Class, const Halcon::HTuple &Value);
LIntExport Herror get_spy(const Halcon::HTuple &Class, Halcon::HTuple *Value);
LIntExport Herror get_spy(const Halcon::HTuple &Class, char *Value);
LIntExport Herror get_spy(const char *Class, Halcon::HTuple *Value);
LIntExport Herror get_spy(const char *Class, char *Value);
LIntExport Herror read_sheet_of_light_model(const Halcon::HTuple &FileName, Halcon::HTuple *SheetOfLightModelID);
LIntExport Herror read_sheet_of_light_model(const Halcon::HTuple &FileName, Hlong *SheetOfLightModelID);
LIntExport Herror read_sheet_of_light_model(const char *FileName, Halcon::HTuple *SheetOfLightModelID);
LIntExport Herror read_sheet_of_light_model(const char *FileName, Hlong *SheetOfLightModelID);
LIntExport Herror write_sheet_of_light_model(const Halcon::HTuple &SheetOfLightModelID, const Halcon::HTuple &FileName);
LIntExport Herror write_sheet_of_light_model(Hlong SheetOfLightModelID, const char *FileName);
LIntExport Herror deserialize_sheet_of_light_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *SheetOfLightModelID);
LIntExport Herror deserialize_sheet_of_light_model(const Halcon::HTuple &SerializedItemHandle, Hlong *SheetOfLightModelID);
LIntExport Herror deserialize_sheet_of_light_model(Hlong SerializedItemHandle, Halcon::HTuple *SheetOfLightModelID);
LIntExport Herror deserialize_sheet_of_light_model(Hlong SerializedItemHandle, Hlong *SheetOfLightModelID);
LIntExport Herror serialize_sheet_of_light_model(const Halcon::HTuple &SheetOfLightModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_sheet_of_light_model(const Halcon::HTuple &SheetOfLightModelID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_sheet_of_light_model(Hlong SheetOfLightModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_sheet_of_light_model(Hlong SheetOfLightModelID, Hlong *SerializedItemHandle);
LIntExport Herror create_sheet_of_light_calib_object(const Halcon::HTuple &Width, const Halcon::HTuple &Length, const Halcon::HTuple &HeightMin, const Halcon::HTuple &HeightMax, const Halcon::HTuple &FileName);
LIntExport Herror create_sheet_of_light_calib_object(double Width, double Length, double HeightMin, double HeightMax, const char *FileName);
LIntExport Herror calibrate_sheet_of_light(const Halcon::HTuple &SheetOfLightModelID, Halcon::HTuple *Error);
LIntExport Herror calibrate_sheet_of_light(const Halcon::HTuple &SheetOfLightModelID, double *Error);
LIntExport Herror calibrate_sheet_of_light(Hlong SheetOfLightModelID, Halcon::HTuple *Error);
LIntExport Herror calibrate_sheet_of_light(Hlong SheetOfLightModelID, double *Error);
LIntExport Herror get_sheet_of_light_result_object_model_3d(const Halcon::HTuple &SheetOfLightModelID, Halcon::HTuple *ObjectModel3D);
LIntExport Herror get_sheet_of_light_result_object_model_3d(const Halcon::HTuple &SheetOfLightModelID, Hlong *ObjectModel3D);
LIntExport Herror get_sheet_of_light_result_object_model_3d(Hlong SheetOfLightModelID, Halcon::HTuple *ObjectModel3D);
LIntExport Herror get_sheet_of_light_result_object_model_3d(Hlong SheetOfLightModelID, Hlong *ObjectModel3D);
LIntExport Herror get_sheet_of_light_result(Halcon::Hobject *ResultValue, const Halcon::HTuple &SheetOfLightModelID, const Halcon::HTuple &ResultName);
LIntExport Herror get_sheet_of_light_result(Halcon::Hobject *ResultValue, Hlong SheetOfLightModelID, const char *ResultName);
LIntExport Herror apply_sheet_of_light_calibration(const Halcon::Hobject &Disparity, const Halcon::HTuple &SheetOfLightModelID);
LIntExport Herror apply_sheet_of_light_calibration(const Halcon::Hobject &Disparity, Hlong SheetOfLightModelID);
LIntExport Herror set_profile_sheet_of_light(const Halcon::Hobject &ProfileDisparityImage, const Halcon::HTuple &SheetOfLightModelID, const Halcon::HTuple &MovementPoses);
LIntExport Herror measure_profile_sheet_of_light(const Halcon::Hobject &ProfileImage, const Halcon::HTuple &SheetOfLightModelID, const Halcon::HTuple &MovementPose);
LIntExport Herror set_sheet_of_light_param(const Halcon::HTuple &SheetOfLightModelID, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror get_sheet_of_light_param(const Halcon::HTuple &SheetOfLightModelID, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_sheet_of_light_param(const Halcon::HTuple &SheetOfLightModelID, const Halcon::HTuple &GenParamName, char *GenParamValue);
LIntExport Herror get_sheet_of_light_param(Hlong SheetOfLightModelID, const char *GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_sheet_of_light_param(Hlong SheetOfLightModelID, const char *GenParamName, char *GenParamValue);
LIntExport Herror query_sheet_of_light_params(const Halcon::HTuple &SheetOfLightModelID, const Halcon::HTuple &QueryName, Halcon::HTuple *GenParamNames);
LIntExport Herror query_sheet_of_light_params(Hlong SheetOfLightModelID, const char *QueryName, Halcon::HTuple *GenParamNames);
LIntExport Herror reset_sheet_of_light_model(const Halcon::HTuple &SheetOfLightModelID);
LIntExport Herror reset_sheet_of_light_model(Hlong SheetOfLightModelID);
LIntExport Herror clear_all_sheet_of_light_models(void);
LIntExport Herror clear_sheet_of_light_model(const Halcon::HTuple &SheetOfLightModelID);
LIntExport Herror clear_sheet_of_light_model(Hlong SheetOfLightModelID);
LIntExport Herror create_sheet_of_light_model(const Halcon::Hobject &ProfileRegion, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *SheetOfLightModelID);
LIntExport Herror create_sheet_of_light_model(const Halcon::Hobject &ProfileRegion, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *SheetOfLightModelID);
LIntExport Herror create_sheet_of_light_model(const Halcon::Hobject &ProfileRegion, const char *GenParamNames, Hlong GenParamValues, Halcon::HTuple *SheetOfLightModelID);
LIntExport Herror create_sheet_of_light_model(const Halcon::Hobject &ProfileRegion, const char *GenParamNames, Hlong GenParamValues, Hlong *SheetOfLightModelID);
LIntExport Herror shade_height_field(const Halcon::Hobject &ImageHeight, Halcon::Hobject *ImageShade, const Halcon::HTuple &Slant, const Halcon::HTuple &Tilt, const Halcon::HTuple &Albedo, const Halcon::HTuple &Ambient, const Halcon::HTuple &Shadows);
LIntExport Herror shade_height_field(const Halcon::Hobject &ImageHeight,Halcon::Hobject *ImageShade, double Slant, double Tilt, double Albedo, double Ambient, const char *Shadows);
LIntExport Herror estimate_al_am(const Halcon::Hobject &Image, Halcon::HTuple *Albedo, Halcon::HTuple *Ambient);
LIntExport Herror estimate_al_am(const Halcon::Hobject &Image, double *Albedo, double *Ambient);
LIntExport Herror estimate_sl_al_zc(const Halcon::Hobject &Image, Halcon::HTuple *Slant, Halcon::HTuple *Albedo);
LIntExport Herror estimate_sl_al_zc(const Halcon::Hobject &Image, double *Slant, double *Albedo);
LIntExport Herror estimate_sl_al_lr(const Halcon::Hobject &Image, Halcon::HTuple *Slant, Halcon::HTuple *Albedo);
LIntExport Herror estimate_sl_al_lr(const Halcon::Hobject &Image, double *Slant, double *Albedo);
LIntExport Herror estimate_tilt_zc(const Halcon::Hobject &Image, Halcon::HTuple *Tilt);
LIntExport Herror estimate_tilt_zc(const Halcon::Hobject &Image, double *Tilt);
LIntExport Herror estimate_tilt_lr(const Halcon::Hobject &Image, Halcon::HTuple *Tilt);
LIntExport Herror estimate_tilt_lr(const Halcon::Hobject &Image, double *Tilt);
LIntExport Herror phot_stereo(const Halcon::Hobject &Images, Halcon::Hobject *Height, const Halcon::HTuple &Slants, const Halcon::HTuple &Tilts);
LIntExport Herror reconstruct_height_field_from_gradient(const Halcon::Hobject &Gradient, Halcon::Hobject *HeightField, const Halcon::HTuple &ReconstructionMethod, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror photometric_stereo(const Halcon::Hobject &Images, Halcon::Hobject *HeightField, Halcon::Hobject *Gradient, Halcon::Hobject *Albedo, const Halcon::HTuple &Slants, const Halcon::HTuple &Tilts, const Halcon::HTuple &ResultType, const Halcon::HTuple &ReconstructionMethod, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror sfs_pentland(const Halcon::Hobject &Image, Halcon::Hobject *Height, const Halcon::HTuple &Slant, const Halcon::HTuple &Tilt, const Halcon::HTuple &Albedo, const Halcon::HTuple &Ambient);
LIntExport Herror sfs_pentland(const Halcon::Hobject &Image,Halcon::Hobject *Height, double Slant, double Tilt, double Albedo, double Ambient);
LIntExport Herror sfs_orig_lr(const Halcon::Hobject &Image, Halcon::Hobject *Height, const Halcon::HTuple &Slant, const Halcon::HTuple &Tilt, const Halcon::HTuple &Albedo, const Halcon::HTuple &Ambient);
LIntExport Herror sfs_orig_lr(const Halcon::Hobject &Image,Halcon::Hobject *Height, double Slant, double Tilt, double Albedo, double Ambient);
LIntExport Herror sfs_mod_lr(const Halcon::Hobject &Image, Halcon::Hobject *Height, const Halcon::HTuple &Slant, const Halcon::HTuple &Tilt, const Halcon::HTuple &Albedo, const Halcon::HTuple &Ambient);
LIntExport Herror sfs_mod_lr(const Halcon::Hobject &Image,Halcon::Hobject *Height, double Slant, double Tilt, double Albedo, double Ambient);
LIntExport Herror receive_serialized_item(const Halcon::HTuple &Socket, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror receive_serialized_item(const Halcon::HTuple &Socket, Hlong *SerializedItemHandle);
LIntExport Herror receive_serialized_item(Hlong Socket, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror receive_serialized_item(Hlong Socket, Hlong *SerializedItemHandle);
LIntExport Herror send_serialized_item(const Halcon::HTuple &Socket, const Halcon::HTuple &SerializedItemHandle);
LIntExport Herror send_serialized_item(Hlong Socket, Hlong SerializedItemHandle);
LIntExport Herror fwrite_serialized_item(const Halcon::HTuple &FileHandle, const Halcon::HTuple &SerializedItemHandle);
LIntExport Herror fwrite_serialized_item(Hlong FileHandle, Hlong SerializedItemHandle);
LIntExport Herror fread_serialized_item(const Halcon::HTuple &FileHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror fread_serialized_item(const Halcon::HTuple &FileHandle, Hlong *SerializedItemHandle);
LIntExport Herror fread_serialized_item(Hlong FileHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror fread_serialized_item(Hlong FileHandle, Hlong *SerializedItemHandle);
LIntExport Herror clear_all_serialized_items(void);
LIntExport Herror clear_serialized_item(const Halcon::HTuple &SerializedItemHandle);
LIntExport Herror clear_serialized_item(Hlong SerializedItemHandle);
LIntExport Herror get_serialized_item_ptr(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *Pointer, Halcon::HTuple *Size);
LIntExport Herror get_serialized_item_ptr(const Halcon::HTuple &SerializedItemHandle, Hlong *Pointer, Hlong *Size);
LIntExport Herror get_serialized_item_ptr(Hlong SerializedItemHandle, Halcon::HTuple *Pointer, Halcon::HTuple *Size);
LIntExport Herror get_serialized_item_ptr(Hlong SerializedItemHandle, Hlong *Pointer, Hlong *Size);
LIntExport Herror create_serialized_item_ptr(const Halcon::HTuple &Pointer, const Halcon::HTuple &Size, const Halcon::HTuple &Copy, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror create_serialized_item_ptr(const Halcon::HTuple &Pointer, const Halcon::HTuple &Size, const Halcon::HTuple &Copy, Hlong *SerializedItemHandle);
LIntExport Herror create_serialized_item_ptr(Hlong Pointer, Hlong Size, const char *Copy, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror create_serialized_item_ptr(Hlong Pointer, Hlong Size, const char *Copy, Hlong *SerializedItemHandle);
LIntExport Herror fit_primitives_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *ObjectModel3DOut);
LIntExport Herror fit_primitives_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Hlong *ObjectModel3DOut);
LIntExport Herror segment_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *ObjectModel3DOut);
LIntExport Herror segment_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Hlong *ObjectModel3DOut);
LIntExport Herror clear_all_text_results(void);
LIntExport Herror clear_text_result(const Halcon::HTuple &TextResultID);
LIntExport Herror clear_text_result(Hlong TextResultID);
LIntExport Herror get_text_object(Halcon::Hobject *Characters, const Halcon::HTuple &TextResultID, const Halcon::HTuple &ResultName);
LIntExport Herror get_text_result(const Halcon::HTuple &TextResultID, const Halcon::HTuple &ResultName, Halcon::HTuple *ResultValue);
LIntExport Herror get_text_result(const Halcon::HTuple &TextResultID, const Halcon::HTuple &ResultName, Hlong *ResultValue);
LIntExport Herror find_text(const Halcon::Hobject &Image, const Halcon::HTuple &TextModel, Halcon::HTuple *TextResultID);
LIntExport Herror find_text(const Halcon::Hobject &Image, const Halcon::HTuple &TextModel, Hlong *TextResultID);
LIntExport Herror find_text(const Halcon::Hobject &Image, Hlong TextModel, Halcon::HTuple *TextResultID);
LIntExport Herror find_text(const Halcon::Hobject &Image, Hlong TextModel, Hlong *TextResultID);
LIntExport Herror get_text_model_param(const Halcon::HTuple &TextModel, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_text_model_param(const Halcon::HTuple &TextModel, const Halcon::HTuple &GenParamName, Hlong *GenParamValue);
LIntExport Herror get_text_model_param(Hlong TextModel, const char *GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_text_model_param(Hlong TextModel, const char *GenParamName, Hlong *GenParamValue);
LIntExport Herror set_text_model_param(const Halcon::HTuple &TextModel, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror set_text_model_param(Hlong TextModel, const char *GenParamName, Hlong GenParamValue);
LIntExport Herror clear_all_text_models(void);
LIntExport Herror clear_text_model(const Halcon::HTuple &TextModel);
LIntExport Herror clear_text_model(Hlong TextModel);
LIntExport Herror create_text_model_reader(const Halcon::HTuple &Mode, const Halcon::HTuple &OCRClassifierMLP, Halcon::HTuple *TextModel);
LIntExport Herror create_text_model_reader(const Halcon::HTuple &Mode, const Halcon::HTuple &OCRClassifierMLP, Hlong *TextModel);
LIntExport Herror create_text_model(Halcon::HTuple *TextModel);
LIntExport Herror create_text_model(Hlong *TextModel);
LIntExport Herror select_characters(const Halcon::Hobject &Region, Halcon::Hobject *RegionCharacters, const Halcon::HTuple &DotPrint, const Halcon::HTuple &StrokeWidth, const Halcon::HTuple &CharWidth, const Halcon::HTuple &CharHeight, const Halcon::HTuple &Punctuation, const Halcon::HTuple &DiacriticMarks, const Halcon::HTuple &PartitionMethod, const Halcon::HTuple &PartitionLines, const Halcon::HTuple &FragmentDistance, const Halcon::HTuple &ConnectFragments, const Halcon::HTuple &ClutterSizeMax, const Halcon::HTuple &StopAfter);
LIntExport Herror segment_characters(const Halcon::Hobject &Region, const Halcon::Hobject &Image, Halcon::Hobject *ImageForeground, Halcon::Hobject *RegionForeground, const Halcon::HTuple &Method, const Halcon::HTuple &EliminateLines, const Halcon::HTuple &DotPrint, const Halcon::HTuple &StrokeWidth, const Halcon::HTuple &CharWidth, const Halcon::HTuple &CharHeight, const Halcon::HTuple &ThresholdOffset, const Halcon::HTuple &Contrast, Halcon::HTuple *UsedThreshold);
LIntExport Herror segment_characters(const Halcon::Hobject &Region, const Halcon::Hobject &Image, Halcon::Hobject *ImageForeground, Halcon::Hobject *RegionForeground, const Halcon::HTuple &Method, const Halcon::HTuple &EliminateLines, const Halcon::HTuple &DotPrint, const Halcon::HTuple &StrokeWidth, const Halcon::HTuple &CharWidth, const Halcon::HTuple &CharHeight, const Halcon::HTuple &ThresholdOffset, const Halcon::HTuple &Contrast, Hlong *UsedThreshold);
LIntExport Herror text_line_slant(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const Halcon::HTuple &CharHeight, const Halcon::HTuple &SlantFrom, const Halcon::HTuple &SlantTo, Halcon::HTuple *SlantAngle);
LIntExport Herror text_line_slant(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const Halcon::HTuple &CharHeight, const Halcon::HTuple &SlantFrom, const Halcon::HTuple &SlantTo, double *SlantAngle);
LIntExport Herror text_line_slant(const Halcon::Hobject &Region, const Halcon::Hobject &Image, Hlong CharHeight, double SlantFrom, double SlantTo, Halcon::HTuple *SlantAngle);
LIntExport Herror text_line_slant(const Halcon::Hobject &Region, const Halcon::Hobject &Image, Hlong CharHeight, double SlantFrom, double SlantTo, double *SlantAngle);
LIntExport Herror text_line_orientation(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const Halcon::HTuple &CharHeight, const Halcon::HTuple &OrientationFrom, const Halcon::HTuple &OrientationTo, Halcon::HTuple *OrientationAngle);
LIntExport Herror text_line_orientation(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const Halcon::HTuple &CharHeight, const Halcon::HTuple &OrientationFrom, const Halcon::HTuple &OrientationTo, double *OrientationAngle);
LIntExport Herror text_line_orientation(const Halcon::Hobject &Region, const Halcon::Hobject &Image, Hlong CharHeight, double OrientationFrom, double OrientationTo, Halcon::HTuple *OrientationAngle);
LIntExport Herror text_line_orientation(const Halcon::Hobject &Region, const Halcon::Hobject &Image, Hlong CharHeight, double OrientationFrom, double OrientationTo, double *OrientationAngle);
LIntExport Herror classify_image_class_lut(const Halcon::Hobject &Image, Halcon::Hobject *ClassRegions, const Halcon::HTuple &ClassLUTHandle);
LIntExport Herror classify_image_class_lut(const Halcon::Hobject &Image,Halcon::Hobject *ClassRegions, Hlong ClassLUTHandle);
LIntExport Herror classify_image_class_knn(const Halcon::Hobject &Image, Halcon::Hobject *ClassRegions, Halcon::Hobject *DistanceImage, const Halcon::HTuple &KNNHandle, const Halcon::HTuple &RejectionThreshold);
LIntExport Herror classify_image_class_knn(const Halcon::Hobject &Image,Halcon::Hobject *ClassRegions,Halcon::Hobject *DistanceImage, Hlong KNNHandle, double RejectionThreshold);
LIntExport Herror add_samples_image_class_knn(const Halcon::Hobject &Image, const Halcon::Hobject &ClassRegions, const Halcon::HTuple &KNNHandle);
LIntExport Herror add_samples_image_class_knn(const Halcon::Hobject &Image, const Halcon::Hobject &ClassRegions, Hlong KNNHandle);
LIntExport Herror classify_image_class_gmm(const Halcon::Hobject &Image, Halcon::Hobject *ClassRegions, const Halcon::HTuple &GMMHandle, const Halcon::HTuple &RejectionThreshold);
LIntExport Herror classify_image_class_gmm(const Halcon::Hobject &Image,Halcon::Hobject *ClassRegions, Hlong GMMHandle, double RejectionThreshold);
LIntExport Herror add_samples_image_class_gmm(const Halcon::Hobject &Image, const Halcon::Hobject &ClassRegions, const Halcon::HTuple &GMMHandle, const Halcon::HTuple &Randomize);
LIntExport Herror add_samples_image_class_gmm(const Halcon::Hobject &Image, const Halcon::Hobject &ClassRegions, Hlong GMMHandle, double Randomize);
LIntExport Herror classify_image_class_svm(const Halcon::Hobject &Image, Halcon::Hobject *ClassRegions, const Halcon::HTuple &SVMHandle);
LIntExport Herror classify_image_class_svm(const Halcon::Hobject &Image,Halcon::Hobject *ClassRegions, Hlong SVMHandle);
LIntExport Herror add_samples_image_class_svm(const Halcon::Hobject &Image, const Halcon::Hobject &ClassRegions, const Halcon::HTuple &SVMHandle);
LIntExport Herror add_samples_image_class_svm(const Halcon::Hobject &Image, const Halcon::Hobject &ClassRegions, Hlong SVMHandle);
LIntExport Herror classify_image_class_mlp(const Halcon::Hobject &Image, Halcon::Hobject *ClassRegions, const Halcon::HTuple &MLPHandle, const Halcon::HTuple &RejectionThreshold);
LIntExport Herror classify_image_class_mlp(const Halcon::Hobject &Image,Halcon::Hobject *ClassRegions, Hlong MLPHandle, double RejectionThreshold);
LIntExport Herror add_samples_image_class_mlp(const Halcon::Hobject &Image, const Halcon::Hobject &ClassRegions, const Halcon::HTuple &MLPHandle);
LIntExport Herror add_samples_image_class_mlp(const Halcon::Hobject &Image, const Halcon::Hobject &ClassRegions, Hlong MLPHandle);
LIntExport Herror learn_ndim_norm(const Halcon::Hobject &Foreground, const Halcon::Hobject &Background, const Halcon::Hobject &Image, const Halcon::HTuple &Metric, const Halcon::HTuple &Distance, const Halcon::HTuple &MinNumberPercent, Halcon::HTuple *Radius, Halcon::HTuple *Center, Halcon::HTuple *Quality);
LIntExport Herror learn_ndim_norm(const Halcon::Hobject &Foreground, const Halcon::Hobject &Background, const Halcon::Hobject &Image, const char *Metric, double Distance, double MinNumberPercent, Halcon::HTuple *Radius, Halcon::HTuple *Center, Halcon::HTuple *Quality);
LIntExport Herror learn_ndim_box(const Halcon::Hobject &Foreground, const Halcon::Hobject &Background, const Halcon::Hobject &MultiChannelImage, const Halcon::HTuple &ClassifHandle);
LIntExport Herror learn_ndim_box(const Halcon::Hobject &Foreground, const Halcon::Hobject &Background, const Halcon::Hobject &MultiChannelImage, Hlong ClassifHandle);
LIntExport Herror class_ndim_box(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Regions, const Halcon::HTuple &ClassifHandle);
LIntExport Herror class_ndim_box(const Halcon::Hobject &MultiChannelImage,Halcon::Hobject *Regions, Hlong ClassifHandle);
LIntExport Herror class_ndim_norm(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Regions, const Halcon::HTuple &Metric, const Halcon::HTuple &SingleMultiple, const Halcon::HTuple &Radius, const Halcon::HTuple &Center);
LIntExport Herror class_ndim_norm(const Halcon::Hobject &MultiChannelImage,Halcon::Hobject *Regions, const char *Metric, const char *SingleMultiple, double Radius, double Center);
LIntExport Herror class_2dim_sup(const Halcon::Hobject &ImageCol, const Halcon::Hobject &ImageRow, const Halcon::Hobject &FeatureSpace, Halcon::Hobject *RegionClass2Dim);
LIntExport Herror class_2dim_unsup(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *Classes, const Halcon::HTuple &Threshold, const Halcon::HTuple &NumClasses);
LIntExport Herror class_2dim_unsup(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2,Halcon::Hobject *Classes, Hlong Threshold, Hlong NumClasses);
LIntExport Herror check_difference(const Halcon::Hobject &Image, const Halcon::Hobject &Pattern, Halcon::Hobject *Selected, const Halcon::HTuple &Mode, const Halcon::HTuple &DiffLowerBound, const Halcon::HTuple &DiffUpperBound, const Halcon::HTuple &GrayOffset, const Halcon::HTuple &AddRow, const Halcon::HTuple &AddCol);
LIntExport Herror check_difference(const Halcon::Hobject &Image, const Halcon::Hobject &Pattern,Halcon::Hobject *Selected, const char *Mode, Hlong DiffLowerBound, Hlong DiffUpperBound, Hlong GrayOffset, Hlong AddRow, Hlong AddCol);
LIntExport Herror char_threshold(const Halcon::Hobject &Image, const Halcon::Hobject &HistoRegion, Halcon::Hobject *Characters, const Halcon::HTuple &Sigma, const Halcon::HTuple &Percent, Halcon::HTuple *Threshold);
LIntExport Herror char_threshold(const Halcon::Hobject &Image, const Halcon::Hobject &HistoRegion, Halcon::Hobject *Characters, const Halcon::HTuple &Sigma, const Halcon::HTuple &Percent, Hlong *Threshold);
LIntExport Herror char_threshold(const Halcon::Hobject &Image, const Halcon::Hobject &HistoRegion,Halcon::Hobject *Characters, double Sigma, double Percent, Halcon::HTuple *Threshold);
LIntExport Herror char_threshold(const Halcon::Hobject &Image, const Halcon::Hobject &HistoRegion, Halcon::Hobject *Characters, double Sigma, double Percent, Hlong *Threshold);
LIntExport Herror label_to_region(const Halcon::Hobject &LabelImage, Halcon::Hobject *Regions);
LIntExport Herror nonmax_suppression_amp(const Halcon::Hobject &ImgAmp, Halcon::Hobject *ImageResult, const Halcon::HTuple &Mode);
LIntExport Herror nonmax_suppression_amp(const Halcon::Hobject &ImgAmp,Halcon::Hobject *ImageResult, const char *Mode);
LIntExport Herror nonmax_suppression_dir(const Halcon::Hobject &ImgAmp, const Halcon::Hobject &ImgDir, Halcon::Hobject *ImageResult, const Halcon::HTuple &Mode);
LIntExport Herror nonmax_suppression_dir(const Halcon::Hobject &ImgAmp, const Halcon::Hobject &ImgDir,Halcon::Hobject *ImageResult, const char *Mode);
LIntExport Herror hysteresis_threshold(const Halcon::Hobject &Image, Halcon::Hobject *RegionHysteresis, const Halcon::HTuple &Low, const Halcon::HTuple &High, const Halcon::HTuple &MaxLength);
LIntExport Herror hysteresis_threshold(const Halcon::Hobject &Image,Halcon::Hobject *RegionHysteresis, Hlong Low, Hlong High, Hlong MaxLength);
LIntExport Herror binary_threshold(const Halcon::Hobject &Image, Halcon::Hobject *Region, const Halcon::HTuple &Method, const Halcon::HTuple &LightDark, Halcon::HTuple *UsedThreshold);
LIntExport Herror binary_threshold(const Halcon::Hobject &Image, Halcon::Hobject *Region, const Halcon::HTuple &Method, const Halcon::HTuple &LightDark, Hlong *UsedThreshold);
LIntExport Herror binary_threshold(const Halcon::Hobject &Image,Halcon::Hobject *Region, const char *Method, const char *LightDark, Halcon::HTuple *UsedThreshold);
LIntExport Herror binary_threshold(const Halcon::Hobject &Image, Halcon::Hobject *Region, const char *Method, const char *LightDark, Hlong *UsedThreshold);
LIntExport Herror local_threshold(const Halcon::Hobject &Image, Halcon::Hobject *Region, const Halcon::HTuple &Method, const Halcon::HTuple &LightDark, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror local_threshold(const Halcon::Hobject &Image,Halcon::Hobject *Region, const char *Method, const char *LightDark, const char *GenParamName, Hlong GenParamValue);
LIntExport Herror var_threshold(const Halcon::Hobject &Image, Halcon::Hobject *Region, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &StdDevScale, const Halcon::HTuple &AbsThreshold, const Halcon::HTuple &LightDark);
LIntExport Herror var_threshold(const Halcon::Hobject &Image,Halcon::Hobject *Region, Hlong MaskWidth, Hlong MaskHeight, double StdDevScale, double AbsThreshold, const char *LightDark);
LIntExport Herror dyn_threshold(const Halcon::Hobject &OrigImage, const Halcon::Hobject &ThresholdImage, Halcon::Hobject *RegionDynThresh, const Halcon::HTuple &Offset, const Halcon::HTuple &LightDark);
LIntExport Herror dyn_threshold(const Halcon::Hobject &OrigImage, const Halcon::Hobject &ThresholdImage,Halcon::Hobject *RegionDynThresh, double Offset, const char *LightDark);
LIntExport Herror threshold(const Halcon::Hobject &Image, Halcon::Hobject *Region, const Halcon::HTuple &MinGray, const Halcon::HTuple &MaxGray);
LIntExport Herror threshold(const Halcon::Hobject &Image,Halcon::Hobject *Region, double MinGray, double MaxGray);
LIntExport Herror threshold_sub_pix(const Halcon::Hobject &Image, Halcon::Hobject *Border, const Halcon::HTuple &Threshold);
LIntExport Herror threshold_sub_pix(const Halcon::Hobject &Image,Halcon::Hobject *Border, double Threshold);
LIntExport Herror regiongrowing_n(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Regions, const Halcon::HTuple &Metric, const Halcon::HTuple &MinTolerance, const Halcon::HTuple &MaxTolerance, const Halcon::HTuple &MinSize);
LIntExport Herror regiongrowing_n(const Halcon::Hobject &MultiChannelImage,Halcon::Hobject *Regions, const char *Metric, double MinTolerance, double MaxTolerance, Hlong MinSize);
LIntExport Herror regiongrowing(const Halcon::Hobject &Image, Halcon::Hobject *Regions, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Tolerance, const Halcon::HTuple &MinSize);
LIntExport Herror regiongrowing(const Halcon::Hobject &Image,Halcon::Hobject *Regions, Hlong Row, Hlong Column, double Tolerance, Hlong MinSize);
LIntExport Herror regiongrowing_mean(const Halcon::Hobject &Image, Halcon::Hobject *Regions, const Halcon::HTuple &StartRows, const Halcon::HTuple &StartColumns, const Halcon::HTuple &Tolerance, const Halcon::HTuple &MinSize);
LIntExport Herror regiongrowing_mean(const Halcon::Hobject &Image,Halcon::Hobject *Regions, Hlong StartRows, Hlong StartColumns, double Tolerance, Hlong MinSize);
LIntExport Herror pouring(const Halcon::Hobject &Image, Halcon::Hobject *Regions, const Halcon::HTuple &Mode, const Halcon::HTuple &MinGray, const Halcon::HTuple &MaxGray);
LIntExport Herror pouring(const Halcon::Hobject &Image,Halcon::Hobject *Regions, const char *Mode, Hlong MinGray, Hlong MaxGray);
LIntExport Herror watersheds_threshold(const Halcon::Hobject &Image, Halcon::Hobject *Basins, const Halcon::HTuple &Threshold);
LIntExport Herror watersheds_threshold(const Halcon::Hobject &Image,Halcon::Hobject *Basins, Hlong Threshold);
LIntExport Herror watersheds(const Halcon::Hobject &Image, Halcon::Hobject *Basins, Halcon::Hobject *Watersheds);
LIntExport Herror zero_crossing(const Halcon::Hobject &Image, Halcon::Hobject *RegionCrossing);
LIntExport Herror zero_crossing_sub_pix(const Halcon::Hobject &Image, Halcon::Hobject *ZeroCrossings);
LIntExport Herror dual_threshold(const Halcon::Hobject &Image, Halcon::Hobject *RegionCrossings, const Halcon::HTuple &MinSize, const Halcon::HTuple &MinGray, const Halcon::HTuple &Threshold);
LIntExport Herror dual_threshold(const Halcon::Hobject &Image,Halcon::Hobject *RegionCrossings, Hlong MinSize, double MinGray, double Threshold);
LIntExport Herror expand_line(const Halcon::Hobject &Image, Halcon::Hobject *RegionExpand, const Halcon::HTuple &Coordinate, const Halcon::HTuple &ExpandType, const Halcon::HTuple &RowColumn, const Halcon::HTuple &Threshold);
LIntExport Herror expand_line(const Halcon::Hobject &Image,Halcon::Hobject *RegionExpand, Hlong Coordinate, const char *ExpandType, const char *RowColumn, double Threshold);
LIntExport Herror local_min(const Halcon::Hobject &Image, Halcon::Hobject *LocalMinima);
LIntExport Herror lowlands(const Halcon::Hobject &Image, Halcon::Hobject *Lowlands);
LIntExport Herror lowlands_center(const Halcon::Hobject &Image, Halcon::Hobject *Lowlands);
LIntExport Herror local_max(const Halcon::Hobject &Image, Halcon::Hobject *LocalMaxima);
LIntExport Herror plateaus(const Halcon::Hobject &Image, Halcon::Hobject *Plateaus);
LIntExport Herror plateaus_center(const Halcon::Hobject &Image, Halcon::Hobject *Plateaus);
LIntExport Herror histo_to_thresh(const Halcon::HTuple &Histogramm, const Halcon::HTuple &Sigma, Halcon::HTuple *MinThresh, Halcon::HTuple *MaxThresh);
LIntExport Herror auto_threshold(const Halcon::Hobject &Image, Halcon::Hobject *Regions, const Halcon::HTuple &Sigma);
LIntExport Herror auto_threshold(const Halcon::Hobject &Image,Halcon::Hobject *Regions, double Sigma);
LIntExport Herror bin_threshold(const Halcon::Hobject &Image, Halcon::Hobject *Region);
LIntExport Herror fast_threshold(const Halcon::Hobject &Image, Halcon::Hobject *Region, const Halcon::HTuple &MinGray, const Halcon::HTuple &MaxGray, const Halcon::HTuple &MinSize);
LIntExport Herror fast_threshold(const Halcon::Hobject &Image,Halcon::Hobject *Region, double MinGray, double MaxGray, Hlong MinSize);
LIntExport Herror polar_trans_region_inv(const Halcon::Hobject &PolarRegion, Halcon::Hobject *XYTransRegion, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleEnd, const Halcon::HTuple &RadiusStart, const Halcon::HTuple &RadiusEnd, const Halcon::HTuple &WidthIn, const Halcon::HTuple &HeightIn, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Interpolation);
LIntExport Herror polar_trans_region_inv(const Halcon::Hobject &PolarRegion,Halcon::Hobject *XYTransRegion, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong WidthIn, Hlong HeightIn, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror polar_trans_region(const Halcon::Hobject &Region, Halcon::Hobject *PolarTransRegion, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleEnd, const Halcon::HTuple &RadiusStart, const Halcon::HTuple &RadiusEnd, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Interpolation);
LIntExport Herror polar_trans_region(const Halcon::Hobject &Region,Halcon::Hobject *PolarTransRegion, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror merge_regions_line_scan(const Halcon::Hobject &CurrRegions, const Halcon::Hobject &PrevRegions, Halcon::Hobject *CurrMergedRegions, Halcon::Hobject *PrevMergedRegions, const Halcon::HTuple &ImageHeight, const Halcon::HTuple &MergeBorder, const Halcon::HTuple &MaxImagesRegion);
LIntExport Herror merge_regions_line_scan(const Halcon::Hobject &CurrRegions, const Halcon::Hobject &PrevRegions,Halcon::Hobject *CurrMergedRegions,Halcon::Hobject *PrevMergedRegions, Hlong ImageHeight, const char *MergeBorder, Hlong MaxImagesRegion);
LIntExport Herror partition_rectangle(const Halcon::Hobject &Region, Halcon::Hobject *Partitioned, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror partition_rectangle(const Halcon::Hobject &Region,Halcon::Hobject *Partitioned, double Width, double Height);
LIntExport Herror partition_dynamic(const Halcon::Hobject &Region, Halcon::Hobject *Partitioned, const Halcon::HTuple &Distance, const Halcon::HTuple &Percent);
LIntExport Herror partition_dynamic(const Halcon::Hobject &Region,Halcon::Hobject *Partitioned, double Distance, double Percent);
LIntExport Herror region_to_label(const Halcon::Hobject &Region, Halcon::Hobject *ImageLabel, const Halcon::HTuple &Type, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror region_to_label(const Halcon::Hobject &Region,Halcon::Hobject *ImageLabel, const char *Type, Hlong Width, Hlong Height);
LIntExport Herror region_to_bin(const Halcon::Hobject &Region, Halcon::Hobject *BinImage, const Halcon::HTuple &ForegroundGray, const Halcon::HTuple &BackgroundGray, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror region_to_bin(const Halcon::Hobject &Region,Halcon::Hobject *BinImage, Hlong ForegroundGray, Hlong BackgroundGray, Hlong Width, Hlong Height);
LIntExport Herror union2(const Halcon::Hobject &Region1, const Halcon::Hobject &Region2, Halcon::Hobject *RegionUnion);
LIntExport Herror union1(const Halcon::Hobject &Region, Halcon::Hobject *RegionUnion);
LIntExport Herror closest_point_transform(const Halcon::Hobject &Region, Halcon::Hobject *Distances, Halcon::Hobject *ClosestPoints, const Halcon::HTuple &Metric, const Halcon::HTuple &Foreground, const Halcon::HTuple &ClosestPointMode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror closest_point_transform(const Halcon::Hobject &Region,Halcon::Hobject *Distances,Halcon::Hobject *ClosestPoints, const char *Metric, const char *Foreground, const char *ClosestPointMode, Hlong Width, Hlong Height);
LIntExport Herror distance_transform(const Halcon::Hobject &Region, Halcon::Hobject *DistanceImage, const Halcon::HTuple &Metric, const Halcon::HTuple &Foreground, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror distance_transform(const Halcon::Hobject &Region,Halcon::Hobject *DistanceImage, const char *Metric, const char *Foreground, Hlong Width, Hlong Height);
LIntExport Herror skeleton(const Halcon::Hobject &Region, Halcon::Hobject *Skeleton);
LIntExport Herror projective_trans_region(const Halcon::Hobject &Regions, Halcon::Hobject *TransRegions, const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Interpolation);
LIntExport Herror affine_trans_region(const Halcon::Hobject &Region, Halcon::Hobject *RegionAffineTrans, const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Interpolate);
LIntExport Herror mirror_region(const Halcon::Hobject &Region, Halcon::Hobject *RegionMirror, const Halcon::HTuple &Mode, const Halcon::HTuple &WidthHeight);
LIntExport Herror mirror_region(const Halcon::Hobject &Region,Halcon::Hobject *RegionMirror, const char *Mode, Hlong WidthHeight);
LIntExport Herror zoom_region(const Halcon::Hobject &Region, Halcon::Hobject *RegionZoom, const Halcon::HTuple &ScaleWidth, const Halcon::HTuple &ScaleHeight);
LIntExport Herror zoom_region(const Halcon::Hobject &Region,Halcon::Hobject *RegionZoom, double ScaleWidth, double ScaleHeight);
LIntExport Herror move_region(const Halcon::Hobject &Region, Halcon::Hobject *RegionMoved, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror move_region(const Halcon::Hobject &Region,Halcon::Hobject *RegionMoved, Hlong Row, Hlong Column);
LIntExport Herror junctions_skeleton(const Halcon::Hobject &Region, Halcon::Hobject *EndPoints, Halcon::Hobject *JuncPoints);
LIntExport Herror intersection(const Halcon::Hobject &Region1, const Halcon::Hobject &Region2, Halcon::Hobject *RegionIntersection);
LIntExport Herror interjacent(const Halcon::Hobject &Region, Halcon::Hobject *RegionInterjacent, const Halcon::HTuple &Mode);
LIntExport Herror interjacent(const Halcon::Hobject &Region,Halcon::Hobject *RegionInterjacent, const char *Mode);
LIntExport Herror fill_up(const Halcon::Hobject &Region, Halcon::Hobject *RegionFillUp);
LIntExport Herror fill_up_shape(const Halcon::Hobject &Region, Halcon::Hobject *RegionFillUp, const Halcon::HTuple &Feature, const Halcon::HTuple &Min, const Halcon::HTuple &Max);
LIntExport Herror fill_up_shape(const Halcon::Hobject &Region,Halcon::Hobject *RegionFillUp, const char *Feature, double Min, double Max);
LIntExport Herror expand_region(const Halcon::Hobject &Regions, const Halcon::Hobject &ForbiddenArea, Halcon::Hobject *RegionExpanded, const Halcon::HTuple &Iterations, const Halcon::HTuple &Mode);
LIntExport Herror expand_region(const Halcon::Hobject &Regions, const Halcon::Hobject &ForbiddenArea,Halcon::Hobject *RegionExpanded, Hlong Iterations, const char *Mode);
LIntExport Herror clip_region_rel(const Halcon::Hobject &Region, Halcon::Hobject *RegionClipped, const Halcon::HTuple &Top, const Halcon::HTuple &Bottom, const Halcon::HTuple &Left, const Halcon::HTuple &Right);
LIntExport Herror clip_region_rel(const Halcon::Hobject &Region,Halcon::Hobject *RegionClipped, Hlong Top, Hlong Bottom, Hlong Left, Hlong Right);
LIntExport Herror clip_region(const Halcon::Hobject &Region, Halcon::Hobject *RegionClipped, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2);
LIntExport Herror clip_region(const Halcon::Hobject &Region,Halcon::Hobject *RegionClipped, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror rank_region(const Halcon::Hobject &Region, Halcon::Hobject *RegionCount, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Number);
LIntExport Herror rank_region(const Halcon::Hobject &Region,Halcon::Hobject *RegionCount, Hlong Width, Hlong Height, Hlong Number);
LIntExport Herror connection(const Halcon::Hobject &Region, Halcon::Hobject *ConnectedRegions);
LIntExport Herror symm_difference(const Halcon::Hobject &Region1, const Halcon::Hobject &Region2, Halcon::Hobject *RegionDifference);
LIntExport Herror difference(const Halcon::Hobject &Region, const Halcon::Hobject &Sub, Halcon::Hobject *RegionDifference);
LIntExport Herror complement(const Halcon::Hobject &Region, Halcon::Hobject *RegionComplement);
LIntExport Herror background_seg(const Halcon::Hobject &Foreground, Halcon::Hobject *BackgroundRegions);
LIntExport Herror hamming_change_region(const Halcon::Hobject &InputRegion, Halcon::Hobject *OutputRegion, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Distance);
LIntExport Herror hamming_change_region(const Halcon::Hobject &InputRegion,Halcon::Hobject *OutputRegion, Hlong Width, Hlong Height, Hlong Distance);
LIntExport Herror remove_noise_region(const Halcon::Hobject &InputRegion, Halcon::Hobject *OutputRegion, const Halcon::HTuple &Type);
LIntExport Herror remove_noise_region(const Halcon::Hobject &InputRegion,Halcon::Hobject *OutputRegion, const char *Type);
LIntExport Herror shape_trans(const Halcon::Hobject &Region, Halcon::Hobject *RegionTrans, const Halcon::HTuple &Type);
LIntExport Herror shape_trans(const Halcon::Hobject &Region,Halcon::Hobject *RegionTrans, const char *Type);
LIntExport Herror expand_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::Hobject &ForbiddenArea, Halcon::Hobject *RegionExpand, const Halcon::HTuple &Iterations, const Halcon::HTuple &Mode, const Halcon::HTuple &Threshold);
LIntExport Herror expand_gray_ref(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::Hobject &ForbiddenArea, Halcon::Hobject *RegionExpand, const Halcon::HTuple &Iterations, const Halcon::HTuple &Mode, const Halcon::HTuple &RefGray, const Halcon::HTuple &Threshold);
LIntExport Herror split_skeleton_lines(const Halcon::Hobject &SkeletonRegion, const Halcon::HTuple &MaxDistance, Halcon::HTuple *BeginRow, Halcon::HTuple *BeginCol, Halcon::HTuple *EndRow, Halcon::HTuple *EndCol);
LIntExport Herror split_skeleton_lines(const Halcon::Hobject &SkeletonRegion, Hlong MaxDistance, Halcon::HTuple *BeginRow, Halcon::HTuple *BeginCol, Halcon::HTuple *EndRow, Halcon::HTuple *EndCol);
LIntExport Herror split_skeleton_region(const Halcon::Hobject &SkeletonRegion, Halcon::Hobject *RegionLines, const Halcon::HTuple &MaxDistance);
LIntExport Herror split_skeleton_region(const Halcon::Hobject &SkeletonRegion,Halcon::Hobject *RegionLines, Hlong MaxDistance);
LIntExport Herror gen_region_histo(Halcon::Hobject *Region, const Halcon::HTuple &Histogram, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Scale);
LIntExport Herror eliminate_runs(const Halcon::Hobject &Region, Halcon::Hobject *RegionClipped, const Halcon::HTuple &ElimShorter, const Halcon::HTuple &ElimLonger);
LIntExport Herror eliminate_runs(const Halcon::Hobject &Region,Halcon::Hobject *RegionClipped, Hlong ElimShorter, Hlong ElimLonger);
LIntExport Herror surface_normals_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *ObjectModel3DNormals);
LIntExport Herror surface_normals_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *ObjectModel3DNormals);
LIntExport Herror surface_normals_object_model_3d(Hlong ObjectModel3D, const char *Method, const char *GenParamName, double GenParamValue, Halcon::HTuple *ObjectModel3DNormals);
LIntExport Herror surface_normals_object_model_3d(Hlong ObjectModel3D, const char *Method, const char *GenParamName, double GenParamValue, Hlong *ObjectModel3DNormals);
LIntExport Herror smooth_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *SmoothObjectModel3D);
LIntExport Herror smooth_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *SmoothObjectModel3D);
LIntExport Herror smooth_object_model_3d(Hlong ObjectModel3D, const char *Method, const char *GenParamName, double GenParamValue, Halcon::HTuple *SmoothObjectModel3D);
LIntExport Herror smooth_object_model_3d(Hlong ObjectModel3D, const char *Method, const char *GenParamName, double GenParamValue, Hlong *SmoothObjectModel3D);
LIntExport Herror triangulate_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *TriangulatedObjectModel3D, Halcon::HTuple *Information);
LIntExport Herror triangulate_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *TriangulatedObjectModel3D, Hlong *Information);
LIntExport Herror triangulate_object_model_3d(Hlong ObjectModel3D, const char *Method, const char *GenParamName, double GenParamValue, Halcon::HTuple *TriangulatedObjectModel3D, Halcon::HTuple *Information);
LIntExport Herror triangulate_object_model_3d(Hlong ObjectModel3D, const char *Method, const char *GenParamName, double GenParamValue, Hlong *TriangulatedObjectModel3D, Hlong *Information);
LIntExport Herror clear_all_stereo_models(void);
LIntExport Herror clear_stereo_model(const Halcon::HTuple &StereoModelID);
LIntExport Herror clear_stereo_model(Hlong StereoModelID);
LIntExport Herror reconstruct_points_stereo(const Halcon::HTuple &StereoModelID, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &CovIP, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &PointIdx, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z, Halcon::HTuple *CovWP, Halcon::HTuple *PointIdxOut);
LIntExport Herror reconstruct_points_stereo(const Halcon::HTuple &StereoModelID, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &CovIP, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &PointIdx, double *X, double *Y, double *Z, double *CovWP, Hlong *PointIdxOut);
LIntExport Herror reconstruct_surface_stereo(const Halcon::Hobject &Images, const Halcon::HTuple &StereoModelID, Halcon::HTuple *ObjectModel3D);
LIntExport Herror reconstruct_surface_stereo(const Halcon::Hobject &Images, const Halcon::HTuple &StereoModelID, Hlong *ObjectModel3D);
LIntExport Herror reconstruct_surface_stereo(const Halcon::Hobject &Images, Hlong StereoModelID, Halcon::HTuple *ObjectModel3D);
LIntExport Herror reconstruct_surface_stereo(const Halcon::Hobject &Images, Hlong StereoModelID, Hlong *ObjectModel3D);
LIntExport Herror get_stereo_model_object(Halcon::Hobject *Object, const Halcon::HTuple &StereoModelID, const Halcon::HTuple &PairIndex, const Halcon::HTuple &ObjectName);
LIntExport Herror get_stereo_model_object(Halcon::Hobject *Object, Hlong StereoModelID, Hlong PairIndex, const char *ObjectName);
LIntExport Herror get_stereo_model_image_pairs(const Halcon::HTuple &StereoModelID, Halcon::HTuple *From, Halcon::HTuple *To);
LIntExport Herror get_stereo_model_image_pairs(Hlong StereoModelID, Halcon::HTuple *From, Halcon::HTuple *To);
LIntExport Herror set_stereo_model_image_pairs(const Halcon::HTuple &StereoModelID, const Halcon::HTuple &From, const Halcon::HTuple &To);
LIntExport Herror get_stereo_model_param(const Halcon::HTuple &StereoModelID, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_stereo_model_param(Hlong StereoModelID, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror set_stereo_model_param(const Halcon::HTuple &StereoModelID, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror create_stereo_model(const Halcon::HTuple &CameraSetupModelID, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *StereoModelID);
LIntExport Herror create_stereo_model(const Halcon::HTuple &CameraSetupModelID, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *StereoModelID);
LIntExport Herror get_message_queue_param(const Halcon::HTuple &QueueHandle, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_message_queue_param(const Halcon::HTuple &QueueHandle, const Halcon::HTuple &GenParamName, char *GenParamValue);
LIntExport Herror get_message_queue_param(Hlong QueueHandle, const char *GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_message_queue_param(Hlong QueueHandle, const char *GenParamName, char *GenParamValue);
LIntExport Herror set_message_queue_param(const Halcon::HTuple &QueueHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror dequeue_message(const Halcon::HTuple &QueueHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *MessageHandle);
LIntExport Herror dequeue_message(const Halcon::HTuple &QueueHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *MessageHandle);
LIntExport Herror enqueue_message(const Halcon::HTuple &QueueHandle, const Halcon::HTuple &MessageHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror clear_message_queue(const Halcon::HTuple &QueueHandle);
LIntExport Herror clear_message_queue(Hlong QueueHandle);
LIntExport Herror create_message_queue(Halcon::HTuple *QueueHandle);
LIntExport Herror create_message_queue(Hlong *QueueHandle);
LIntExport Herror get_message_param(const Halcon::HTuple &MessageHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &Key, Halcon::HTuple *GenParamValue);
LIntExport Herror get_message_param(const Halcon::HTuple &MessageHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &Key, char *GenParamValue);
LIntExport Herror get_message_param(Hlong MessageHandle, const char *GenParamName, const char *Key, Halcon::HTuple *GenParamValue);
LIntExport Herror get_message_param(Hlong MessageHandle, const char *GenParamName, const char *Key, char *GenParamValue);
LIntExport Herror set_message_param(const Halcon::HTuple &MessageHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &Key, const Halcon::HTuple &GenParamValue);
LIntExport Herror get_message_obj(Halcon::Hobject *ObjectData, const Halcon::HTuple &MessageHandle, const Halcon::HTuple &Key);
LIntExport Herror get_message_obj(Halcon::Hobject *ObjectData, Hlong MessageHandle, const char *Key);
LIntExport Herror set_message_obj(const Halcon::Hobject &ObjectData, const Halcon::HTuple &MessageHandle, const Halcon::HTuple &Key);
LIntExport Herror set_message_obj(const Halcon::Hobject &ObjectData, Hlong MessageHandle, const char *Key);
LIntExport Herror get_message_tuple(const Halcon::HTuple &MessageHandle, const Halcon::HTuple &Key, Halcon::HTuple *TupleData);
LIntExport Herror get_message_tuple(const Halcon::HTuple &MessageHandle, const Halcon::HTuple &Key, char *TupleData);
LIntExport Herror get_message_tuple(Hlong MessageHandle, const char *Key, Halcon::HTuple *TupleData);
LIntExport Herror get_message_tuple(Hlong MessageHandle, const char *Key, char *TupleData);
LIntExport Herror set_message_tuple(const Halcon::HTuple &MessageHandle, const Halcon::HTuple &Key, const Halcon::HTuple &TupleData);
LIntExport Herror clear_message(const Halcon::HTuple &MessageHandle);
LIntExport Herror clear_message(Hlong MessageHandle);
LIntExport Herror create_message(Halcon::HTuple *MessageHandle);
LIntExport Herror create_message(Hlong *MessageHandle);
LIntExport Herror clear_all_conditions(void);
LIntExport Herror clear_condition(const Halcon::HTuple &ConditionHandle);
LIntExport Herror clear_condition(Hlong ConditionHandle);
LIntExport Herror broadcast_condition(const Halcon::HTuple &ConditionHandle);
LIntExport Herror broadcast_condition(Hlong ConditionHandle);
LIntExport Herror signal_condition(const Halcon::HTuple &ConditionHandle);
LIntExport Herror signal_condition(Hlong ConditionHandle);
LIntExport Herror timed_wait_condition(const Halcon::HTuple &ConditionHandle, const Halcon::HTuple &MutexHandle, const Halcon::HTuple &Timeout);
LIntExport Herror timed_wait_condition(Hlong ConditionHandle, Hlong MutexHandle, Hlong Timeout);
LIntExport Herror wait_condition(const Halcon::HTuple &ConditionHandle, const Halcon::HTuple &MutexHandle);
LIntExport Herror wait_condition(Hlong ConditionHandle, Hlong MutexHandle);
LIntExport Herror create_condition(const Halcon::HTuple &AttribName, const Halcon::HTuple &AttribValue, Halcon::HTuple *ConditionHandle);
LIntExport Herror create_condition(const Halcon::HTuple &AttribName, const Halcon::HTuple &AttribValue, Hlong *ConditionHandle);
LIntExport Herror clear_all_barriers(void);
LIntExport Herror clear_barrier(const Halcon::HTuple &BarrierHandle);
LIntExport Herror clear_barrier(Hlong BarrierHandle);
LIntExport Herror wait_barrier(const Halcon::HTuple &BarrierHandle);
LIntExport Herror wait_barrier(Hlong BarrierHandle);
LIntExport Herror create_barrier(const Halcon::HTuple &AttribName, const Halcon::HTuple &AttribValue, const Halcon::HTuple &TeamSize, Halcon::HTuple *BarrierHandle);
LIntExport Herror create_barrier(const Halcon::HTuple &AttribName, const Halcon::HTuple &AttribValue, const Halcon::HTuple &TeamSize, Hlong *BarrierHandle);
LIntExport Herror clear_all_events(void);
LIntExport Herror clear_event(const Halcon::HTuple &EventHandle);
LIntExport Herror clear_event(Hlong EventHandle);
LIntExport Herror signal_event(const Halcon::HTuple &EventHandle);
LIntExport Herror signal_event(Hlong EventHandle);
LIntExport Herror try_wait_event(const Halcon::HTuple &EventHandle, Halcon::HTuple *Busy);
LIntExport Herror try_wait_event(const Halcon::HTuple &EventHandle, Hlong *Busy);
LIntExport Herror try_wait_event(Hlong EventHandle, Halcon::HTuple *Busy);
LIntExport Herror try_wait_event(Hlong EventHandle, Hlong *Busy);
LIntExport Herror wait_event(const Halcon::HTuple &EventHandle);
LIntExport Herror wait_event(Hlong EventHandle);
LIntExport Herror create_event(const Halcon::HTuple &AttribName, const Halcon::HTuple &AttribValue, Halcon::HTuple *EventHandle);
LIntExport Herror create_event(const Halcon::HTuple &AttribName, const Halcon::HTuple &AttribValue, Hlong *EventHandle);
LIntExport Herror clear_all_mutexes(void);
LIntExport Herror clear_mutex(const Halcon::HTuple &MutexHandle);
LIntExport Herror clear_mutex(Hlong MutexHandle);
LIntExport Herror unlock_mutex(const Halcon::HTuple &MutexHandle);
LIntExport Herror unlock_mutex(Hlong MutexHandle);
LIntExport Herror try_lock_mutex(const Halcon::HTuple &MutexHandle, Halcon::HTuple *Busy);
LIntExport Herror try_lock_mutex(const Halcon::HTuple &MutexHandle, Hlong *Busy);
LIntExport Herror try_lock_mutex(Hlong MutexHandle, Halcon::HTuple *Busy);
LIntExport Herror try_lock_mutex(Hlong MutexHandle, Hlong *Busy);
LIntExport Herror lock_mutex(const Halcon::HTuple &MutexHandle);
LIntExport Herror lock_mutex(Hlong MutexHandle);
LIntExport Herror create_mutex(const Halcon::HTuple &AttribName, const Halcon::HTuple &AttribValue, Halcon::HTuple *MutexHandle);
LIntExport Herror create_mutex(const Halcon::HTuple &AttribName, const Halcon::HTuple &AttribValue, Hlong *MutexHandle);
LIntExport Herror get_threading_attrib(const Halcon::HTuple &ThreadingHandle, Halcon::HTuple *ThreadingClass, Halcon::HTuple *AttribName, Halcon::HTuple *AttribValue);
LIntExport Herror get_threading_attrib(Hlong ThreadingHandle, Halcon::HTuple *ThreadingClass, Halcon::HTuple *AttribName, Halcon::HTuple *AttribValue);
LIntExport Herror load_par_knowledge(const Halcon::HTuple &FileName);
LIntExport Herror load_par_knowledge(const char *FileName);
LIntExport Herror store_par_knowledge(const Halcon::HTuple &FileName);
LIntExport Herror store_par_knowledge(const char *FileName);
LIntExport Herror check_par_hw_potential(const Halcon::HTuple &AllInpPars);
LIntExport Herror check_par_hw_potential(Hlong AllInpPars);
LIntExport Herror set_aop_info(const Halcon::HTuple &OperatorName, const Halcon::HTuple &IndexName, const Halcon::HTuple &IndexValue, const Halcon::HTuple &InfoName, const Halcon::HTuple &InfoValue);
LIntExport Herror get_aop_info(const Halcon::HTuple &OperatorName, const Halcon::HTuple &IndexName, const Halcon::HTuple &IndexValue, const Halcon::HTuple &InfoName, Halcon::HTuple *InfoValue);
LIntExport Herror get_aop_info(const Halcon::HTuple &OperatorName, const Halcon::HTuple &IndexName, const Halcon::HTuple &IndexValue, const Halcon::HTuple &InfoName, char *InfoValue);
LIntExport Herror query_aop_info(const Halcon::HTuple &OperatorName, const Halcon::HTuple &IndexName, const Halcon::HTuple &IndexValue, Halcon::HTuple *Name, Halcon::HTuple *Value);
LIntExport Herror optimize_aop(const Halcon::HTuple &OperatorName, const Halcon::HTuple &IconicType, const Halcon::HTuple &FileName, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror write_aop_knowledge(const Halcon::HTuple &FileName, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror read_aop_knowledge(const Halcon::HTuple &FileName, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *Attributes, Halcon::HTuple *OperatorNames);
LIntExport Herror sensor_kalman(const Halcon::HTuple &Dimension, const Halcon::HTuple &MeasurementIn, Halcon::HTuple *MeasurementOut);
LIntExport Herror sensor_kalman(const Halcon::HTuple &Dimension, const Halcon::HTuple &MeasurementIn, double *MeasurementOut);
LIntExport Herror sensor_kalman(Hlong Dimension, double MeasurementIn, Halcon::HTuple *MeasurementOut);
LIntExport Herror sensor_kalman(Hlong Dimension, double MeasurementIn, double *MeasurementOut);
LIntExport Herror test_obj_def(const Halcon::Hobject &Object, Halcon::HTuple *IsDefined);
LIntExport Herror test_obj_def(const Halcon::Hobject &Object, Hlong *IsDefined);
LIntExport Herror test_access(const Halcon::Hobject &Object, Halcon::Hobject *Dummy, const Halcon::HTuple &NumReadChord, const Halcon::HTuple &NumCopyObj, const Halcon::HTuple &Write_chord);
LIntExport Herror test_access(const Halcon::Hobject &Object,Halcon::Hobject *Dummy, Hlong NumReadChord, Hlong NumCopyObj, Hlong Write_chord);
LIntExport Herror obj_diff(const Halcon::Hobject &Objects, const Halcon::Hobject &ObjectsSub, Halcon::Hobject *ObjectsDiff);
LIntExport Herror set_grayval(const Halcon::Hobject &Image, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Grayval);
LIntExport Herror set_grayval(const Halcon::Hobject &Image, Hlong Row, Hlong Column, double Grayval);
LIntExport Herror paint_xld(const Halcon::Hobject &XLD, const Halcon::Hobject &Image, Halcon::Hobject *ImageResult, const Halcon::HTuple &Grayval);
LIntExport Herror paint_xld(const Halcon::Hobject &XLD, const Halcon::Hobject &Image,Halcon::Hobject *ImageResult, double Grayval);
LIntExport Herror paint_region(const Halcon::Hobject &Region, const Halcon::Hobject &Image, Halcon::Hobject *ImageResult, const Halcon::HTuple &Grayval, const Halcon::HTuple &Type);
LIntExport Herror paint_region(const Halcon::Hobject &Region, const Halcon::Hobject &Image,Halcon::Hobject *ImageResult, double Grayval, const char *Type);
LIntExport Herror overpaint_region(const Halcon::Hobject &Image, const Halcon::Hobject &Region, const Halcon::HTuple &Grayval, const Halcon::HTuple &Type);
LIntExport Herror overpaint_region(const Halcon::Hobject &Image, const Halcon::Hobject &Region, double Grayval, const char *Type);
LIntExport Herror gen_image_proto(const Halcon::Hobject &Image, Halcon::Hobject *ImageCleared, const Halcon::HTuple &Grayval);
LIntExport Herror gen_image_proto(const Halcon::Hobject &Image,Halcon::Hobject *ImageCleared, double Grayval);
LIntExport Herror paint_gray(const Halcon::Hobject &ImageSource, const Halcon::Hobject &ImageDestination, Halcon::Hobject *MixedImage);
LIntExport Herror overpaint_gray(const Halcon::Hobject &ImageDestination, const Halcon::Hobject &ImageSource);
LIntExport Herror integer_to_obj(Halcon::Hobject *Objects, const Halcon::HTuple &SurrogateTuple);
LIntExport Herror integer_to_obj(Halcon::Hobject *Objects, Hlong SurrogateTuple);
LIntExport Herror obj_to_integer(const Halcon::Hobject &Objects, const Halcon::HTuple &Index, const Halcon::HTuple &Number, Halcon::HTuple *SurrogateTuple);
LIntExport Herror obj_to_integer(const Halcon::Hobject &Objects, const Halcon::HTuple &Index, const Halcon::HTuple &Number, Hlong *SurrogateTuple);
LIntExport Herror obj_to_integer(const Halcon::Hobject &Objects, Hlong Index, Hlong Number, Halcon::HTuple *SurrogateTuple);
LIntExport Herror obj_to_integer(const Halcon::Hobject &Objects, Hlong Index, Hlong Number, Hlong *SurrogateTuple);
LIntExport Herror copy_obj(const Halcon::Hobject &Objects, Halcon::Hobject *ObjectsSelected, const Halcon::HTuple &Index, const Halcon::HTuple &NumObj);
LIntExport Herror copy_obj(const Halcon::Hobject &Objects,Halcon::Hobject *ObjectsSelected, Hlong Index, Hlong NumObj);
LIntExport Herror concat_obj(const Halcon::Hobject &Objects1, const Halcon::Hobject &Objects2, Halcon::Hobject *ObjectsConcat);
LIntExport Herror clear_obj(const Halcon::Hobject &Objects);
LIntExport Herror copy_image(const Halcon::Hobject &Image, Halcon::Hobject *DupImage);
LIntExport Herror select_obj(const Halcon::Hobject &Objects, Halcon::Hobject *ObjectSelected, const Halcon::HTuple &Index);
LIntExport Herror select_obj(const Halcon::Hobject &Objects,Halcon::Hobject *ObjectSelected, Hlong Index);
LIntExport Herror compare_obj(const Halcon::Hobject &Objects1, const Halcon::Hobject &Objects2, const Halcon::HTuple &Epsilon, Halcon::HTuple *IsEqual);
LIntExport Herror compare_obj(const Halcon::Hobject &Objects1, const Halcon::Hobject &Objects2, const Halcon::HTuple &Epsilon, Hlong *IsEqual);
LIntExport Herror compare_obj(const Halcon::Hobject &Objects1, const Halcon::Hobject &Objects2, double Epsilon, Halcon::HTuple *IsEqual);
LIntExport Herror compare_obj(const Halcon::Hobject &Objects1, const Halcon::Hobject &Objects2, double Epsilon, Hlong *IsEqual);
LIntExport Herror test_subset_region(const Halcon::Hobject &Region1, const Halcon::Hobject &Region2, Halcon::HTuple *IsSubset);
LIntExport Herror test_subset_region(const Halcon::Hobject &Region1, const Halcon::Hobject &Region2, Hlong *IsSubset);
LIntExport Herror test_equal_region(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, Halcon::HTuple *IsEqual);
LIntExport Herror test_equal_region(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, Hlong *IsEqual);
LIntExport Herror test_equal_obj(const Halcon::Hobject &Objects1, const Halcon::Hobject &Objects2, Halcon::HTuple *IsEqual);
LIntExport Herror test_equal_obj(const Halcon::Hobject &Objects1, const Halcon::Hobject &Objects2, Hlong *IsEqual);
LIntExport Herror count_obj(const Halcon::Hobject &Objects, Halcon::HTuple *Number);
LIntExport Herror count_obj(const Halcon::Hobject &Objects, Hlong *Number);
LIntExport Herror get_channel_info(const Halcon::Hobject &Object, const Halcon::HTuple &Request, const Halcon::HTuple &Channel, Halcon::HTuple *Information);
LIntExport Herror get_channel_info(const Halcon::Hobject &Object, const Halcon::HTuple &Request, const Halcon::HTuple &Channel, char *Information);
LIntExport Herror get_channel_info(const Halcon::Hobject &Object, const char *Request, Hlong Channel, Halcon::HTuple *Information);
LIntExport Herror get_channel_info(const Halcon::Hobject &Object, const char *Request, Hlong Channel, char *Information);
LIntExport Herror get_obj_class(const Halcon::Hobject &Object, Halcon::HTuple *Class);
LIntExport Herror get_obj_class(const Halcon::Hobject &Object, char *Class);
LIntExport Herror gen_image_interleaved(Halcon::Hobject *ImageRGB, const Halcon::HTuple &PixelPointer, const Halcon::HTuple &ColorFormat, const Halcon::HTuple &OriginalWidth, const Halcon::HTuple &OriginalHeight, const Halcon::HTuple &Alignment, const Halcon::HTuple &Type, const Halcon::HTuple &ImageWidth, const Halcon::HTuple &ImageHeight, const Halcon::HTuple &StartRow, const Halcon::HTuple &StartColumn, const Halcon::HTuple &BitsPerChannel, const Halcon::HTuple &BitShift);
LIntExport Herror gen_image_interleaved(Halcon::Hobject *ImageRGB, Hlong PixelPointer, const char *ColorFormat, Hlong OriginalWidth, Hlong OriginalHeight, Hlong Alignment, const char *Type, Hlong ImageWidth, Hlong ImageHeight, Hlong StartRow, Hlong StartColumn, Hlong BitsPerChannel, Hlong BitShift);
LIntExport Herror gen_region_polygon_xld(const Halcon::Hobject &Polygon, Halcon::Hobject *Region, const Halcon::HTuple &Mode);
LIntExport Herror gen_region_polygon_xld(const Halcon::Hobject &Polygon,Halcon::Hobject *Region, const char *Mode);
LIntExport Herror gen_region_contour_xld(const Halcon::Hobject &Contour, Halcon::Hobject *Region, const Halcon::HTuple &Mode);
LIntExport Herror gen_region_contour_xld(const Halcon::Hobject &Contour,Halcon::Hobject *Region, const char *Mode);
LIntExport Herror gen_region_polygon_filled(Halcon::Hobject *Region, const Halcon::HTuple &Rows, const Halcon::HTuple &Columns);
LIntExport Herror gen_region_polygon(Halcon::Hobject *Region, const Halcon::HTuple &Rows, const Halcon::HTuple &Columns);
LIntExport Herror gen_region_points(Halcon::Hobject *Region, const Halcon::HTuple &Rows, const Halcon::HTuple &Columns);
LIntExport Herror gen_region_points(Halcon::Hobject *Region, Hlong Rows, Hlong Columns);
LIntExport Herror gen_region_runs(Halcon::Hobject *Region, const Halcon::HTuple &Row, const Halcon::HTuple &ColumnBegin, const Halcon::HTuple &ColumnEnd);
LIntExport Herror gen_region_runs(Halcon::Hobject *Region, Hlong Row, Hlong ColumnBegin, Hlong ColumnEnd);
LIntExport Herror gen_rectangle2(Halcon::Hobject *Rectangle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2);
LIntExport Herror gen_rectangle2(Halcon::Hobject *Rectangle, double Row, double Column, double Phi, double Length1, double Length2);
LIntExport Herror gen_rectangle1(Halcon::Hobject *Rectangle, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2);
LIntExport Herror gen_rectangle1(Halcon::Hobject *Rectangle, double Row1, double Column1, double Row2, double Column2);
LIntExport Herror gen_random_region(Halcon::Hobject *RegionRandom, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_random_region(Halcon::Hobject *RegionRandom, Hlong Width, Hlong Height);
LIntExport Herror gen_image3(Halcon::Hobject *ImageRGB, const Halcon::HTuple &Type, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &PixelPointerRed, const Halcon::HTuple &PixelPointerGreen, const Halcon::HTuple &PixelPointerBlue);
LIntExport Herror gen_image3(Halcon::Hobject *ImageRGB, const char *Type, Hlong Width, Hlong Height, Hlong PixelPointerRed, Hlong PixelPointerGreen, Hlong PixelPointerBlue);
LIntExport Herror gen_image1(Halcon::Hobject *Image, const Halcon::HTuple &Type, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &PixelPointer);
LIntExport Herror gen_image1(Halcon::Hobject *Image, const char *Type, Hlong Width, Hlong Height, Hlong PixelPointer);
LIntExport Herror gen_image_const(Halcon::Hobject *Image, const Halcon::HTuple &Type, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_image_const(Halcon::Hobject *Image, const char *Type, Hlong Width, Hlong Height);
LIntExport Herror gen_ellipse_sector(Halcon::Hobject *EllipseSector, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, const Halcon::HTuple &StartAngle, const Halcon::HTuple &EndAngle);
LIntExport Herror gen_ellipse_sector(Halcon::Hobject *EllipseSector, double Row, double Column, double Phi, double Radius1, double Radius2, double StartAngle, double EndAngle);
LIntExport Herror gen_ellipse(Halcon::Hobject *Ellipse, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2);
LIntExport Herror gen_ellipse(Halcon::Hobject *Ellipse, double Row, double Column, double Phi, double Radius1, double Radius2);
LIntExport Herror gen_circle_sector(Halcon::Hobject *CircleSector, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius, const Halcon::HTuple &StartAngle, const Halcon::HTuple &EndAngle);
LIntExport Herror gen_circle_sector(Halcon::Hobject *CircleSector, double Row, double Column, double Radius, double StartAngle, double EndAngle);
LIntExport Herror gen_circle(Halcon::Hobject *Circle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius);
LIntExport Herror gen_circle(Halcon::Hobject *Circle, double Row, double Column, double Radius);
LIntExport Herror gen_checker_region(Halcon::Hobject *RegionChecker, const Halcon::HTuple &WidthRegion, const Halcon::HTuple &HeightRegion, const Halcon::HTuple &WidthPattern, const Halcon::HTuple &HeightPattern);
LIntExport Herror gen_checker_region(Halcon::Hobject *RegionChecker, Hlong WidthRegion, Hlong HeightRegion, Hlong WidthPattern, Hlong HeightPattern);
LIntExport Herror gen_grid_region(Halcon::Hobject *RegionGrid, const Halcon::HTuple &RowSteps, const Halcon::HTuple &ColumnSteps, const Halcon::HTuple &Type, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_grid_region(Halcon::Hobject *RegionGrid, Hlong RowSteps, Hlong ColumnSteps, const char *Type, Hlong Width, Hlong Height);
LIntExport Herror gen_random_regions(Halcon::Hobject *Regions, const Halcon::HTuple &Type, const Halcon::HTuple &WidthMin, const Halcon::HTuple &WidthMax, const Halcon::HTuple &HeightMin, const Halcon::HTuple &HeightMax, const Halcon::HTuple &PhiMin, const Halcon::HTuple &PhiMax, const Halcon::HTuple &NumRegions, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_random_regions(Halcon::Hobject *Regions, const char *Type, double WidthMin, double WidthMax, double HeightMin, double HeightMax, double PhiMin, double PhiMax, Hlong NumRegions, Hlong Width, Hlong Height);
LIntExport Herror gen_region_hline(Halcon::Hobject *Regions, const Halcon::HTuple &Orientation, const Halcon::HTuple &Distance);
LIntExport Herror gen_region_hline(Halcon::Hobject *Regions, double Orientation, double Distance);
LIntExport Herror gen_region_line(Halcon::Hobject *RegionLines, const Halcon::HTuple &BeginRow, const Halcon::HTuple &BeginCol, const Halcon::HTuple &EndRow, const Halcon::HTuple &EndCol);
LIntExport Herror gen_region_line(Halcon::Hobject *RegionLines, Hlong BeginRow, Hlong BeginCol, Hlong EndRow, Hlong EndCol);
LIntExport Herror gen_empty_obj(Halcon::Hobject *EmptyObject);
LIntExport Herror gen_empty_region(Halcon::Hobject *EmptyRegion);
LIntExport Herror gen_image_gray_ramp(Halcon::Hobject *ImageGrayRamp, const Halcon::HTuple &Alpha, const Halcon::HTuple &Beta, const Halcon::HTuple &Mean, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_image_gray_ramp(Halcon::Hobject *ImageGrayRamp, double Alpha, double Beta, double Mean, Hlong Row, Hlong Column, Hlong Width, Hlong Height);
LIntExport Herror gen_image3_extern(Halcon::Hobject *Image, const Halcon::HTuple &Type, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &PointerRed, const Halcon::HTuple &PointerGreen, const Halcon::HTuple &PointerBlue, const Halcon::HTuple &ClearProc);
LIntExport Herror gen_image3_extern(Halcon::Hobject *Image, const char *Type, Hlong Width, Hlong Height, Hlong PointerRed, Hlong PointerGreen, Hlong PointerBlue, Hlong ClearProc);
LIntExport Herror gen_image1_extern(Halcon::Hobject *Image, const Halcon::HTuple &Type, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &PixelPointer, const Halcon::HTuple &ClearProc);
LIntExport Herror gen_image1_extern(Halcon::Hobject *Image, const char *Type, Hlong Width, Hlong Height, Hlong PixelPointer, Hlong ClearProc);
LIntExport Herror gen_image1_rect(Halcon::Hobject *Image, const Halcon::HTuple &PixelPointer, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &VerticalPitch, const Halcon::HTuple &HorizontalBitPitch, const Halcon::HTuple &BitsPerPixel, const Halcon::HTuple &DoCopy, const Halcon::HTuple &ClearProc);
LIntExport Herror gen_image1_rect(Halcon::Hobject *Image, Hlong PixelPointer, Hlong Width, Hlong Height, Hlong VerticalPitch, Hlong HorizontalBitPitch, Hlong BitsPerPixel, const char *DoCopy, Hlong ClearProc);
LIntExport Herror get_image_pointer1_rect(const Halcon::Hobject &Image, Halcon::HTuple *PixelPointer, Halcon::HTuple *Width, Halcon::HTuple *Height, Halcon::HTuple *VerticalPitch, Halcon::HTuple *HorizontalBitPitch, Halcon::HTuple *BitsPerPixel);
LIntExport Herror get_image_pointer1_rect(const Halcon::Hobject &Image, Hlong *PixelPointer, Hlong *Width, Hlong *Height, Hlong *VerticalPitch, Hlong *HorizontalBitPitch, Hlong *BitsPerPixel);
LIntExport Herror get_image_pointer3(const Halcon::Hobject &ImageRGB, Halcon::HTuple *PointerRed, Halcon::HTuple *PointerGreen, Halcon::HTuple *PointerBlue, Halcon::HTuple *Type, Halcon::HTuple *Width, Halcon::HTuple *Height);
LIntExport Herror get_image_pointer3(const Halcon::Hobject &ImageRGB, Hlong *PointerRed, Hlong *PointerGreen, Hlong *PointerBlue, char *Type, Hlong *Width, Hlong *Height);
LIntExport Herror get_image_pointer1(const Halcon::Hobject &Image, Halcon::HTuple *Pointer, Halcon::HTuple *Type, Halcon::HTuple *Width, Halcon::HTuple *Height);
LIntExport Herror get_image_pointer1(const Halcon::Hobject &Image, Hlong *Pointer, char *Type, Hlong *Width, Hlong *Height);
LIntExport Herror get_image_type(const Halcon::Hobject &Image, Halcon::HTuple *Type);
LIntExport Herror get_image_type(const Halcon::Hobject &Image, char *Type);
LIntExport Herror get_image_size(const Halcon::Hobject &Image, Halcon::HTuple *Width, Halcon::HTuple *Height);
LIntExport Herror get_image_size(const Halcon::Hobject &Image, Hlong *Width, Hlong *Height);
LIntExport Herror get_image_time(const Halcon::Hobject &Image, Halcon::HTuple *MSecond, Halcon::HTuple *Second, Halcon::HTuple *Minute, Halcon::HTuple *Hour, Halcon::HTuple *Day, Halcon::HTuple *YDay, Halcon::HTuple *Month, Halcon::HTuple *Year);
LIntExport Herror get_image_time(const Halcon::Hobject &Image, Hlong *MSecond, Hlong *Second, Hlong *Minute, Hlong *Hour, Hlong *Day, Hlong *YDay, Hlong *Month, Hlong *Year);
LIntExport Herror get_grayval_interpolated(const Halcon::Hobject &Image, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Interpolation, Halcon::HTuple *Grayval);
LIntExport Herror get_grayval_interpolated(const Halcon::Hobject &Image, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Interpolation, double *Grayval);
LIntExport Herror get_grayval_interpolated(const Halcon::Hobject &Image, double Row, double Column, const char *Interpolation, Halcon::HTuple *Grayval);
LIntExport Herror get_grayval_interpolated(const Halcon::Hobject &Image, double Row, double Column, const char *Interpolation, double *Grayval);
LIntExport Herror get_grayval(const Halcon::Hobject &Image, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *Grayval);
LIntExport Herror get_grayval(const Halcon::Hobject &Image, const Halcon::HTuple &Row, const Halcon::HTuple &Column, double *Grayval);
LIntExport Herror get_grayval(const Halcon::Hobject &Image, Hlong Row, Hlong Column, Halcon::HTuple *Grayval);
LIntExport Herror get_grayval(const Halcon::Hobject &Image, Hlong Row, Hlong Column, double *Grayval);
LIntExport Herror get_region_thickness(const Halcon::Hobject &Region, Halcon::HTuple *Thickness, Halcon::HTuple *Histogramm);
LIntExport Herror get_region_polygon(const Halcon::Hobject &Region, const Halcon::HTuple &Tolerance, Halcon::HTuple *Rows, Halcon::HTuple *Columns);
LIntExport Herror get_region_polygon(const Halcon::Hobject &Region, double Tolerance, Halcon::HTuple *Rows, Halcon::HTuple *Columns);
LIntExport Herror get_region_points(const Halcon::Hobject &Region, Halcon::HTuple *Rows, Halcon::HTuple *Columns);
LIntExport Herror get_region_contour(const Halcon::Hobject &Region, Halcon::HTuple *Rows, Halcon::HTuple *Columns);
LIntExport Herror get_region_runs(const Halcon::Hobject &Region, Halcon::HTuple *Row, Halcon::HTuple *ColumnBegin, Halcon::HTuple *ColumnEnd);
LIntExport Herror get_region_chain(const Halcon::Hobject &Region, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Chain);
LIntExport Herror get_region_convex(const Halcon::Hobject &Region, Halcon::HTuple *Rows, Halcon::HTuple *Columns);
LIntExport Herror do_ocv_simple(const Halcon::Hobject &Pattern, const Halcon::HTuple &OCVHandle, const Halcon::HTuple &PatternName, const Halcon::HTuple &AdaptPos, const Halcon::HTuple &AdaptSize, const Halcon::HTuple &AdaptAngle, const Halcon::HTuple &AdaptGray, const Halcon::HTuple &Threshold, Halcon::HTuple *Quality);
LIntExport Herror do_ocv_simple(const Halcon::Hobject &Pattern, const Halcon::HTuple &OCVHandle, const Halcon::HTuple &PatternName, const Halcon::HTuple &AdaptPos, const Halcon::HTuple &AdaptSize, const Halcon::HTuple &AdaptAngle, const Halcon::HTuple &AdaptGray, const Halcon::HTuple &Threshold, double *Quality);
LIntExport Herror do_ocv_simple(const Halcon::Hobject &Pattern, Hlong OCVHandle, const char *PatternName, const char *AdaptPos, const char *AdaptSize, const char *AdaptAngle, const char *AdaptGray, double Threshold, Halcon::HTuple *Quality);
LIntExport Herror do_ocv_simple(const Halcon::Hobject &Pattern, Hlong OCVHandle, const char *PatternName, const char *AdaptPos, const char *AdaptSize, const char *AdaptAngle, const char *AdaptGray, double Threshold, double *Quality);
LIntExport Herror traind_ocv_proj(const Halcon::Hobject &Pattern, const Halcon::HTuple &OCVHandle, const Halcon::HTuple &Name, const Halcon::HTuple &Mode);
LIntExport Herror traind_ocv_proj(const Halcon::Hobject &Pattern, Hlong OCVHandle, const char *Name, const char *Mode);
LIntExport Herror deserialize_ocv(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *OCVHandle);
LIntExport Herror deserialize_ocv(const Halcon::HTuple &SerializedItemHandle, Hlong *OCVHandle);
LIntExport Herror deserialize_ocv(Hlong SerializedItemHandle, Halcon::HTuple *OCVHandle);
LIntExport Herror deserialize_ocv(Hlong SerializedItemHandle, Hlong *OCVHandle);
LIntExport Herror serialize_ocv(const Halcon::HTuple &OCVHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocv(const Halcon::HTuple &OCVHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_ocv(Hlong OCVHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocv(Hlong OCVHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_ocv(const Halcon::HTuple &FileName, Halcon::HTuple *OCVHandle);
LIntExport Herror read_ocv(const Halcon::HTuple &FileName, Hlong *OCVHandle);
LIntExport Herror read_ocv(const char *FileName, Halcon::HTuple *OCVHandle);
LIntExport Herror read_ocv(const char *FileName, Hlong *OCVHandle);
LIntExport Herror write_ocv(const Halcon::HTuple &OCVHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_ocv(Hlong OCVHandle, const char *FileName);
LIntExport Herror close_all_ocvs(void);
LIntExport Herror close_ocv(const Halcon::HTuple &OCVHandle);
LIntExport Herror close_ocv(Hlong OCVHandle);
LIntExport Herror create_ocv_proj(const Halcon::HTuple &PatternNames, Halcon::HTuple *OCVHandle);
LIntExport Herror create_ocv_proj(const Halcon::HTuple &PatternNames, Hlong *OCVHandle);
LIntExport Herror create_ocv_proj(const char *PatternNames, Halcon::HTuple *OCVHandle);
LIntExport Herror create_ocv_proj(const char *PatternNames, Hlong *OCVHandle);
LIntExport Herror do_ocr_word_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Expression, const Halcon::HTuple &NumAlternatives, const Halcon::HTuple &NumCorrections, Halcon::HTuple *Class, Halcon::HTuple *Confidence, Halcon::HTuple *Word, Halcon::HTuple *Score);
LIntExport Herror do_ocr_word_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Expression, const Halcon::HTuple &NumAlternatives, const Halcon::HTuple &NumCorrections, char *Class, double *Confidence, char *Word, double *Score);
LIntExport Herror do_ocr_word_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, const char *Expression, Hlong NumAlternatives, Hlong NumCorrections, Halcon::HTuple *Class, Halcon::HTuple *Confidence, Halcon::HTuple *Word, Halcon::HTuple *Score);
LIntExport Herror do_ocr_word_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, const char *Expression, Hlong NumAlternatives, Hlong NumCorrections, char *Class, double *Confidence, char *Word, double *Score);
LIntExport Herror deserialize_ocr_class_knn(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *OCRHandle);
LIntExport Herror deserialize_ocr_class_knn(const Halcon::HTuple &SerializedItemHandle, Hlong *OCRHandle);
LIntExport Herror deserialize_ocr_class_knn(Hlong SerializedItemHandle, Halcon::HTuple *OCRHandle);
LIntExport Herror deserialize_ocr_class_knn(Hlong SerializedItemHandle, Hlong *OCRHandle);
LIntExport Herror serialize_ocr_class_knn(const Halcon::HTuple &OCRHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_knn(const Halcon::HTuple &OCRHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_knn(Hlong OCRHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_knn(Hlong OCRHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_ocr_class_knn(const Halcon::HTuple &FileName, Halcon::HTuple *OCRHandle);
LIntExport Herror read_ocr_class_knn(const Halcon::HTuple &FileName, Hlong *OCRHandle);
LIntExport Herror read_ocr_class_knn(const char *FileName, Halcon::HTuple *OCRHandle);
LIntExport Herror read_ocr_class_knn(const char *FileName, Hlong *OCRHandle);
LIntExport Herror write_ocr_class_knn(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_ocr_class_knn(Hlong OCRHandle, const char *FileName);
LIntExport Herror clear_all_ocr_class_knn(void);
LIntExport Herror clear_ocr_class_knn(const Halcon::HTuple &OCRHandle);
LIntExport Herror clear_ocr_class_knn(Hlong OCRHandle);
LIntExport Herror create_ocr_class_knn(const Halcon::HTuple &WidthCharacter, const Halcon::HTuple &HeightCharacter, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Features, const Halcon::HTuple &Characters, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *OCRHandle);
LIntExport Herror create_ocr_class_knn(const Halcon::HTuple &WidthCharacter, const Halcon::HTuple &HeightCharacter, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Features, const Halcon::HTuple &Characters, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *OCRHandle);
LIntExport Herror trainf_ocr_class_knn(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &TrainingFile, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror get_features_ocr_class_knn(const Halcon::Hobject &Character, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Transform, Halcon::HTuple *Features);
LIntExport Herror get_features_ocr_class_knn(const Halcon::Hobject &Character, Hlong OCRHandle, const char *Transform, Halcon::HTuple *Features);
LIntExport Herror get_params_ocr_class_knn(const Halcon::HTuple &OCRHandle, Halcon::HTuple *WidthCharacter, Halcon::HTuple *HeightCharacter, Halcon::HTuple *Interpolation, Halcon::HTuple *Features, Halcon::HTuple *Characters, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumTrees);
LIntExport Herror get_params_ocr_class_knn(Hlong OCRHandle, Halcon::HTuple *WidthCharacter, Halcon::HTuple *HeightCharacter, Halcon::HTuple *Interpolation, Halcon::HTuple *Features, Halcon::HTuple *Characters, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumTrees);
LIntExport Herror do_ocr_multi_class_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, Halcon::HTuple *Class, Halcon::HTuple *Confidence);
LIntExport Herror do_ocr_multi_class_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, char *Class, double *Confidence);
LIntExport Herror do_ocr_multi_class_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, Halcon::HTuple *Class, Halcon::HTuple *Confidence);
LIntExport Herror do_ocr_multi_class_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, char *Class, double *Confidence);
LIntExport Herror do_ocr_single_class_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &NumClasses, const Halcon::HTuple &NumNeighbors, Halcon::HTuple *Class, Halcon::HTuple *Confidence);
LIntExport Herror do_ocr_single_class_knn(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &NumClasses, const Halcon::HTuple &NumNeighbors, char *Class, double *Confidence);
LIntExport Herror select_feature_set_trainf_knn(const Halcon::HTuple &TrainingFile, const Halcon::HTuple &FeatureList, const Halcon::HTuple &SelectionMethod, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_trainf_knn(const char *TrainingFile, const char *FeatureList, const char *SelectionMethod, Hlong Width, Hlong Height, const char *GenParamNames, double GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_trainf_mlp_protected(const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Password, const Halcon::HTuple &FeatureList, const Halcon::HTuple &SelectionMethod, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_trainf_mlp_protected(const char *TrainingFile, const char *Password, const char *FeatureList, const char *SelectionMethod, Hlong Width, Hlong Height, const char *GenParamNames, double GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_trainf_mlp(const Halcon::HTuple &TrainingFile, const Halcon::HTuple &FeatureList, const Halcon::HTuple &SelectionMethod, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_trainf_mlp(const char *TrainingFile, const char *FeatureList, const char *SelectionMethod, Hlong Width, Hlong Height, const char *GenParamNames, double GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_trainf_svm_protected(const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Password, const Halcon::HTuple &FeatureList, const Halcon::HTuple &SelectionMethod, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_trainf_svm_protected(const char *TrainingFile, const char *Password, const char *FeatureList, const char *SelectionMethod, Hlong Width, Hlong Height, const char *GenParamNames, double GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_trainf_svm(const Halcon::HTuple &TrainingFile, const Halcon::HTuple &FeatureList, const Halcon::HTuple &SelectionMethod, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_trainf_svm(const char *TrainingFile, const char *FeatureList, const char *SelectionMethod, Hlong Width, Hlong Height, const char *GenParamNames, double GenParamValues, Halcon::HTuple *OCRHandle, Halcon::HTuple *FeatureSet, Halcon::HTuple *Score);
LIntExport Herror clear_all_lexica(void);
LIntExport Herror clear_lexicon(const Halcon::HTuple &LexiconHandle);
LIntExport Herror clear_lexicon(Hlong LexiconHandle);
LIntExport Herror suggest_lexicon(const Halcon::HTuple &LexiconHandle, const Halcon::HTuple &Word, Halcon::HTuple *Suggestion, Halcon::HTuple *NumCorrections);
LIntExport Herror suggest_lexicon(const Halcon::HTuple &LexiconHandle, const Halcon::HTuple &Word, char *Suggestion, Hlong *NumCorrections);
LIntExport Herror suggest_lexicon(Hlong LexiconHandle, const char *Word, Halcon::HTuple *Suggestion, Halcon::HTuple *NumCorrections);
LIntExport Herror suggest_lexicon(Hlong LexiconHandle, const char *Word, char *Suggestion, Hlong *NumCorrections);
LIntExport Herror lookup_lexicon(const Halcon::HTuple &LexiconHandle, const Halcon::HTuple &Word, Halcon::HTuple *Found);
LIntExport Herror lookup_lexicon(const Halcon::HTuple &LexiconHandle, const Halcon::HTuple &Word, Hlong *Found);
LIntExport Herror lookup_lexicon(Hlong LexiconHandle, const char *Word, Halcon::HTuple *Found);
LIntExport Herror lookup_lexicon(Hlong LexiconHandle, const char *Word, Hlong *Found);
LIntExport Herror inspect_lexicon(const Halcon::HTuple &LexiconHandle, Halcon::HTuple *Words);
LIntExport Herror inspect_lexicon(const Halcon::HTuple &LexiconHandle, char *Words);
LIntExport Herror inspect_lexicon(Hlong LexiconHandle, Halcon::HTuple *Words);
LIntExport Herror inspect_lexicon(Hlong LexiconHandle, char *Words);
LIntExport Herror import_lexicon(const Halcon::HTuple &Name, const Halcon::HTuple &FileName, Halcon::HTuple *LexiconHandle);
LIntExport Herror import_lexicon(const Halcon::HTuple &Name, const Halcon::HTuple &FileName, Hlong *LexiconHandle);
LIntExport Herror import_lexicon(const char *Name, const char *FileName, Halcon::HTuple *LexiconHandle);
LIntExport Herror import_lexicon(const char *Name, const char *FileName, Hlong *LexiconHandle);
LIntExport Herror create_lexicon(const Halcon::HTuple &Name, const Halcon::HTuple &Words, Halcon::HTuple *LexiconHandle);
LIntExport Herror create_lexicon(const Halcon::HTuple &Name, const Halcon::HTuple &Words, Hlong *LexiconHandle);
LIntExport Herror clear_all_ocr_class_svm(void);
LIntExport Herror clear_ocr_class_svm(const Halcon::HTuple &OCRHandle);
LIntExport Herror clear_ocr_class_svm(Hlong OCRHandle);
LIntExport Herror deserialize_ocr_class_svm(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *OCRHandle);
LIntExport Herror deserialize_ocr_class_svm(const Halcon::HTuple &SerializedItemHandle, Hlong *OCRHandle);
LIntExport Herror deserialize_ocr_class_svm(Hlong SerializedItemHandle, Halcon::HTuple *OCRHandle);
LIntExport Herror deserialize_ocr_class_svm(Hlong SerializedItemHandle, Hlong *OCRHandle);
LIntExport Herror serialize_ocr_class_svm(const Halcon::HTuple &OCRHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_svm(const Halcon::HTuple &OCRHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_svm(Hlong OCRHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_svm(Hlong OCRHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_ocr_class_svm(const Halcon::HTuple &FileName, Halcon::HTuple *OCRHandle);
LIntExport Herror read_ocr_class_svm(const Halcon::HTuple &FileName, Hlong *OCRHandle);
LIntExport Herror read_ocr_class_svm(const char *FileName, Halcon::HTuple *OCRHandle);
LIntExport Herror read_ocr_class_svm(const char *FileName, Hlong *OCRHandle);
LIntExport Herror write_ocr_class_svm(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_ocr_class_svm(Hlong OCRHandle, const char *FileName);
LIntExport Herror get_features_ocr_class_svm(const Halcon::Hobject &Character, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Transform, Halcon::HTuple *Features);
LIntExport Herror get_features_ocr_class_svm(const Halcon::Hobject &Character, Hlong OCRHandle, const char *Transform, Halcon::HTuple *Features);
LIntExport Herror do_ocr_word_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Expression, const Halcon::HTuple &NumAlternatives, const Halcon::HTuple &NumCorrections, Halcon::HTuple *Class, Halcon::HTuple *Word, Halcon::HTuple *Score);
LIntExport Herror do_ocr_word_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Expression, const Halcon::HTuple &NumAlternatives, const Halcon::HTuple &NumCorrections, char *Class, char *Word, double *Score);
LIntExport Herror do_ocr_word_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, const char *Expression, Hlong NumAlternatives, Hlong NumCorrections, Halcon::HTuple *Class, Halcon::HTuple *Word, Halcon::HTuple *Score);
LIntExport Herror do_ocr_word_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, const char *Expression, Hlong NumAlternatives, Hlong NumCorrections, char *Class, char *Word, double *Score);
LIntExport Herror do_ocr_multi_class_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, Halcon::HTuple *Class);
LIntExport Herror do_ocr_multi_class_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, char *Class);
LIntExport Herror do_ocr_multi_class_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, Halcon::HTuple *Class);
LIntExport Herror do_ocr_multi_class_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, char *Class);
LIntExport Herror do_ocr_single_class_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Num, Halcon::HTuple *Class);
LIntExport Herror do_ocr_single_class_svm(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Num, char *Class);
LIntExport Herror reduce_ocr_class_svm(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Method, const Halcon::HTuple &MinRemainingSV, const Halcon::HTuple &MaxError, Halcon::HTuple *OCRHandleReduced);
LIntExport Herror reduce_ocr_class_svm(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Method, const Halcon::HTuple &MinRemainingSV, const Halcon::HTuple &MaxError, Hlong *OCRHandleReduced);
LIntExport Herror reduce_ocr_class_svm(Hlong OCRHandle, const char *Method, Hlong MinRemainingSV, double MaxError, Halcon::HTuple *OCRHandleReduced);
LIntExport Herror reduce_ocr_class_svm(Hlong OCRHandle, const char *Method, Hlong MinRemainingSV, double MaxError, Hlong *OCRHandleReduced);
LIntExport Herror trainf_ocr_class_svm_protected(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Password, const Halcon::HTuple &Epsilon, const Halcon::HTuple &TrainMode);
LIntExport Herror trainf_ocr_class_svm(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Epsilon, const Halcon::HTuple &TrainMode);
LIntExport Herror get_prep_info_ocr_class_svm(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_prep_info_ocr_class_svm(Hlong OCRHandle, const char *TrainingFile, const char *Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_support_vector_num_ocr_class_svm(const Halcon::HTuple &OCRHandle, Halcon::HTuple *NumSupportVectors, Halcon::HTuple *NumSVPerSVM);
LIntExport Herror get_support_vector_num_ocr_class_svm(Hlong OCRHandle, Halcon::HTuple *NumSupportVectors, Halcon::HTuple *NumSVPerSVM);
LIntExport Herror get_support_vector_ocr_class_svm(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &IndexSupportVector, Halcon::HTuple *Index);
LIntExport Herror get_support_vector_ocr_class_svm(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &IndexSupportVector, double *Index);
LIntExport Herror get_params_ocr_class_svm(const Halcon::HTuple &OCRHandle, Halcon::HTuple *WidthCharacter, Halcon::HTuple *HeightCharacter, Halcon::HTuple *Interpolation, Halcon::HTuple *Features, Halcon::HTuple *Characters, Halcon::HTuple *KernelType, Halcon::HTuple *KernelParam, Halcon::HTuple *Nu, Halcon::HTuple *Mode, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumComponents);
LIntExport Herror get_params_ocr_class_svm(Hlong OCRHandle, Halcon::HTuple *WidthCharacter, Halcon::HTuple *HeightCharacter, Halcon::HTuple *Interpolation, Halcon::HTuple *Features, Halcon::HTuple *Characters, Halcon::HTuple *KernelType, Halcon::HTuple *KernelParam, Halcon::HTuple *Nu, Halcon::HTuple *Mode, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumComponents);
LIntExport Herror create_ocr_class_svm(const Halcon::HTuple &WidthCharacter, const Halcon::HTuple &HeightCharacter, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Features, const Halcon::HTuple &Characters, const Halcon::HTuple &KernelType, const Halcon::HTuple &KernelParam, const Halcon::HTuple &Nu, const Halcon::HTuple &Mode, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, Halcon::HTuple *OCRHandle);
LIntExport Herror create_ocr_class_svm(const Halcon::HTuple &WidthCharacter, const Halcon::HTuple &HeightCharacter, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Features, const Halcon::HTuple &Characters, const Halcon::HTuple &KernelType, const Halcon::HTuple &KernelParam, const Halcon::HTuple &Nu, const Halcon::HTuple &Mode, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, Hlong *OCRHandle);
LIntExport Herror clear_all_ocr_class_mlp(void);
LIntExport Herror clear_ocr_class_mlp(const Halcon::HTuple &OCRHandle);
LIntExport Herror clear_ocr_class_mlp(Hlong OCRHandle);
LIntExport Herror deserialize_ocr_class_mlp(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *OCRHandle);
LIntExport Herror deserialize_ocr_class_mlp(const Halcon::HTuple &SerializedItemHandle, Hlong *OCRHandle);
LIntExport Herror deserialize_ocr_class_mlp(Hlong SerializedItemHandle, Halcon::HTuple *OCRHandle);
LIntExport Herror deserialize_ocr_class_mlp(Hlong SerializedItemHandle, Hlong *OCRHandle);
LIntExport Herror serialize_ocr_class_mlp(const Halcon::HTuple &OCRHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_mlp(const Halcon::HTuple &OCRHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_mlp(Hlong OCRHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocr_class_mlp(Hlong OCRHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_ocr_class_mlp(const Halcon::HTuple &FileName, Halcon::HTuple *OCRHandle);
LIntExport Herror read_ocr_class_mlp(const Halcon::HTuple &FileName, Hlong *OCRHandle);
LIntExport Herror read_ocr_class_mlp(const char *FileName, Halcon::HTuple *OCRHandle);
LIntExport Herror read_ocr_class_mlp(const char *FileName, Hlong *OCRHandle);
LIntExport Herror write_ocr_class_mlp(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_ocr_class_mlp(Hlong OCRHandle, const char *FileName);
LIntExport Herror get_features_ocr_class_mlp(const Halcon::Hobject &Character, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Transform, Halcon::HTuple *Features);
LIntExport Herror get_features_ocr_class_mlp(const Halcon::Hobject &Character, Hlong OCRHandle, const char *Transform, Halcon::HTuple *Features);
LIntExport Herror do_ocr_word_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Expression, const Halcon::HTuple &NumAlternatives, const Halcon::HTuple &NumCorrections, Halcon::HTuple *Class, Halcon::HTuple *Confidence, Halcon::HTuple *Word, Halcon::HTuple *Score);
LIntExport Herror do_ocr_word_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Expression, const Halcon::HTuple &NumAlternatives, const Halcon::HTuple &NumCorrections, char *Class, double *Confidence, char *Word, double *Score);
LIntExport Herror do_ocr_word_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, const char *Expression, Hlong NumAlternatives, Hlong NumCorrections, Halcon::HTuple *Class, Halcon::HTuple *Confidence, Halcon::HTuple *Word, Halcon::HTuple *Score);
LIntExport Herror do_ocr_word_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, const char *Expression, Hlong NumAlternatives, Hlong NumCorrections, char *Class, double *Confidence, char *Word, double *Score);
LIntExport Herror do_ocr_multi_class_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, Halcon::HTuple *Class, Halcon::HTuple *Confidence);
LIntExport Herror do_ocr_multi_class_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, char *Class, double *Confidence);
LIntExport Herror do_ocr_multi_class_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, Halcon::HTuple *Class, Halcon::HTuple *Confidence);
LIntExport Herror do_ocr_multi_class_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OCRHandle, char *Class, double *Confidence);
LIntExport Herror do_ocr_single_class_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Num, Halcon::HTuple *Class, Halcon::HTuple *Confidence);
LIntExport Herror do_ocr_single_class_mlp(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OCRHandle, const Halcon::HTuple &Num, char *Class, double *Confidence);
LIntExport Herror trainf_ocr_class_mlp_protected(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Password, const Halcon::HTuple &MaxIterations, const Halcon::HTuple &WeightTolerance, const Halcon::HTuple &ErrorTolerance, Halcon::HTuple *Error, Halcon::HTuple *ErrorLog);
LIntExport Herror trainf_ocr_class_mlp_protected(Hlong OCRHandle, const char *TrainingFile, const char *Password, Hlong MaxIterations, double WeightTolerance, double ErrorTolerance, Halcon::HTuple *Error, Halcon::HTuple *ErrorLog);
LIntExport Herror trainf_ocr_class_mlp(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &TrainingFile, const Halcon::HTuple &MaxIterations, const Halcon::HTuple &WeightTolerance, const Halcon::HTuple &ErrorTolerance, Halcon::HTuple *Error, Halcon::HTuple *ErrorLog);
LIntExport Herror trainf_ocr_class_mlp(Hlong OCRHandle, const char *TrainingFile, Hlong MaxIterations, double WeightTolerance, double ErrorTolerance, Halcon::HTuple *Error, Halcon::HTuple *ErrorLog);
LIntExport Herror get_prep_info_ocr_class_mlp(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_prep_info_ocr_class_mlp(Hlong OCRHandle, const char *TrainingFile, const char *Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_rejection_params_ocr_class_mlp(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_rejection_params_ocr_class_mlp(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &GenParamName, char *GenParamValue);
LIntExport Herror get_rejection_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_rejection_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, char *GenParamValue);
LIntExport Herror set_rejection_params_ocr_class_mlp(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror set_rejection_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, const char *GenParamValue);
LIntExport Herror get_regularization_params_ocr_class_mlp(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_regularization_params_ocr_class_mlp(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &GenParamName, double *GenParamValue);
LIntExport Herror get_regularization_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_regularization_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, double *GenParamValue);
LIntExport Herror set_regularization_params_ocr_class_mlp(const Halcon::HTuple &OCRHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror set_regularization_params_ocr_class_mlp(Hlong OCRHandle, const char *GenParamName, double GenParamValue);
LIntExport Herror get_params_ocr_class_mlp(const Halcon::HTuple &OCRHandle, Halcon::HTuple *WidthCharacter, Halcon::HTuple *HeightCharacter, Halcon::HTuple *Interpolation, Halcon::HTuple *Features, Halcon::HTuple *Characters, Halcon::HTuple *NumHidden, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumComponents);
LIntExport Herror get_params_ocr_class_mlp(Hlong OCRHandle, Halcon::HTuple *WidthCharacter, Halcon::HTuple *HeightCharacter, Halcon::HTuple *Interpolation, Halcon::HTuple *Features, Halcon::HTuple *Characters, Halcon::HTuple *NumHidden, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumComponents);
LIntExport Herror create_ocr_class_mlp(const Halcon::HTuple &WidthCharacter, const Halcon::HTuple &HeightCharacter, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Features, const Halcon::HTuple &Characters, const Halcon::HTuple &NumHidden, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, const Halcon::HTuple &RandSeed, Halcon::HTuple *OCRHandle);
LIntExport Herror create_ocr_class_mlp(const Halcon::HTuple &WidthCharacter, const Halcon::HTuple &HeightCharacter, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Features, const Halcon::HTuple &Characters, const Halcon::HTuple &NumHidden, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, const Halcon::HTuple &RandSeed, Hlong *OCRHandle);
LIntExport Herror serialize_ocr(const Halcon::HTuple &OcrHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocr(const Halcon::HTuple &OcrHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_ocr(Hlong OcrHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ocr(Hlong OcrHandle, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_ocr(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *OcrHandle);
LIntExport Herror deserialize_ocr(const Halcon::HTuple &SerializedItemHandle, Hlong *OcrHandle);
LIntExport Herror deserialize_ocr(Hlong SerializedItemHandle, Halcon::HTuple *OcrHandle);
LIntExport Herror deserialize_ocr(Hlong SerializedItemHandle, Hlong *OcrHandle);
LIntExport Herror write_ocr(const Halcon::HTuple &OcrHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_ocr(Hlong OcrHandle, const char *FileName);
LIntExport Herror read_ocr(const Halcon::HTuple &FileName, Halcon::HTuple *OcrHandle);
LIntExport Herror read_ocr(const Halcon::HTuple &FileName, Hlong *OcrHandle);
LIntExport Herror read_ocr(const char *FileName, Halcon::HTuple *OcrHandle);
LIntExport Herror read_ocr(const char *FileName, Hlong *OcrHandle);
LIntExport Herror do_ocr_single(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OcrHandle, Halcon::HTuple *Classes, Halcon::HTuple *Confidences);
LIntExport Herror do_ocr_single(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OcrHandle, Halcon::HTuple *Classes, Halcon::HTuple *Confidences);
LIntExport Herror do_ocr_multi(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OcrHandle, Halcon::HTuple *Class, Halcon::HTuple *Confidence);
LIntExport Herror do_ocr_multi(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OcrHandle, char *Class, double *Confidence);
LIntExport Herror do_ocr_multi(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OcrHandle, Halcon::HTuple *Class, Halcon::HTuple *Confidence);
LIntExport Herror do_ocr_multi(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OcrHandle, char *Class, double *Confidence);
LIntExport Herror info_ocr_class_box(const Halcon::HTuple &OcrHandle, Halcon::HTuple *WidthPattern, Halcon::HTuple *HeightPattern, Halcon::HTuple *Interpolation, Halcon::HTuple *WidthMaxChar, Halcon::HTuple *HeightMaxChar, Halcon::HTuple *Features, Halcon::HTuple *Characters);
LIntExport Herror info_ocr_class_box(Hlong OcrHandle, Halcon::HTuple *WidthPattern, Halcon::HTuple *HeightPattern, Halcon::HTuple *Interpolation, Halcon::HTuple *WidthMaxChar, Halcon::HTuple *HeightMaxChar, Halcon::HTuple *Features, Halcon::HTuple *Characters);
LIntExport Herror create_ocr_class_box(const Halcon::HTuple &WidthPattern, const Halcon::HTuple &HeightPattern, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Features, const Halcon::HTuple &Character, Halcon::HTuple *OcrHandle);
LIntExport Herror create_ocr_class_box(const Halcon::HTuple &WidthPattern, const Halcon::HTuple &HeightPattern, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Features, const Halcon::HTuple &Character, Hlong *OcrHandle);
LIntExport Herror traind_ocr_class_box(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OcrHandle, const Halcon::HTuple &Class, Halcon::HTuple *AvgConfidence);
LIntExport Herror traind_ocr_class_box(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OcrHandle, const Halcon::HTuple &Class, double *AvgConfidence);
LIntExport Herror traind_ocr_class_box(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OcrHandle, const char *Class, Halcon::HTuple *AvgConfidence);
LIntExport Herror traind_ocr_class_box(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OcrHandle, const char *Class, double *AvgConfidence);
LIntExport Herror trainf_ocr_class_box(const Halcon::HTuple &OcrHandle, const Halcon::HTuple &TrainingFile, Halcon::HTuple *AvgConfidence);
LIntExport Herror trainf_ocr_class_box(const Halcon::HTuple &OcrHandle, const Halcon::HTuple &TrainingFile, double *AvgConfidence);
LIntExport Herror trainf_ocr_class_box(Hlong OcrHandle, const char *TrainingFile, Halcon::HTuple *AvgConfidence);
LIntExport Herror trainf_ocr_class_box(Hlong OcrHandle, const char *TrainingFile, double *AvgConfidence);
LIntExport Herror protect_ocr_trainf(const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Password, const Halcon::HTuple &TrainingFileProtected);
LIntExport Herror protect_ocr_trainf(const char *TrainingFile, const char *Password, const char *TrainingFileProtected);
LIntExport Herror write_ocr_trainf(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &Class, const Halcon::HTuple &TrainingFile);
LIntExport Herror write_ocr_trainf(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const char *Class, const char *TrainingFile);
LIntExport Herror ocr_change_char(const Halcon::HTuple &OcrHandle, const Halcon::HTuple &Character);
LIntExport Herror close_ocr(const Halcon::HTuple &OcrHandle);
LIntExport Herror close_ocr(Hlong OcrHandle);
LIntExport Herror sort_region(const Halcon::Hobject &Regions, Halcon::Hobject *SortedRegions, const Halcon::HTuple &SortMode, const Halcon::HTuple &Order, const Halcon::HTuple &RowOrCol);
LIntExport Herror sort_region(const Halcon::Hobject &Regions,Halcon::Hobject *SortedRegions, const char *SortMode, const char *Order, const char *RowOrCol);
LIntExport Herror close_all_ocrs(void);
LIntExport Herror testd_ocr_class_box(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OcrHandle, const Halcon::HTuple &Class, Halcon::HTuple *Confidence);
LIntExport Herror testd_ocr_class_box(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &OcrHandle, const Halcon::HTuple &Class, double *Confidence);
LIntExport Herror testd_ocr_class_box(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OcrHandle, const char *Class, Halcon::HTuple *Confidence);
LIntExport Herror testd_ocr_class_box(const Halcon::Hobject &Character, const Halcon::Hobject &Image, Hlong OcrHandle, const char *Class, double *Confidence);
LIntExport Herror crop_domain_rel(const Halcon::Hobject &Image, Halcon::Hobject *ImagePart, const Halcon::HTuple &Top, const Halcon::HTuple &Left, const Halcon::HTuple &Bottom, const Halcon::HTuple &Right);
LIntExport Herror crop_domain_rel(const Halcon::Hobject &Image,Halcon::Hobject *ImagePart, Hlong Top, Hlong Left, Hlong Bottom, Hlong Right);
LIntExport Herror ocr_get_features(const Halcon::Hobject &Character, const Halcon::HTuple &OcrHandle, Halcon::HTuple *FeatureVector);
LIntExport Herror ocr_get_features(const Halcon::Hobject &Character, Hlong OcrHandle, Halcon::HTuple *FeatureVector);
LIntExport Herror concat_ocr_trainf(const Halcon::HTuple &SingleFiles, const Halcon::HTuple &ComposedFile);
LIntExport Herror concat_ocr_trainf(const char *SingleFiles, const char *ComposedFile);
LIntExport Herror write_ocr_trainf_image(const Halcon::Hobject &Character, const Halcon::HTuple &Class, const Halcon::HTuple &TrainingFile);
LIntExport Herror write_ocr_trainf_image(const Halcon::Hobject &Character, const char *Class, const char *TrainingFile);
LIntExport Herror append_ocr_trainf(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const Halcon::HTuple &Class, const Halcon::HTuple &TrainingFile);
LIntExport Herror append_ocr_trainf(const Halcon::Hobject &Character, const Halcon::Hobject &Image, const char *Class, const char *TrainingFile);
LIntExport Herror read_ocr_trainf_names_protected(const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Password, Halcon::HTuple *CharacterNames, Halcon::HTuple *CharacterCount);
LIntExport Herror read_ocr_trainf_names_protected(const Halcon::HTuple &TrainingFile, const Halcon::HTuple &Password, char *CharacterNames, Hlong *CharacterCount);
LIntExport Herror read_ocr_trainf_names_protected(const char *TrainingFile, const char *Password, Halcon::HTuple *CharacterNames, Halcon::HTuple *CharacterCount);
LIntExport Herror read_ocr_trainf_names_protected(const char *TrainingFile, const char *Password, char *CharacterNames, Hlong *CharacterCount);
LIntExport Herror read_ocr_trainf_names(const Halcon::HTuple &TrainingFile, Halcon::HTuple *CharacterNames, Halcon::HTuple *CharacterCount);
LIntExport Herror read_ocr_trainf_names(const Halcon::HTuple &TrainingFile, char *CharacterNames, Hlong *CharacterCount);
LIntExport Herror read_ocr_trainf_names(const char *TrainingFile, Halcon::HTuple *CharacterNames, Halcon::HTuple *CharacterCount);
LIntExport Herror read_ocr_trainf_names(const char *TrainingFile, char *CharacterNames, Hlong *CharacterCount);
LIntExport Herror read_ocr_trainf_select(Halcon::Hobject *Characters, const Halcon::HTuple &TrainingFile, const Halcon::HTuple &SearchNames, Halcon::HTuple *FoundNames);
LIntExport Herror read_ocr_trainf_select(Halcon::Hobject *Characters, const Halcon::HTuple &TrainingFile, const Halcon::HTuple &SearchNames, char *FoundNames);
LIntExport Herror read_ocr_trainf_select(Halcon::Hobject *Characters, const char *TrainingFile, const char *SearchNames, Halcon::HTuple *FoundNames);
LIntExport Herror read_ocr_trainf_select(Halcon::Hobject *Characters, const char *TrainingFile, const char *SearchNames, char *FoundNames);
LIntExport Herror read_ocr_trainf(Halcon::Hobject *Characters, const Halcon::HTuple &TrainingFile, Halcon::HTuple *CharacterNames);
LIntExport Herror read_ocr_trainf(Halcon::Hobject *Characters, const char *TrainingFile, Halcon::HTuple *CharacterNames);
LIntExport Herror pruning(const Halcon::Hobject &Region, Halcon::Hobject *RegionPrune, const Halcon::HTuple &Length);
LIntExport Herror pruning(const Halcon::Hobject &Region,Halcon::Hobject *RegionPrune, Hlong Length);
LIntExport Herror boundary(const Halcon::Hobject &Region, Halcon::Hobject *RegionBorder, const Halcon::HTuple &BoundaryType);
LIntExport Herror boundary(const Halcon::Hobject &Region,Halcon::Hobject *RegionBorder, const char *BoundaryType);
LIntExport Herror fitting(const Halcon::Hobject &Region, const Halcon::Hobject &StructElements, Halcon::Hobject *RegionFitted);
LIntExport Herror gen_struct_elements(Halcon::Hobject *StructElements, const Halcon::HTuple &Type, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror gen_struct_elements(Halcon::Hobject *StructElements, const char *Type, Hlong Row, Hlong Column);
LIntExport Herror transpose_region(const Halcon::Hobject &Region, Halcon::Hobject *Transposed, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror transpose_region(const Halcon::Hobject &Region,Halcon::Hobject *Transposed, Hlong Row, Hlong Column);
LIntExport Herror thinning_seq(const Halcon::Hobject &Region, Halcon::Hobject *RegionThin, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Iterations);
LIntExport Herror thinning_seq(const Halcon::Hobject &Region,Halcon::Hobject *RegionThin, const char *GolayElement, Hlong Iterations);
LIntExport Herror thinning_golay(const Halcon::Hobject &Region, Halcon::Hobject *RegionThin, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Rotation);
LIntExport Herror thinning_golay(const Halcon::Hobject &Region,Halcon::Hobject *RegionThin, const char *GolayElement, Hlong Rotation);
LIntExport Herror thinning(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement1, const Halcon::Hobject &StructElement2, Halcon::Hobject *RegionThin, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Iterations);
LIntExport Herror thinning(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement1, const Halcon::Hobject &StructElement2,Halcon::Hobject *RegionThin, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror thickening_seq(const Halcon::Hobject &Region, Halcon::Hobject *RegionThick, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Iterations);
LIntExport Herror thickening_seq(const Halcon::Hobject &Region,Halcon::Hobject *RegionThick, const char *GolayElement, Hlong Iterations);
LIntExport Herror thickening_golay(const Halcon::Hobject &Region, Halcon::Hobject *RegionThick, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Rotation);
LIntExport Herror thickening_golay(const Halcon::Hobject &Region,Halcon::Hobject *RegionThick, const char *GolayElement, Hlong Rotation);
LIntExport Herror thickening(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement1, const Halcon::Hobject &StructElement2, Halcon::Hobject *RegionThick, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Iterations);
LIntExport Herror thickening(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement1, const Halcon::Hobject &StructElement2,Halcon::Hobject *RegionThick, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror hit_or_miss_seq(const Halcon::Hobject &Region, Halcon::Hobject *RegionHitMiss, const Halcon::HTuple &GolayElement);
LIntExport Herror hit_or_miss_seq(const Halcon::Hobject &Region,Halcon::Hobject *RegionHitMiss, const char *GolayElement);
LIntExport Herror hit_or_miss_golay(const Halcon::Hobject &Region, Halcon::Hobject *RegionHitMiss, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Rotation);
LIntExport Herror hit_or_miss_golay(const Halcon::Hobject &Region,Halcon::Hobject *RegionHitMiss, const char *GolayElement, Hlong Rotation);
LIntExport Herror hit_or_miss(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement1, const Halcon::Hobject &StructElement2, Halcon::Hobject *RegionHitMiss, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror hit_or_miss(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement1, const Halcon::Hobject &StructElement2,Halcon::Hobject *RegionHitMiss, Hlong Row, Hlong Column);
LIntExport Herror golay_elements(Halcon::Hobject *StructElement1, Halcon::Hobject *StructElement2, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Rotation, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror golay_elements(Halcon::Hobject *StructElement1,Halcon::Hobject *StructElement2, const char *GolayElement, Hlong Rotation, Hlong Row, Hlong Column);
LIntExport Herror morph_skiz(const Halcon::Hobject &Region, Halcon::Hobject *RegionSkiz, const Halcon::HTuple &Iterations1, const Halcon::HTuple &Iterations2);
LIntExport Herror morph_skiz(const Halcon::Hobject &Region,Halcon::Hobject *RegionSkiz, Hlong Iterations1, Hlong Iterations2);
LIntExport Herror morph_skeleton(const Halcon::Hobject &Region, Halcon::Hobject *RegionSkeleton);
LIntExport Herror morph_hat(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionMorphHat);
LIntExport Herror bottom_hat(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionBottomHat);
LIntExport Herror top_hat(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionTopHat);
LIntExport Herror minkowski_sub2(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionMinkSub, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Iterations);
LIntExport Herror minkowski_sub2(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement,Halcon::Hobject *RegionMinkSub, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror minkowski_sub1(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionMinkSub, const Halcon::HTuple &Iterations);
LIntExport Herror minkowski_sub1(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement,Halcon::Hobject *RegionMinkSub, Hlong Iterations);
LIntExport Herror minkowski_add2(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionMinkAdd, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Iterations);
LIntExport Herror minkowski_add2(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement,Halcon::Hobject *RegionMinkAdd, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror minkowski_add1(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionMinkAdd, const Halcon::HTuple &Iterations);
LIntExport Herror minkowski_add1(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement,Halcon::Hobject *RegionMinkAdd, Hlong Iterations);
LIntExport Herror closing_rectangle1(const Halcon::Hobject &Region, Halcon::Hobject *RegionClosing, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror closing_rectangle1(const Halcon::Hobject &Region,Halcon::Hobject *RegionClosing, Hlong Width, Hlong Height);
LIntExport Herror closing_golay(const Halcon::Hobject &Region, Halcon::Hobject *RegionClosing, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Rotation);
LIntExport Herror closing_golay(const Halcon::Hobject &Region,Halcon::Hobject *RegionClosing, const char *GolayElement, Hlong Rotation);
LIntExport Herror closing_circle(const Halcon::Hobject &Region, Halcon::Hobject *RegionClosing, const Halcon::HTuple &Radius);
LIntExport Herror closing_circle(const Halcon::Hobject &Region,Halcon::Hobject *RegionClosing, double Radius);
LIntExport Herror closing(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionClosing);
LIntExport Herror opening_seg(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionOpening);
LIntExport Herror opening_golay(const Halcon::Hobject &Region, Halcon::Hobject *RegionOpening, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Rotation);
LIntExport Herror opening_golay(const Halcon::Hobject &Region,Halcon::Hobject *RegionOpening, const char *GolayElement, Hlong Rotation);
LIntExport Herror opening_rectangle1(const Halcon::Hobject &Region, Halcon::Hobject *RegionOpening, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror opening_rectangle1(const Halcon::Hobject &Region,Halcon::Hobject *RegionOpening, Hlong Width, Hlong Height);
LIntExport Herror opening_circle(const Halcon::Hobject &Region, Halcon::Hobject *RegionOpening, const Halcon::HTuple &Radius);
LIntExport Herror opening_circle(const Halcon::Hobject &Region,Halcon::Hobject *RegionOpening, double Radius);
LIntExport Herror opening(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionOpening);
LIntExport Herror erosion_seq(const Halcon::Hobject &Region, Halcon::Hobject *RegionErosion, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Iterations);
LIntExport Herror erosion_seq(const Halcon::Hobject &Region,Halcon::Hobject *RegionErosion, const char *GolayElement, Hlong Iterations);
LIntExport Herror erosion_golay(const Halcon::Hobject &Region, Halcon::Hobject *RegionErosion, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Iterations, const Halcon::HTuple &Rotation);
LIntExport Herror erosion_golay(const Halcon::Hobject &Region,Halcon::Hobject *RegionErosion, const char *GolayElement, Hlong Iterations, Hlong Rotation);
LIntExport Herror erosion_rectangle1(const Halcon::Hobject &Region, Halcon::Hobject *RegionErosion, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror erosion_rectangle1(const Halcon::Hobject &Region,Halcon::Hobject *RegionErosion, Hlong Width, Hlong Height);
LIntExport Herror erosion_circle(const Halcon::Hobject &Region, Halcon::Hobject *RegionErosion, const Halcon::HTuple &Radius);
LIntExport Herror erosion_circle(const Halcon::Hobject &Region,Halcon::Hobject *RegionErosion, double Radius);
LIntExport Herror erosion2(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionErosion, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Iterations);
LIntExport Herror erosion2(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement,Halcon::Hobject *RegionErosion, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror erosion1(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionErosion, const Halcon::HTuple &Iterations);
LIntExport Herror erosion1(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement,Halcon::Hobject *RegionErosion, Hlong Iterations);
LIntExport Herror dilation_seq(const Halcon::Hobject &Region, Halcon::Hobject *RegionDilation, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Iterations);
LIntExport Herror dilation_seq(const Halcon::Hobject &Region,Halcon::Hobject *RegionDilation, const char *GolayElement, Hlong Iterations);
LIntExport Herror dilation_golay(const Halcon::Hobject &Region, Halcon::Hobject *RegionDilation, const Halcon::HTuple &GolayElement, const Halcon::HTuple &Iterations, const Halcon::HTuple &Rotation);
LIntExport Herror dilation_golay(const Halcon::Hobject &Region,Halcon::Hobject *RegionDilation, const char *GolayElement, Hlong Iterations, Hlong Rotation);
LIntExport Herror dilation_rectangle1(const Halcon::Hobject &Region, Halcon::Hobject *RegionDilation, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror dilation_rectangle1(const Halcon::Hobject &Region,Halcon::Hobject *RegionDilation, Hlong Width, Hlong Height);
LIntExport Herror dilation_circle(const Halcon::Hobject &Region, Halcon::Hobject *RegionDilation, const Halcon::HTuple &Radius);
LIntExport Herror dilation_circle(const Halcon::Hobject &Region,Halcon::Hobject *RegionDilation, double Radius);
LIntExport Herror dilation2(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionDilation, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Iterations);
LIntExport Herror dilation2(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement,Halcon::Hobject *RegionDilation, Hlong Row, Hlong Column, Hlong Iterations);
LIntExport Herror dilation1(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement, Halcon::Hobject *RegionDilation, const Halcon::HTuple &Iterations);
LIntExport Herror dilation1(const Halcon::Hobject &Region, const Halcon::Hobject &StructElement,Halcon::Hobject *RegionDilation, Hlong Iterations);
LIntExport Herror gray_bothat(const Halcon::Hobject &Image, const Halcon::Hobject &SE, Halcon::Hobject *ImageBotHat);
LIntExport Herror gray_tophat(const Halcon::Hobject &Image, const Halcon::Hobject &SE, Halcon::Hobject *ImageTopHat);
LIntExport Herror gray_closing(const Halcon::Hobject &Image, const Halcon::Hobject &SE, Halcon::Hobject *ImageClosing);
LIntExport Herror gray_opening(const Halcon::Hobject &Image, const Halcon::Hobject &SE, Halcon::Hobject *ImageOpening);
LIntExport Herror gray_dilation(const Halcon::Hobject &Image, const Halcon::Hobject &SE, Halcon::Hobject *ImageDilation);
LIntExport Herror gray_erosion(const Halcon::Hobject &Image, const Halcon::Hobject &SE, Halcon::Hobject *ImageErosion);
LIntExport Herror read_gray_se(Halcon::Hobject *SE, const Halcon::HTuple &FileName);
LIntExport Herror read_gray_se(Halcon::Hobject *SE, const char *FileName);
LIntExport Herror gen_disc_se(Halcon::Hobject *SE, const Halcon::HTuple &Type, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Smax);
LIntExport Herror gen_disc_se(Halcon::Hobject *SE, const char *Type, Hlong Width, Hlong Height, double Smax);
LIntExport Herror get_metrology_object_model_contour(Halcon::Hobject *Contour, const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &Resolution);
LIntExport Herror get_metrology_object_model_contour(Halcon::Hobject *Contour, Hlong MetrologyHandle, Hlong Index, double Resolution);
LIntExport Herror get_metrology_object_result_contour(Halcon::Hobject *Contour, const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &Instance, const Halcon::HTuple &Resolution);
LIntExport Herror get_metrology_object_result_contour(Halcon::Hobject *Contour, Hlong MetrologyHandle, Hlong Index, Hlong Instance, double Resolution);
LIntExport Herror align_metrology_model(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Angle);
LIntExport Herror align_metrology_model(Hlong MetrologyHandle, double Row, double Column, double Angle);
LIntExport Herror add_metrology_object_generic(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Shape, const Halcon::HTuple &ShapeParam, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Index);
LIntExport Herror add_metrology_object_generic(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Shape, const Halcon::HTuple &ShapeParam, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *Index);
LIntExport Herror get_metrology_model_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_metrology_model_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &GenParamName, char *GenParamValue);
LIntExport Herror get_metrology_model_param(Hlong MetrologyHandle, const char *GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_metrology_model_param(Hlong MetrologyHandle, const char *GenParamName, char *GenParamValue);
LIntExport Herror set_metrology_model_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror deserialize_metrology_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *MetrologyHandle);
LIntExport Herror deserialize_metrology_model(const Halcon::HTuple &SerializedItemHandle, Hlong *MetrologyHandle);
LIntExport Herror deserialize_metrology_model(Hlong SerializedItemHandle, Halcon::HTuple *MetrologyHandle);
LIntExport Herror deserialize_metrology_model(Hlong SerializedItemHandle, Hlong *MetrologyHandle);
LIntExport Herror serialize_metrology_model(const Halcon::HTuple &MetrologyHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_metrology_model(const Halcon::HTuple &MetrologyHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_metrology_model(Hlong MetrologyHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_metrology_model(Hlong MetrologyHandle, Hlong *SerializedItemHandle);
LIntExport Herror transform_metrology_object(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Mode);
LIntExport Herror write_metrology_model(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_metrology_model(Hlong MetrologyHandle, const char *FileName);
LIntExport Herror read_metrology_model(const Halcon::HTuple &FileName, Halcon::HTuple *MetrologyHandle);
LIntExport Herror read_metrology_model(const Halcon::HTuple &FileName, Hlong *MetrologyHandle);
LIntExport Herror read_metrology_model(const char *FileName, Halcon::HTuple *MetrologyHandle);
LIntExport Herror read_metrology_model(const char *FileName, Hlong *MetrologyHandle);
LIntExport Herror copy_metrology_model(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, Halcon::HTuple *CopiedMetrologyHandle);
LIntExport Herror copy_metrology_model(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, Hlong *CopiedMetrologyHandle);
LIntExport Herror copy_metrology_object(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, Halcon::HTuple *CopiedIndices);
LIntExport Herror copy_metrology_object(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, Hlong *CopiedIndices);
LIntExport Herror get_metrology_object_num_instances(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, Halcon::HTuple *NumInstances);
LIntExport Herror get_metrology_object_num_instances(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, double *NumInstances);
LIntExport Herror get_metrology_object_num_instances(Hlong MetrologyHandle, Hlong Index, Halcon::HTuple *NumInstances);
LIntExport Herror get_metrology_object_num_instances(Hlong MetrologyHandle, Hlong Index, double *NumInstances);
LIntExport Herror get_metrology_object_result(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &Instance, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Parameter);
LIntExport Herror get_metrology_object_result(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &Instance, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, double *Parameter);
LIntExport Herror get_metrology_object_measures(Halcon::Hobject *Contours, const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &Transition, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror apply_metrology_model(const Halcon::Hobject &Image, const Halcon::HTuple &MetrologyHandle);
LIntExport Herror apply_metrology_model(const Halcon::Hobject &Image, Hlong MetrologyHandle);
LIntExport Herror get_metrology_object_indices(const Halcon::HTuple &MetrologyHandle, Halcon::HTuple *Indices);
LIntExport Herror get_metrology_object_indices(const Halcon::HTuple &MetrologyHandle, Hlong *Indices);
LIntExport Herror get_metrology_object_indices(Hlong MetrologyHandle, Halcon::HTuple *Indices);
LIntExport Herror get_metrology_object_indices(Hlong MetrologyHandle, Hlong *Indices);
LIntExport Herror reset_metrology_object_fuzzy_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index);
LIntExport Herror reset_metrology_object_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index);
LIntExport Herror get_metrology_object_fuzzy_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_metrology_object_fuzzy_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &GenParamName, double *GenParamValue);
LIntExport Herror get_metrology_object_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_metrology_object_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &GenParamName, char *GenParamValue);
LIntExport Herror set_metrology_object_fuzzy_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror set_metrology_object_param(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror add_metrology_object_rectangle2_measure(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Index);
LIntExport Herror add_metrology_object_rectangle2_measure(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *Index);
LIntExport Herror add_metrology_object_rectangle2_measure(Hlong MetrologyHandle, double Row, double Column, double Phi, double Length1, double Length2, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Halcon::HTuple *Index);
LIntExport Herror add_metrology_object_rectangle2_measure(Hlong MetrologyHandle, double Row, double Column, double Phi, double Length1, double Length2, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Hlong *Index);
LIntExport Herror add_metrology_object_line_measure(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &RowBegin, const Halcon::HTuple &ColumnBegin, const Halcon::HTuple &RowEnd, const Halcon::HTuple &ColumnEnd, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Index);
LIntExport Herror add_metrology_object_line_measure(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &RowBegin, const Halcon::HTuple &ColumnBegin, const Halcon::HTuple &RowEnd, const Halcon::HTuple &ColumnEnd, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *Index);
LIntExport Herror add_metrology_object_line_measure(Hlong MetrologyHandle, double RowBegin, double ColumnBegin, double RowEnd, double ColumnEnd, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Halcon::HTuple *Index);
LIntExport Herror add_metrology_object_line_measure(Hlong MetrologyHandle, double RowBegin, double ColumnBegin, double RowEnd, double ColumnEnd, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Hlong *Index);
LIntExport Herror add_metrology_object_ellipse_measure(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Index);
LIntExport Herror add_metrology_object_ellipse_measure(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *Index);
LIntExport Herror add_metrology_object_ellipse_measure(Hlong MetrologyHandle, double Row, double Column, double Phi, double Radius1, double Radius2, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Halcon::HTuple *Index);
LIntExport Herror add_metrology_object_ellipse_measure(Hlong MetrologyHandle, double Row, double Column, double Phi, double Radius1, double Radius2, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Hlong *Index);
LIntExport Herror add_metrology_object_circle_measure(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Index);
LIntExport Herror add_metrology_object_circle_measure(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius, const Halcon::HTuple &MeasureLength1, const Halcon::HTuple &MeasureLength2, const Halcon::HTuple &MeasureSigma, const Halcon::HTuple &MeasureThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *Index);
LIntExport Herror add_metrology_object_circle_measure(Hlong MetrologyHandle, double Row, double Column, double Radius, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Halcon::HTuple *Index);
LIntExport Herror add_metrology_object_circle_measure(Hlong MetrologyHandle, double Row, double Column, double Radius, double MeasureLength1, double MeasureLength2, double MeasureSigma, double MeasureThreshold, const char *GenParamName, double GenParamValue, Hlong *Index);
LIntExport Herror clear_all_metrology_models(void);
LIntExport Herror clear_metrology_model(const Halcon::HTuple &MetrologyHandle);
LIntExport Herror clear_metrology_model(Hlong MetrologyHandle);
LIntExport Herror clear_metrology_object(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Index);
LIntExport Herror set_metrology_model_image_size(const Halcon::HTuple &MetrologyHandle, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror set_metrology_model_image_size(Hlong MetrologyHandle, Hlong Width, Hlong Height);
LIntExport Herror create_metrology_model(Halcon::HTuple *MetrologyHandle);
LIntExport Herror create_metrology_model(Hlong *MetrologyHandle);
LIntExport Herror serialize_measure(const Halcon::HTuple &MeasureHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_measure(const Halcon::HTuple &MeasureHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_measure(Hlong MeasureHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_measure(Hlong MeasureHandle, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_measure(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *MeasureHandle);
LIntExport Herror deserialize_measure(const Halcon::HTuple &SerializedItemHandle, Hlong *MeasureHandle);
LIntExport Herror deserialize_measure(Hlong SerializedItemHandle, Halcon::HTuple *MeasureHandle);
LIntExport Herror deserialize_measure(Hlong SerializedItemHandle, Hlong *MeasureHandle);
LIntExport Herror write_measure(const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_measure(Hlong MeasureHandle, const char *FileName);
LIntExport Herror read_measure(const Halcon::HTuple &FileName, Halcon::HTuple *MeasureHandle);
LIntExport Herror read_measure(const Halcon::HTuple &FileName, Hlong *MeasureHandle);
LIntExport Herror read_measure(const char *FileName, Halcon::HTuple *MeasureHandle);
LIntExport Herror read_measure(const char *FileName, Hlong *MeasureHandle);
LIntExport Herror measure_thresh(const Halcon::Hobject &Image, const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &Sigma, const Halcon::HTuple &Threshold, const Halcon::HTuple &Select, Halcon::HTuple *RowThresh, Halcon::HTuple *ColumnThresh, Halcon::HTuple *Distance);
LIntExport Herror measure_thresh(const Halcon::Hobject &Image, Hlong MeasureHandle, double Sigma, double Threshold, const char *Select, Halcon::HTuple *RowThresh, Halcon::HTuple *ColumnThresh, Halcon::HTuple *Distance);
LIntExport Herror close_all_measures(void);
LIntExport Herror close_measure(const Halcon::HTuple &MeasureHandle);
LIntExport Herror close_measure(Hlong MeasureHandle);
LIntExport Herror measure_projection(const Halcon::Hobject &Image, const Halcon::HTuple &MeasureHandle, Halcon::HTuple *GrayValues);
LIntExport Herror measure_projection(const Halcon::Hobject &Image, Hlong MeasureHandle, Halcon::HTuple *GrayValues);
LIntExport Herror reset_fuzzy_measure(const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &SetType);
LIntExport Herror reset_fuzzy_measure(Hlong MeasureHandle, const char *SetType);
LIntExport Herror set_fuzzy_measure_norm_pair(const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &PairSize, const Halcon::HTuple &SetType, const Halcon::HTuple &Function);
LIntExport Herror set_fuzzy_measure(const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &SetType, const Halcon::HTuple &Function);
LIntExport Herror fuzzy_measure_pairing(const Halcon::Hobject &Image, const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &Sigma, const Halcon::HTuple &AmpThresh, const Halcon::HTuple &FuzzyThresh, const Halcon::HTuple &Transition, const Halcon::HTuple &Pairing, const Halcon::HTuple &NumPairs, Halcon::HTuple *RowEdgeFirst, Halcon::HTuple *ColumnEdgeFirst, Halcon::HTuple *AmplitudeFirst, Halcon::HTuple *RowEdgeSecond, Halcon::HTuple *ColumnEdgeSecond, Halcon::HTuple *AmplitudeSecond, Halcon::HTuple *RowPairCenter, Halcon::HTuple *ColumnPairCenter, Halcon::HTuple *FuzzyScore, Halcon::HTuple *IntraDistance);
LIntExport Herror fuzzy_measure_pairing(const Halcon::Hobject &Image, Hlong MeasureHandle, double Sigma, double AmpThresh, double FuzzyThresh, const char *Transition, const char *Pairing, Hlong NumPairs, Halcon::HTuple *RowEdgeFirst, Halcon::HTuple *ColumnEdgeFirst, Halcon::HTuple *AmplitudeFirst, Halcon::HTuple *RowEdgeSecond, Halcon::HTuple *ColumnEdgeSecond, Halcon::HTuple *AmplitudeSecond, Halcon::HTuple *RowPairCenter, Halcon::HTuple *ColumnPairCenter, Halcon::HTuple *FuzzyScore, Halcon::HTuple *IntraDistance);
LIntExport Herror fuzzy_measure_pairs(const Halcon::Hobject &Image, const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &Sigma, const Halcon::HTuple &AmpThresh, const Halcon::HTuple &FuzzyThresh, const Halcon::HTuple &Transition, Halcon::HTuple *RowEdgeFirst, Halcon::HTuple *ColumnEdgeFirst, Halcon::HTuple *AmplitudeFirst, Halcon::HTuple *RowEdgeSecond, Halcon::HTuple *ColumnEdgeSecond, Halcon::HTuple *AmplitudeSecond, Halcon::HTuple *RowEdgeCenter, Halcon::HTuple *ColumnEdgeCenter, Halcon::HTuple *FuzzyScore, Halcon::HTuple *IntraDistance, Halcon::HTuple *InterDistance);
LIntExport Herror fuzzy_measure_pairs(const Halcon::Hobject &Image, Hlong MeasureHandle, double Sigma, double AmpThresh, double FuzzyThresh, const char *Transition, Halcon::HTuple *RowEdgeFirst, Halcon::HTuple *ColumnEdgeFirst, Halcon::HTuple *AmplitudeFirst, Halcon::HTuple *RowEdgeSecond, Halcon::HTuple *ColumnEdgeSecond, Halcon::HTuple *AmplitudeSecond, Halcon::HTuple *RowEdgeCenter, Halcon::HTuple *ColumnEdgeCenter, Halcon::HTuple *FuzzyScore, Halcon::HTuple *IntraDistance, Halcon::HTuple *InterDistance);
LIntExport Herror fuzzy_measure_pos(const Halcon::Hobject &Image, const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &Sigma, const Halcon::HTuple &AmpThresh, const Halcon::HTuple &FuzzyThresh, const Halcon::HTuple &Transition, Halcon::HTuple *RowEdge, Halcon::HTuple *ColumnEdge, Halcon::HTuple *Amplitude, Halcon::HTuple *FuzzyScore, Halcon::HTuple *Distance);
LIntExport Herror fuzzy_measure_pos(const Halcon::Hobject &Image, Hlong MeasureHandle, double Sigma, double AmpThresh, double FuzzyThresh, const char *Transition, Halcon::HTuple *RowEdge, Halcon::HTuple *ColumnEdge, Halcon::HTuple *Amplitude, Halcon::HTuple *FuzzyScore, Halcon::HTuple *Distance);
LIntExport Herror measure_pairs(const Halcon::Hobject &Image, const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &Sigma, const Halcon::HTuple &Threshold, const Halcon::HTuple &Transition, const Halcon::HTuple &Select, Halcon::HTuple *RowEdgeFirst, Halcon::HTuple *ColumnEdgeFirst, Halcon::HTuple *AmplitudeFirst, Halcon::HTuple *RowEdgeSecond, Halcon::HTuple *ColumnEdgeSecond, Halcon::HTuple *AmplitudeSecond, Halcon::HTuple *IntraDistance, Halcon::HTuple *InterDistance);
LIntExport Herror measure_pairs(const Halcon::Hobject &Image, Hlong MeasureHandle, double Sigma, double Threshold, const char *Transition, const char *Select, Halcon::HTuple *RowEdgeFirst, Halcon::HTuple *ColumnEdgeFirst, Halcon::HTuple *AmplitudeFirst, Halcon::HTuple *RowEdgeSecond, Halcon::HTuple *ColumnEdgeSecond, Halcon::HTuple *AmplitudeSecond, Halcon::HTuple *IntraDistance, Halcon::HTuple *InterDistance);
LIntExport Herror measure_pos(const Halcon::Hobject &Image, const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &Sigma, const Halcon::HTuple &Threshold, const Halcon::HTuple &Transition, const Halcon::HTuple &Select, Halcon::HTuple *RowEdge, Halcon::HTuple *ColumnEdge, Halcon::HTuple *Amplitude, Halcon::HTuple *Distance);
LIntExport Herror measure_pos(const Halcon::Hobject &Image, Hlong MeasureHandle, double Sigma, double Threshold, const char *Transition, const char *Select, Halcon::HTuple *RowEdge, Halcon::HTuple *ColumnEdge, Halcon::HTuple *Amplitude, Halcon::HTuple *Distance);
LIntExport Herror translate_measure(const Halcon::HTuple &MeasureHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror translate_measure(Hlong MeasureHandle, double Row, double Column);
LIntExport Herror gen_measure_arc(const Halcon::HTuple &CenterRow, const Halcon::HTuple &CenterCol, const Halcon::HTuple &Radius, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AnnulusRadius, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Interpolation, Halcon::HTuple *MeasureHandle);
LIntExport Herror gen_measure_arc(const Halcon::HTuple &CenterRow, const Halcon::HTuple &CenterCol, const Halcon::HTuple &Radius, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AnnulusRadius, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Interpolation, Hlong *MeasureHandle);
LIntExport Herror gen_measure_arc(double CenterRow, double CenterCol, double Radius, double AngleStart, double AngleExtent, double AnnulusRadius, Hlong Width, Hlong Height, const char *Interpolation, Halcon::HTuple *MeasureHandle);
LIntExport Herror gen_measure_arc(double CenterRow, double CenterCol, double Radius, double AngleStart, double AngleExtent, double AnnulusRadius, Hlong Width, Hlong Height, const char *Interpolation, Hlong *MeasureHandle);
LIntExport Herror gen_measure_rectangle2(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Interpolation, Halcon::HTuple *MeasureHandle);
LIntExport Herror gen_measure_rectangle2(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Interpolation, Hlong *MeasureHandle);
LIntExport Herror gen_measure_rectangle2(double Row, double Column, double Phi, double Length1, double Length2, Hlong Width, Hlong Height, const char *Interpolation, Halcon::HTuple *MeasureHandle);
LIntExport Herror gen_measure_rectangle2(double Row, double Column, double Phi, double Length1, double Length2, Hlong Width, Hlong Height, const char *Interpolation, Hlong *MeasureHandle);
LIntExport Herror deserialize_matrix(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *MatrixID);
LIntExport Herror deserialize_matrix(const Halcon::HTuple &SerializedItemHandle, Hlong *MatrixID);
LIntExport Herror deserialize_matrix(Hlong SerializedItemHandle, Halcon::HTuple *MatrixID);
LIntExport Herror deserialize_matrix(Hlong SerializedItemHandle, Hlong *MatrixID);
LIntExport Herror serialize_matrix(const Halcon::HTuple &MatrixID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_matrix(const Halcon::HTuple &MatrixID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_matrix(Hlong MatrixID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_matrix(Hlong MatrixID, Hlong *SerializedItemHandle);
LIntExport Herror read_matrix(const Halcon::HTuple &FileName, Halcon::HTuple *MatrixID);
LIntExport Herror read_matrix(const Halcon::HTuple &FileName, Hlong *MatrixID);
LIntExport Herror read_matrix(const char *FileName, Halcon::HTuple *MatrixID);
LIntExport Herror read_matrix(const char *FileName, Hlong *MatrixID);
LIntExport Herror write_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &FileFormat, const Halcon::HTuple &FileName);
LIntExport Herror write_matrix(Hlong MatrixID, const char *FileFormat, const char *FileName);
LIntExport Herror orthogonal_decompose_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &DecompositionType, const Halcon::HTuple &OutputMatricesType, const Halcon::HTuple &ComputeOrthogonal, Halcon::HTuple *MatrixOrthogonalID, Halcon::HTuple *MatrixTriangularID);
LIntExport Herror orthogonal_decompose_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &DecompositionType, const Halcon::HTuple &OutputMatricesType, const Halcon::HTuple &ComputeOrthogonal, Hlong *MatrixOrthogonalID, Hlong *MatrixTriangularID);
LIntExport Herror orthogonal_decompose_matrix(Hlong MatrixID, const char *DecompositionType, const char *OutputMatricesType, const char *ComputeOrthogonal, Halcon::HTuple *MatrixOrthogonalID, Halcon::HTuple *MatrixTriangularID);
LIntExport Herror orthogonal_decompose_matrix(Hlong MatrixID, const char *DecompositionType, const char *OutputMatricesType, const char *ComputeOrthogonal, Hlong *MatrixOrthogonalID, Hlong *MatrixTriangularID);
LIntExport Herror decompose_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, Halcon::HTuple *Matrix1ID, Halcon::HTuple *Matrix2ID);
LIntExport Herror decompose_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, Hlong *Matrix1ID, Hlong *Matrix2ID);
LIntExport Herror decompose_matrix(Hlong MatrixID, const char *MatrixType, Halcon::HTuple *Matrix1ID, Halcon::HTuple *Matrix2ID);
LIntExport Herror decompose_matrix(Hlong MatrixID, const char *MatrixType, Hlong *Matrix1ID, Hlong *Matrix2ID);
LIntExport Herror svd_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &SVDType, const Halcon::HTuple &ComputeSingularVectors, Halcon::HTuple *MatrixUID, Halcon::HTuple *MatrixSID, Halcon::HTuple *MatrixVID);
LIntExport Herror svd_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &SVDType, const Halcon::HTuple &ComputeSingularVectors, Hlong *MatrixUID, Hlong *MatrixSID, Hlong *MatrixVID);
LIntExport Herror svd_matrix(Hlong MatrixID, const char *SVDType, const char *ComputeSingularVectors, Halcon::HTuple *MatrixUID, Halcon::HTuple *MatrixSID, Halcon::HTuple *MatrixVID);
LIntExport Herror svd_matrix(Hlong MatrixID, const char *SVDType, const char *ComputeSingularVectors, Hlong *MatrixUID, Hlong *MatrixSID, Hlong *MatrixVID);
LIntExport Herror generalized_eigenvalues_general_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, const Halcon::HTuple &ComputeEigenvectors, Halcon::HTuple *EigenvaluesRealID, Halcon::HTuple *EigenvaluesImagID, Halcon::HTuple *EigenvectorsRealID, Halcon::HTuple *EigenvectorsImagID);
LIntExport Herror generalized_eigenvalues_general_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, const Halcon::HTuple &ComputeEigenvectors, Hlong *EigenvaluesRealID, Hlong *EigenvaluesImagID, Hlong *EigenvectorsRealID, Hlong *EigenvectorsImagID);
LIntExport Herror generalized_eigenvalues_general_matrix(Hlong MatrixAID, Hlong MatrixBID, const char *ComputeEigenvectors, Halcon::HTuple *EigenvaluesRealID, Halcon::HTuple *EigenvaluesImagID, Halcon::HTuple *EigenvectorsRealID, Halcon::HTuple *EigenvectorsImagID);
LIntExport Herror generalized_eigenvalues_general_matrix(Hlong MatrixAID, Hlong MatrixBID, const char *ComputeEigenvectors, Hlong *EigenvaluesRealID, Hlong *EigenvaluesImagID, Hlong *EigenvectorsRealID, Hlong *EigenvectorsImagID);
LIntExport Herror generalized_eigenvalues_symmetric_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, const Halcon::HTuple &ComputeEigenvectors, Halcon::HTuple *EigenvaluesID, Halcon::HTuple *EigenvectorsID);
LIntExport Herror generalized_eigenvalues_symmetric_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, const Halcon::HTuple &ComputeEigenvectors, Hlong *EigenvaluesID, Hlong *EigenvectorsID);
LIntExport Herror generalized_eigenvalues_symmetric_matrix(Hlong MatrixAID, Hlong MatrixBID, const char *ComputeEigenvectors, Halcon::HTuple *EigenvaluesID, Halcon::HTuple *EigenvectorsID);
LIntExport Herror generalized_eigenvalues_symmetric_matrix(Hlong MatrixAID, Hlong MatrixBID, const char *ComputeEigenvectors, Hlong *EigenvaluesID, Hlong *EigenvectorsID);
LIntExport Herror eigenvalues_general_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &ComputeEigenvectors, Halcon::HTuple *EigenvaluesRealID, Halcon::HTuple *EigenvaluesImagID, Halcon::HTuple *EigenvectorsRealID, Halcon::HTuple *EigenvectorsImagID);
LIntExport Herror eigenvalues_general_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &ComputeEigenvectors, Hlong *EigenvaluesRealID, Hlong *EigenvaluesImagID, Hlong *EigenvectorsRealID, Hlong *EigenvectorsImagID);
LIntExport Herror eigenvalues_general_matrix(Hlong MatrixID, const char *ComputeEigenvectors, Halcon::HTuple *EigenvaluesRealID, Halcon::HTuple *EigenvaluesImagID, Halcon::HTuple *EigenvectorsRealID, Halcon::HTuple *EigenvectorsImagID);
LIntExport Herror eigenvalues_general_matrix(Hlong MatrixID, const char *ComputeEigenvectors, Hlong *EigenvaluesRealID, Hlong *EigenvaluesImagID, Hlong *EigenvectorsRealID, Hlong *EigenvectorsImagID);
LIntExport Herror eigenvalues_symmetric_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &ComputeEigenvectors, Halcon::HTuple *EigenvaluesID, Halcon::HTuple *EigenvectorsID);
LIntExport Herror eigenvalues_symmetric_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &ComputeEigenvectors, Hlong *EigenvaluesID, Hlong *EigenvectorsID);
LIntExport Herror eigenvalues_symmetric_matrix(Hlong MatrixID, const char *ComputeEigenvectors, Halcon::HTuple *EigenvaluesID, Halcon::HTuple *EigenvectorsID);
LIntExport Herror eigenvalues_symmetric_matrix(Hlong MatrixID, const char *ComputeEigenvectors, Hlong *EigenvaluesID, Hlong *EigenvectorsID);
LIntExport Herror solve_matrix(const Halcon::HTuple &MatrixLHSID, const Halcon::HTuple &MatrixLHSType, const Halcon::HTuple &Epsilon, const Halcon::HTuple &MatrixRHSID, Halcon::HTuple *MatrixResultID);
LIntExport Herror solve_matrix(const Halcon::HTuple &MatrixLHSID, const Halcon::HTuple &MatrixLHSType, const Halcon::HTuple &Epsilon, const Halcon::HTuple &MatrixRHSID, Hlong *MatrixResultID);
LIntExport Herror solve_matrix(Hlong MatrixLHSID, const char *MatrixLHSType, double Epsilon, Hlong MatrixRHSID, Halcon::HTuple *MatrixResultID);
LIntExport Herror solve_matrix(Hlong MatrixLHSID, const char *MatrixLHSType, double Epsilon, Hlong MatrixRHSID, Hlong *MatrixResultID);
LIntExport Herror determinant_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, Halcon::HTuple *Value);
LIntExport Herror determinant_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, double *Value);
LIntExport Herror determinant_matrix(Hlong MatrixID, const char *MatrixType, Halcon::HTuple *Value);
LIntExport Herror determinant_matrix(Hlong MatrixID, const char *MatrixType, double *Value);
LIntExport Herror invert_matrix_mod(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, const Halcon::HTuple &Epsilon);
LIntExport Herror invert_matrix_mod(Hlong MatrixID, const char *MatrixType, double Epsilon);
LIntExport Herror invert_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, const Halcon::HTuple &Epsilon, Halcon::HTuple *MatrixInvID);
LIntExport Herror invert_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, const Halcon::HTuple &Epsilon, Hlong *MatrixInvID);
LIntExport Herror invert_matrix(Hlong MatrixID, const char *MatrixType, double Epsilon, Halcon::HTuple *MatrixInvID);
LIntExport Herror invert_matrix(Hlong MatrixID, const char *MatrixType, double Epsilon, Hlong *MatrixInvID);
LIntExport Herror transpose_matrix_mod(const Halcon::HTuple &MatrixID);
LIntExport Herror transpose_matrix_mod(Hlong MatrixID);
LIntExport Herror transpose_matrix(const Halcon::HTuple &MatrixID, Halcon::HTuple *MatrixTransposedID);
LIntExport Herror transpose_matrix(const Halcon::HTuple &MatrixID, Hlong *MatrixTransposedID);
LIntExport Herror transpose_matrix(Hlong MatrixID, Halcon::HTuple *MatrixTransposedID);
LIntExport Herror transpose_matrix(Hlong MatrixID, Hlong *MatrixTransposedID);
LIntExport Herror max_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MaxType, Halcon::HTuple *MatrixMaxID);
LIntExport Herror max_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MaxType, Hlong *MatrixMaxID);
LIntExport Herror max_matrix(Hlong MatrixID, const char *MaxType, Halcon::HTuple *MatrixMaxID);
LIntExport Herror max_matrix(Hlong MatrixID, const char *MaxType, Hlong *MatrixMaxID);
LIntExport Herror min_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MinType, Halcon::HTuple *MatrixMinID);
LIntExport Herror min_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MinType, Hlong *MatrixMinID);
LIntExport Herror min_matrix(Hlong MatrixID, const char *MinType, Halcon::HTuple *MatrixMinID);
LIntExport Herror min_matrix(Hlong MatrixID, const char *MinType, Hlong *MatrixMinID);
LIntExport Herror pow_matrix_mod(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, const Halcon::HTuple &Power);
LIntExport Herror pow_matrix_mod(Hlong MatrixID, const char *MatrixType, double Power);
LIntExport Herror pow_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, const Halcon::HTuple &Power, Halcon::HTuple *MatrixPowID);
LIntExport Herror pow_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixType, const Halcon::HTuple &Power, Hlong *MatrixPowID);
LIntExport Herror pow_matrix(Hlong MatrixID, const char *MatrixType, double Power, Halcon::HTuple *MatrixPowID);
LIntExport Herror pow_matrix(Hlong MatrixID, const char *MatrixType, double Power, Hlong *MatrixPowID);
LIntExport Herror pow_element_matrix_mod(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixExpID);
LIntExport Herror pow_element_matrix_mod(Hlong MatrixID, Hlong MatrixExpID);
LIntExport Herror pow_element_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixExpID, Halcon::HTuple *MatrixPowID);
LIntExport Herror pow_element_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixExpID, Hlong *MatrixPowID);
LIntExport Herror pow_element_matrix(Hlong MatrixID, Hlong MatrixExpID, Halcon::HTuple *MatrixPowID);
LIntExport Herror pow_element_matrix(Hlong MatrixID, Hlong MatrixExpID, Hlong *MatrixPowID);
LIntExport Herror pow_scalar_element_matrix_mod(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Power);
LIntExport Herror pow_scalar_element_matrix_mod(Hlong MatrixID, double Power);
LIntExport Herror pow_scalar_element_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Power, Halcon::HTuple *MatrixPowID);
LIntExport Herror pow_scalar_element_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Power, Hlong *MatrixPowID);
LIntExport Herror pow_scalar_element_matrix(Hlong MatrixID, double Power, Halcon::HTuple *MatrixPowID);
LIntExport Herror pow_scalar_element_matrix(Hlong MatrixID, double Power, Hlong *MatrixPowID);
LIntExport Herror sqrt_matrix_mod(const Halcon::HTuple &MatrixID);
LIntExport Herror sqrt_matrix_mod(Hlong MatrixID);
LIntExport Herror sqrt_matrix(const Halcon::HTuple &MatrixID, Halcon::HTuple *MatrixSqrtID);
LIntExport Herror sqrt_matrix(const Halcon::HTuple &MatrixID, Hlong *MatrixSqrtID);
LIntExport Herror sqrt_matrix(Hlong MatrixID, Halcon::HTuple *MatrixSqrtID);
LIntExport Herror sqrt_matrix(Hlong MatrixID, Hlong *MatrixSqrtID);
LIntExport Herror abs_matrix_mod(const Halcon::HTuple &MatrixID);
LIntExport Herror abs_matrix_mod(Hlong MatrixID);
LIntExport Herror abs_matrix(const Halcon::HTuple &MatrixID, Halcon::HTuple *MatrixAbsID);
LIntExport Herror abs_matrix(const Halcon::HTuple &MatrixID, Hlong *MatrixAbsID);
LIntExport Herror abs_matrix(Hlong MatrixID, Halcon::HTuple *MatrixAbsID);
LIntExport Herror abs_matrix(Hlong MatrixID, Hlong *MatrixAbsID);
LIntExport Herror norm_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &NormType, Halcon::HTuple *Value);
LIntExport Herror norm_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &NormType, double *Value);
LIntExport Herror norm_matrix(Hlong MatrixID, const char *NormType, Halcon::HTuple *Value);
LIntExport Herror norm_matrix(Hlong MatrixID, const char *NormType, double *Value);
LIntExport Herror mean_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MeanType, Halcon::HTuple *MatrixMeanID);
LIntExport Herror mean_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MeanType, Hlong *MatrixMeanID);
LIntExport Herror mean_matrix(Hlong MatrixID, const char *MeanType, Halcon::HTuple *MatrixMeanID);
LIntExport Herror mean_matrix(Hlong MatrixID, const char *MeanType, Hlong *MatrixMeanID);
LIntExport Herror sum_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &SumType, Halcon::HTuple *MatrixSumID);
LIntExport Herror sum_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &SumType, Hlong *MatrixSumID);
LIntExport Herror sum_matrix(Hlong MatrixID, const char *SumType, Halcon::HTuple *MatrixSumID);
LIntExport Herror sum_matrix(Hlong MatrixID, const char *SumType, Hlong *MatrixSumID);
LIntExport Herror div_element_matrix_mod(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID);
LIntExport Herror div_element_matrix_mod(Hlong MatrixAID, Hlong MatrixBID);
LIntExport Herror div_element_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, Halcon::HTuple *MatrixDivID);
LIntExport Herror div_element_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, Hlong *MatrixDivID);
LIntExport Herror div_element_matrix(Hlong MatrixAID, Hlong MatrixBID, Halcon::HTuple *MatrixDivID);
LIntExport Herror div_element_matrix(Hlong MatrixAID, Hlong MatrixBID, Hlong *MatrixDivID);
LIntExport Herror mult_element_matrix_mod(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID);
LIntExport Herror mult_element_matrix_mod(Hlong MatrixAID, Hlong MatrixBID);
LIntExport Herror mult_element_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, Halcon::HTuple *MatrixMultID);
LIntExport Herror mult_element_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, Hlong *MatrixMultID);
LIntExport Herror mult_element_matrix(Hlong MatrixAID, Hlong MatrixBID, Halcon::HTuple *MatrixMultID);
LIntExport Herror mult_element_matrix(Hlong MatrixAID, Hlong MatrixBID, Hlong *MatrixMultID);
LIntExport Herror scale_matrix_mod(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Factor);
LIntExport Herror scale_matrix_mod(Hlong MatrixID, double Factor);
LIntExport Herror scale_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Factor, Halcon::HTuple *MatrixScaledID);
LIntExport Herror scale_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Factor, Hlong *MatrixScaledID);
LIntExport Herror scale_matrix(Hlong MatrixID, double Factor, Halcon::HTuple *MatrixScaledID);
LIntExport Herror scale_matrix(Hlong MatrixID, double Factor, Hlong *MatrixScaledID);
LIntExport Herror sub_matrix_mod(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID);
LIntExport Herror sub_matrix_mod(Hlong MatrixAID, Hlong MatrixBID);
LIntExport Herror sub_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, Halcon::HTuple *MatrixSubID);
LIntExport Herror sub_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, Hlong *MatrixSubID);
LIntExport Herror sub_matrix(Hlong MatrixAID, Hlong MatrixBID, Halcon::HTuple *MatrixSubID);
LIntExport Herror sub_matrix(Hlong MatrixAID, Hlong MatrixBID, Hlong *MatrixSubID);
LIntExport Herror add_matrix_mod(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID);
LIntExport Herror add_matrix_mod(Hlong MatrixAID, Hlong MatrixBID);
LIntExport Herror add_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, Halcon::HTuple *MatrixSumID);
LIntExport Herror add_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, Hlong *MatrixSumID);
LIntExport Herror add_matrix(Hlong MatrixAID, Hlong MatrixBID, Halcon::HTuple *MatrixSumID);
LIntExport Herror add_matrix(Hlong MatrixAID, Hlong MatrixBID, Hlong *MatrixSumID);
LIntExport Herror mult_matrix_mod(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, const Halcon::HTuple &MultType);
LIntExport Herror mult_matrix_mod(Hlong MatrixAID, Hlong MatrixBID, const char *MultType);
LIntExport Herror mult_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, const Halcon::HTuple &MultType, Halcon::HTuple *MatrixMultID);
LIntExport Herror mult_matrix(const Halcon::HTuple &MatrixAID, const Halcon::HTuple &MatrixBID, const Halcon::HTuple &MultType, Hlong *MatrixMultID);
LIntExport Herror mult_matrix(Hlong MatrixAID, Hlong MatrixBID, const char *MultType, Halcon::HTuple *MatrixMultID);
LIntExport Herror mult_matrix(Hlong MatrixAID, Hlong MatrixBID, const char *MultType, Hlong *MatrixMultID);
LIntExport Herror get_size_matrix(const Halcon::HTuple &MatrixID, Halcon::HTuple *Rows, Halcon::HTuple *Columns);
LIntExport Herror get_size_matrix(const Halcon::HTuple &MatrixID, Hlong *Rows, Hlong *Columns);
LIntExport Herror get_size_matrix(Hlong MatrixID, Halcon::HTuple *Rows, Halcon::HTuple *Columns);
LIntExport Herror get_size_matrix(Hlong MatrixID, Hlong *Rows, Hlong *Columns);
LIntExport Herror repeat_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, Halcon::HTuple *MatrixRepeatedID);
LIntExport Herror repeat_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, Hlong *MatrixRepeatedID);
LIntExport Herror repeat_matrix(Hlong MatrixID, Hlong Rows, Hlong Columns, Halcon::HTuple *MatrixRepeatedID);
LIntExport Herror repeat_matrix(Hlong MatrixID, Hlong Rows, Hlong Columns, Hlong *MatrixRepeatedID);
LIntExport Herror copy_matrix(const Halcon::HTuple &MatrixID, Halcon::HTuple *MatrixCopyID);
LIntExport Herror copy_matrix(const Halcon::HTuple &MatrixID, Hlong *MatrixCopyID);
LIntExport Herror copy_matrix(Hlong MatrixID, Halcon::HTuple *MatrixCopyID);
LIntExport Herror copy_matrix(Hlong MatrixID, Hlong *MatrixCopyID);
LIntExport Herror set_diagonal_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &VectorID, const Halcon::HTuple &Diagonal);
LIntExport Herror set_diagonal_matrix(Hlong MatrixID, Hlong VectorID, Hlong Diagonal);
LIntExport Herror get_diagonal_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Diagonal, Halcon::HTuple *VectorID);
LIntExport Herror get_diagonal_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Diagonal, Hlong *VectorID);
LIntExport Herror get_diagonal_matrix(Hlong MatrixID, Hlong Diagonal, Halcon::HTuple *VectorID);
LIntExport Herror get_diagonal_matrix(Hlong MatrixID, Hlong Diagonal, Hlong *VectorID);
LIntExport Herror set_sub_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &MatrixSubID, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror set_sub_matrix(Hlong MatrixID, Hlong MatrixSubID, Hlong Row, Hlong Column);
LIntExport Herror get_sub_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &RowsSub, const Halcon::HTuple &ColumnsSub, Halcon::HTuple *MatrixSubID);
LIntExport Herror get_sub_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &RowsSub, const Halcon::HTuple &ColumnsSub, Hlong *MatrixSubID);
LIntExport Herror get_sub_matrix(Hlong MatrixID, Hlong Row, Hlong Column, Hlong RowsSub, Hlong ColumnsSub, Halcon::HTuple *MatrixSubID);
LIntExport Herror get_sub_matrix(Hlong MatrixID, Hlong Row, Hlong Column, Hlong RowsSub, Hlong ColumnsSub, Hlong *MatrixSubID);
LIntExport Herror set_full_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Values);
LIntExport Herror set_full_matrix(Hlong MatrixID, double Values);
LIntExport Herror get_full_matrix(const Halcon::HTuple &MatrixID, Halcon::HTuple *Values);
LIntExport Herror get_full_matrix(const Halcon::HTuple &MatrixID, double *Values);
LIntExport Herror get_full_matrix(Hlong MatrixID, Halcon::HTuple *Values);
LIntExport Herror get_full_matrix(Hlong MatrixID, double *Values);
LIntExport Herror set_value_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Value);
LIntExport Herror set_value_matrix(Hlong MatrixID, Hlong Row, Hlong Column, double Value);
LIntExport Herror get_value_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *Value);
LIntExport Herror get_value_matrix(const Halcon::HTuple &MatrixID, const Halcon::HTuple &Row, const Halcon::HTuple &Column, double *Value);
LIntExport Herror get_value_matrix(Hlong MatrixID, Hlong Row, Hlong Column, Halcon::HTuple *Value);
LIntExport Herror get_value_matrix(Hlong MatrixID, Hlong Row, Hlong Column, double *Value);
LIntExport Herror clear_all_matrices(void);
LIntExport Herror clear_matrix(const Halcon::HTuple &MatrixID);
LIntExport Herror clear_matrix(Hlong MatrixID);
LIntExport Herror create_matrix(const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, const Halcon::HTuple &Value, Halcon::HTuple *MatrixID);
LIntExport Herror create_matrix(const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, const Halcon::HTuple &Value, Hlong *MatrixID);
LIntExport Herror create_matrix(Hlong Rows, Hlong Columns, double Value, Halcon::HTuple *MatrixID);
LIntExport Herror create_matrix(Hlong Rows, Hlong Columns, double Value, Hlong *MatrixID);
LIntExport Herror clear_all_sample_identifiers(void);
LIntExport Herror clear_sample_identifier(const Halcon::HTuple &SampleIdentifier);
LIntExport Herror clear_sample_identifier(Hlong SampleIdentifier);
LIntExport Herror deserialize_sample_identifier(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *SampleIdentifier);
LIntExport Herror deserialize_sample_identifier(const Halcon::HTuple &SerializedItemHandle, Hlong *SampleIdentifier);
LIntExport Herror deserialize_sample_identifier(Hlong SerializedItemHandle, Halcon::HTuple *SampleIdentifier);
LIntExport Herror deserialize_sample_identifier(Hlong SerializedItemHandle, Hlong *SampleIdentifier);
LIntExport Herror read_sample_identifier(const Halcon::HTuple &FileName, Halcon::HTuple *SampleIdentifier);
LIntExport Herror read_sample_identifier(const Halcon::HTuple &FileName, Hlong *SampleIdentifier);
LIntExport Herror read_sample_identifier(const char *FileName, Halcon::HTuple *SampleIdentifier);
LIntExport Herror read_sample_identifier(const char *FileName, Hlong *SampleIdentifier);
LIntExport Herror serialize_sample_identifier(const Halcon::HTuple &SampleIdentifier, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_sample_identifier(const Halcon::HTuple &SampleIdentifier, Hlong *SerializedItemHandle);
LIntExport Herror serialize_sample_identifier(Hlong SampleIdentifier, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_sample_identifier(Hlong SampleIdentifier, Hlong *SerializedItemHandle);
LIntExport Herror write_sample_identifier(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &FileName);
LIntExport Herror write_sample_identifier(Hlong SampleIdentifier, const char *FileName);
LIntExport Herror apply_sample_identifier(const Halcon::Hobject &Image, const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &NumResults, const Halcon::HTuple &RatingThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *ObjectIdx, Halcon::HTuple *Rating);
LIntExport Herror apply_sample_identifier(const Halcon::Hobject &Image, const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &NumResults, const Halcon::HTuple &RatingThreshold, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *ObjectIdx, double *Rating);
LIntExport Herror get_sample_identifier_param(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_sample_identifier_param(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ParamName, double *ParamValue);
LIntExport Herror get_sample_identifier_param(Hlong SampleIdentifier, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_sample_identifier_param(Hlong SampleIdentifier, const char *ParamName, double *ParamValue);
LIntExport Herror set_sample_identifier_param(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror set_sample_identifier_param(Hlong SampleIdentifier, const char *ParamName, double ParamValue);
LIntExport Herror get_sample_identifier_object_info(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ObjectIdx, const Halcon::HTuple &InfoName, Halcon::HTuple *InfoValue);
LIntExport Herror get_sample_identifier_object_info(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ObjectIdx, const Halcon::HTuple &InfoName, Hlong *InfoValue);
LIntExport Herror get_sample_identifier_object_info(Hlong SampleIdentifier, Hlong ObjectIdx, const char *InfoName, Halcon::HTuple *InfoValue);
LIntExport Herror get_sample_identifier_object_info(Hlong SampleIdentifier, Hlong ObjectIdx, const char *InfoName, Hlong *InfoValue);
LIntExport Herror set_sample_identifier_object_info(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ObjectIdx, const Halcon::HTuple &InfoName, const Halcon::HTuple &InfoValue);
LIntExport Herror set_sample_identifier_object_info(Hlong SampleIdentifier, Hlong ObjectIdx, const char *InfoName, const char *InfoValue);
LIntExport Herror remove_sample_identifier_training_data(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ObjectIdx, const Halcon::HTuple &ObjectSampleIdx);
LIntExport Herror remove_sample_identifier_training_data(Hlong SampleIdentifier, Hlong ObjectIdx, Hlong ObjectSampleIdx);
LIntExport Herror remove_sample_identifier_preparation_data(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ObjectIdx, const Halcon::HTuple &ObjectSampleIdx);
LIntExport Herror remove_sample_identifier_preparation_data(Hlong SampleIdentifier, Hlong ObjectIdx, Hlong ObjectSampleIdx);
LIntExport Herror train_sample_identifier(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror add_sample_identifier_training_data(const Halcon::Hobject &SampleImage, const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ObjectIdx, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *ObjectSampleIdx);
LIntExport Herror add_sample_identifier_training_data(const Halcon::Hobject &SampleImage, const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ObjectIdx, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *ObjectSampleIdx);
LIntExport Herror prepare_sample_identifier(const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &RemovePreparationData, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror add_sample_identifier_preparation_data(const Halcon::Hobject &SampleImage, const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ObjectIdx, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *ObjectSampleIdx);
LIntExport Herror add_sample_identifier_preparation_data(const Halcon::Hobject &SampleImage, const Halcon::HTuple &SampleIdentifier, const Halcon::HTuple &ObjectIdx, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *ObjectSampleIdx);
LIntExport Herror create_sample_identifier(const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *SampleIdentifier);
LIntExport Herror create_sample_identifier(const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Hlong *SampleIdentifier);
LIntExport Herror deserialize_shape_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_shape_model(const Halcon::HTuple &SerializedItemHandle, Hlong *ModelID);
LIntExport Herror deserialize_shape_model(Hlong SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_shape_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror read_shape_model(const Halcon::HTuple &FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_shape_model(const Halcon::HTuple &FileName, Hlong *ModelID);
LIntExport Herror read_shape_model(const char *FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_shape_model(const char *FileName, Hlong *ModelID);
LIntExport Herror serialize_shape_model(const Halcon::HTuple &ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_shape_model(const Halcon::HTuple &ModelID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_shape_model(Hlong ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_shape_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror write_shape_model(const Halcon::HTuple &ModelID, const Halcon::HTuple &FileName);
LIntExport Herror write_shape_model(Hlong ModelID, const char *FileName);
LIntExport Herror clear_all_shape_models(void);
LIntExport Herror clear_shape_model(const Halcon::HTuple &ModelID);
LIntExport Herror clear_shape_model(Hlong ModelID);
LIntExport Herror get_shape_model_contours(Halcon::Hobject *ModelContours, const Halcon::HTuple &ModelID, const Halcon::HTuple &Level);
LIntExport Herror get_shape_model_contours(Halcon::Hobject *ModelContours, Hlong ModelID, Hlong Level);
LIntExport Herror determine_shape_model_params(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ScaleMin, const Halcon::HTuple &ScaleMax, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, const Halcon::HTuple &Parameters, Halcon::HTuple *ParameterName, Halcon::HTuple *ParameterValue);
LIntExport Herror determine_shape_model_params(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, double ScaleMin, double ScaleMax, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, const char *Parameters, Halcon::HTuple *ParameterName, Halcon::HTuple *ParameterValue);
LIntExport Herror get_shape_model_params(const Halcon::HTuple &ModelID, Halcon::HTuple *NumLevels, Halcon::HTuple *AngleStart, Halcon::HTuple *AngleExtent, Halcon::HTuple *AngleStep, Halcon::HTuple *ScaleMin, Halcon::HTuple *ScaleMax, Halcon::HTuple *ScaleStep, Halcon::HTuple *Metric, Halcon::HTuple *MinContrast);
LIntExport Herror get_shape_model_params(const Halcon::HTuple &ModelID, Hlong *NumLevels, double *AngleStart, double *AngleExtent, double *AngleStep, double *ScaleMin, double *ScaleMax, double *ScaleStep, char *Metric, Hlong *MinContrast);
LIntExport Herror get_shape_model_params(Hlong ModelID, Halcon::HTuple *NumLevels, Halcon::HTuple *AngleStart, Halcon::HTuple *AngleExtent, Halcon::HTuple *AngleStep, Halcon::HTuple *ScaleMin, Halcon::HTuple *ScaleMax, Halcon::HTuple *ScaleStep, Halcon::HTuple *Metric, Halcon::HTuple *MinContrast);
LIntExport Herror get_shape_model_params(Hlong ModelID, Hlong *NumLevels, double *AngleStart, double *AngleExtent, double *AngleStep, double *ScaleMin, double *ScaleMax, double *ScaleStep, char *Metric, Hlong *MinContrast);
LIntExport Herror get_shape_model_origin(const Halcon::HTuple &ModelID, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_shape_model_origin(const Halcon::HTuple &ModelID, double *Row, double *Column);
LIntExport Herror get_shape_model_origin(Hlong ModelID, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_shape_model_origin(Hlong ModelID, double *Row, double *Column);
LIntExport Herror set_shape_model_origin(const Halcon::HTuple &ModelID, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror set_shape_model_origin(Hlong ModelID, double Row, double Column);
LIntExport Herror find_aniso_shape_models(const Halcon::Hobject &Image, const Halcon::HTuple &ModelIDs, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *ScaleR, Halcon::HTuple *ScaleC, Halcon::HTuple *Score, Halcon::HTuple *Model);
LIntExport Herror find_aniso_shape_models(const Halcon::Hobject &Image, Hlong ModelIDs, double AngleStart, double AngleExtent, double ScaleRMin, double ScaleRMax, double ScaleCMin, double ScaleCMax, double MinScore, Hlong NumMatches, double MaxOverlap, const char *SubPixel, Hlong NumLevels, double Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *ScaleR, Halcon::HTuple *ScaleC, Halcon::HTuple *Score, Halcon::HTuple *Model);
LIntExport Herror find_scaled_shape_models(const Halcon::Hobject &Image, const Halcon::HTuple &ModelIDs, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ScaleMin, const Halcon::HTuple &ScaleMax, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Scale, Halcon::HTuple *Score, Halcon::HTuple *Model);
LIntExport Herror find_scaled_shape_models(const Halcon::Hobject &Image, Hlong ModelIDs, double AngleStart, double AngleExtent, double ScaleMin, double ScaleMax, double MinScore, Hlong NumMatches, double MaxOverlap, const char *SubPixel, Hlong NumLevels, double Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Scale, Halcon::HTuple *Score, Halcon::HTuple *Model);
LIntExport Herror find_shape_models(const Halcon::Hobject &Image, const Halcon::HTuple &ModelIDs, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Score, Halcon::HTuple *Model);
LIntExport Herror find_shape_models(const Halcon::Hobject &Image, Hlong ModelIDs, double AngleStart, double AngleExtent, double MinScore, Hlong NumMatches, double MaxOverlap, const char *SubPixel, Hlong NumLevels, double Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Score, Halcon::HTuple *Model);
LIntExport Herror find_aniso_shape_model(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *ScaleR, Halcon::HTuple *ScaleC, Halcon::HTuple *Score);
LIntExport Herror find_aniso_shape_model(const Halcon::Hobject &Image, Hlong ModelID, double AngleStart, double AngleExtent, double ScaleRMin, double ScaleRMax, double ScaleCMin, double ScaleCMax, double MinScore, Hlong NumMatches, double MaxOverlap, const char *SubPixel, Hlong NumLevels, double Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *ScaleR, Halcon::HTuple *ScaleC, Halcon::HTuple *Score);
LIntExport Herror find_scaled_shape_model(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ScaleMin, const Halcon::HTuple &ScaleMax, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Scale, Halcon::HTuple *Score);
LIntExport Herror find_scaled_shape_model(const Halcon::Hobject &Image, Hlong ModelID, double AngleStart, double AngleExtent, double ScaleMin, double ScaleMax, double MinScore, Hlong NumMatches, double MaxOverlap, const char *SubPixel, Hlong NumLevels, double Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Scale, Halcon::HTuple *Score);
LIntExport Herror find_shape_model(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Score);
LIntExport Herror find_shape_model(const Halcon::Hobject &Image, Hlong ModelID, double AngleStart, double AngleExtent, double MinScore, Hlong NumMatches, double MaxOverlap, const char *SubPixel, Hlong NumLevels, double Greediness, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Score);
LIntExport Herror set_shape_model_metric(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Metric);
LIntExport Herror set_shape_model_param(const Halcon::HTuple &ModelID, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror create_aniso_shape_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_aniso_shape_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, Hlong *ModelID);
LIntExport Herror create_aniso_shape_model_xld(const Halcon::Hobject &Contours, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleRMin, double ScaleRMax, double ScaleRStep, double ScaleCMin, double ScaleCMax, double ScaleCStep, const char *Optimization, const char *Metric, Hlong MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_aniso_shape_model_xld(const Halcon::Hobject &Contours, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleRMin, double ScaleRMax, double ScaleRStep, double ScaleCMin, double ScaleCMax, double ScaleCStep, const char *Optimization, const char *Metric, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror create_scaled_shape_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleMin, const Halcon::HTuple &ScaleMax, const Halcon::HTuple &ScaleStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_scaled_shape_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleMin, const Halcon::HTuple &ScaleMax, const Halcon::HTuple &ScaleStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, Hlong *ModelID);
LIntExport Herror create_scaled_shape_model_xld(const Halcon::Hobject &Contours, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleMin, double ScaleMax, double ScaleStep, const char *Optimization, const char *Metric, Hlong MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_scaled_shape_model_xld(const Halcon::Hobject &Contours, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleMin, double ScaleMax, double ScaleStep, const char *Optimization, const char *Metric, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror create_shape_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_shape_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, Hlong *ModelID);
LIntExport Herror create_shape_model_xld(const Halcon::Hobject &Contours, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, const char *Optimization, const char *Metric, Hlong MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_shape_model_xld(const Halcon::Hobject &Contours, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, const char *Optimization, const char *Metric, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror create_aniso_shape_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_aniso_shape_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, Hlong *ModelID);
LIntExport Herror create_aniso_shape_model(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleRMin, double ScaleRMax, double ScaleRStep, double ScaleCMin, double ScaleCMax, double ScaleCStep, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_aniso_shape_model(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleRMin, double ScaleRMax, double ScaleRStep, double ScaleCMin, double ScaleCMax, double ScaleCStep, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror create_scaled_shape_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleMin, const Halcon::HTuple &ScaleMax, const Halcon::HTuple &ScaleStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_scaled_shape_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleMin, const Halcon::HTuple &ScaleMax, const Halcon::HTuple &ScaleStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, Hlong *ModelID);
LIntExport Herror create_scaled_shape_model(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleMin, double ScaleMax, double ScaleStep, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_scaled_shape_model(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleMin, double ScaleMax, double ScaleStep, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror create_shape_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_shape_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, Hlong *ModelID);
LIntExport Herror create_shape_model(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, Halcon::HTuple *ModelID);
LIntExport Herror create_shape_model(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, const char *Optimization, const char *Metric, Hlong Contrast, Hlong MinContrast, Hlong *ModelID);
LIntExport Herror inspect_shape_model(const Halcon::Hobject &Image, Halcon::Hobject *ModelImages, Halcon::Hobject *ModelRegions, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Contrast);
LIntExport Herror inspect_shape_model(const Halcon::Hobject &Image,Halcon::Hobject *ModelImages,Halcon::Hobject *ModelRegions, Hlong NumLevels, Hlong Contrast);
LIntExport Herror clear_all_descriptor_models(void);
LIntExport Herror clear_descriptor_model(const Halcon::HTuple &ModelID);
LIntExport Herror clear_descriptor_model(Hlong ModelID);
LIntExport Herror deserialize_descriptor_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_descriptor_model(const Halcon::HTuple &SerializedItemHandle, Hlong *ModelID);
LIntExport Herror deserialize_descriptor_model(Hlong SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_descriptor_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror serialize_descriptor_model(const Halcon::HTuple &ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_descriptor_model(const Halcon::HTuple &ModelID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_descriptor_model(Hlong ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_descriptor_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror read_descriptor_model(const Halcon::HTuple &FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_descriptor_model(const Halcon::HTuple &FileName, Hlong *ModelID);
LIntExport Herror read_descriptor_model(const char *FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_descriptor_model(const char *FileName, Hlong *ModelID);
LIntExport Herror write_descriptor_model(const Halcon::HTuple &ModelID, const Halcon::HTuple &FileName);
LIntExport Herror write_descriptor_model(Hlong ModelID, const char *FileName);
LIntExport Herror find_calib_descriptor_model(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &DetectorParamName, const Halcon::HTuple &DetectorParamValue, const Halcon::HTuple &DescriptorParamName, const Halcon::HTuple &DescriptorParamValue, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &CamParam, const Halcon::HTuple &ScoreType, Halcon::HTuple *Pose, Halcon::HTuple *Score);
LIntExport Herror find_uncalib_descriptor_model(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &DetectorParamName, const Halcon::HTuple &DetectorParamValue, const Halcon::HTuple &DescriptorParamName, const Halcon::HTuple &DescriptorParamValue, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &ScoreType, Halcon::HTuple *HomMat2D, Halcon::HTuple *Score);
LIntExport Herror get_descriptor_model_points(const Halcon::HTuple &ModelID, const Halcon::HTuple &Set, const Halcon::HTuple &Subset, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_descriptor_model_points(Hlong ModelID, const char *Set, Hlong Subset, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_descriptor_model_params(const Halcon::HTuple &ModelID, Halcon::HTuple *DetectorType, Halcon::HTuple *DetectorParamName, Halcon::HTuple *DetectorParamValue, Halcon::HTuple *DescriptorParamName, Halcon::HTuple *DescriptorParamValue);
LIntExport Herror get_descriptor_model_params(Hlong ModelID, Halcon::HTuple *DetectorType, Halcon::HTuple *DetectorParamName, Halcon::HTuple *DetectorParamValue, Halcon::HTuple *DescriptorParamName, Halcon::HTuple *DescriptorParamValue);
LIntExport Herror create_calib_descriptor_model(const Halcon::Hobject &Template, const Halcon::HTuple &CamParam, const Halcon::HTuple &ReferencePose, const Halcon::HTuple &DetectorType, const Halcon::HTuple &DetectorParamName, const Halcon::HTuple &DetectorParamValue, const Halcon::HTuple &DescriptorParamName, const Halcon::HTuple &DescriptorParamValue, const Halcon::HTuple &Seed, Halcon::HTuple *ModelID);
LIntExport Herror create_calib_descriptor_model(const Halcon::Hobject &Template, const Halcon::HTuple &CamParam, const Halcon::HTuple &ReferencePose, const Halcon::HTuple &DetectorType, const Halcon::HTuple &DetectorParamName, const Halcon::HTuple &DetectorParamValue, const Halcon::HTuple &DescriptorParamName, const Halcon::HTuple &DescriptorParamValue, const Halcon::HTuple &Seed, Hlong *ModelID);
LIntExport Herror create_uncalib_descriptor_model(const Halcon::Hobject &Template, const Halcon::HTuple &DetectorType, const Halcon::HTuple &DetectorParamName, const Halcon::HTuple &DetectorParamValue, const Halcon::HTuple &DescriptorParamName, const Halcon::HTuple &DescriptorParamValue, const Halcon::HTuple &Seed, Halcon::HTuple *ModelID);
LIntExport Herror create_uncalib_descriptor_model(const Halcon::Hobject &Template, const Halcon::HTuple &DetectorType, const Halcon::HTuple &DetectorParamName, const Halcon::HTuple &DetectorParamValue, const Halcon::HTuple &DescriptorParamName, const Halcon::HTuple &DescriptorParamValue, const Halcon::HTuple &Seed, Hlong *ModelID);
LIntExport Herror get_descriptor_model_results(const Halcon::HTuple &ModelID, const Halcon::HTuple &ObjectID, const Halcon::HTuple &ResultNames, Halcon::HTuple *Results);
LIntExport Herror get_descriptor_model_results(const Halcon::HTuple &ModelID, const Halcon::HTuple &ObjectID, const Halcon::HTuple &ResultNames, char *Results);
LIntExport Herror get_descriptor_model_results(Hlong ModelID, Hlong ObjectID, const char *ResultNames, Halcon::HTuple *Results);
LIntExport Herror get_descriptor_model_results(Hlong ModelID, Hlong ObjectID, const char *ResultNames, char *Results);
LIntExport Herror get_descriptor_model_origin(const Halcon::HTuple &ModelID, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_descriptor_model_origin(const Halcon::HTuple &ModelID, double *Row, double *Column);
LIntExport Herror get_descriptor_model_origin(Hlong ModelID, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_descriptor_model_origin(Hlong ModelID, double *Row, double *Column);
LIntExport Herror set_descriptor_model_origin(const Halcon::HTuple &ModelID, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror set_descriptor_model_origin(Hlong ModelID, double Row, double Column);
LIntExport Herror get_deformable_model_origin(const Halcon::HTuple &ModelID, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_deformable_model_origin(const Halcon::HTuple &ModelID, double *Row, double *Column);
LIntExport Herror get_deformable_model_origin(Hlong ModelID, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_deformable_model_origin(Hlong ModelID, double *Row, double *Column);
LIntExport Herror set_deformable_model_origin(const Halcon::HTuple &ModelID, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror set_deformable_model_origin(Hlong ModelID, double Row, double Column);
LIntExport Herror set_deformable_model_param(const Halcon::HTuple &ModelID, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror get_deformable_model_params(const Halcon::HTuple &ModelID, const Halcon::HTuple &GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_deformable_model_params(const Halcon::HTuple &ModelID, const Halcon::HTuple &GenParamNames, char *GenParamValues);
LIntExport Herror get_deformable_model_params(Hlong ModelID, const char *GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_deformable_model_params(Hlong ModelID, const char *GenParamNames, char *GenParamValues);
LIntExport Herror get_deformable_model_contours(Halcon::Hobject *ModelContours, const Halcon::HTuple &ModelID, const Halcon::HTuple &Level);
LIntExport Herror get_deformable_model_contours(Halcon::Hobject *ModelContours, Hlong ModelID, Hlong Level);
LIntExport Herror determine_deformable_model_params(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ScaleMin, const Halcon::HTuple &ScaleMax, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, const Halcon::HTuple &Parameters, Halcon::HTuple *ParameterName, Halcon::HTuple *ParameterValue);
LIntExport Herror deserialize_deformable_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_deformable_model(const Halcon::HTuple &SerializedItemHandle, Hlong *ModelID);
LIntExport Herror deserialize_deformable_model(Hlong SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_deformable_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror serialize_deformable_model(const Halcon::HTuple &ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_deformable_model(const Halcon::HTuple &ModelID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_deformable_model(Hlong ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_deformable_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror read_deformable_model(const Halcon::HTuple &FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_deformable_model(const Halcon::HTuple &FileName, Hlong *ModelID);
LIntExport Herror read_deformable_model(const char *FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_deformable_model(const char *FileName, Hlong *ModelID);
LIntExport Herror write_deformable_model(const Halcon::HTuple &ModelID, const Halcon::HTuple &FileName);
LIntExport Herror write_deformable_model(Hlong ModelID, const char *FileName);
LIntExport Herror clear_all_deformable_models(void);
LIntExport Herror clear_deformable_model(const Halcon::HTuple &ModelID);
LIntExport Herror clear_deformable_model(Hlong ModelID);
LIntExport Herror find_local_deformable_model(const Halcon::Hobject &Image, Halcon::Hobject *ImageRectified, Halcon::Hobject *VectorField, Halcon::Hobject *DeformedContours, const Halcon::HTuple &ModelID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Greediness, const Halcon::HTuple &ResultType, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *Score, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror find_planar_calib_deformable_model(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Greediness, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *Pose, Halcon::HTuple *CovPose, Halcon::HTuple *Score);
LIntExport Herror find_planar_uncalib_deformable_model(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &NumLevels, const Halcon::HTuple &Greediness, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *HomMat2D, Halcon::HTuple *Score);
LIntExport Herror set_local_deformable_model_metric(const Halcon::Hobject &Image, const Halcon::Hobject &VectorField, const Halcon::HTuple &ModelID, const Halcon::HTuple &Metric);
LIntExport Herror set_local_deformable_model_metric(const Halcon::Hobject &Image, const Halcon::Hobject &VectorField, Hlong ModelID, const char *Metric);
LIntExport Herror set_planar_calib_deformable_model_metric(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &Pose, const Halcon::HTuple &Metric);
LIntExport Herror set_planar_uncalib_deformable_model_metric(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Metric);
LIntExport Herror create_local_deformable_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *ModelID);
LIntExport Herror create_local_deformable_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Hlong *ModelID);
LIntExport Herror create_planar_calib_deformable_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &CamParam, const Halcon::HTuple &ReferencePose, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *ModelID);
LIntExport Herror create_planar_calib_deformable_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &CamParam, const Halcon::HTuple &ReferencePose, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Hlong *ModelID);
LIntExport Herror create_planar_uncalib_deformable_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *ModelID);
LIntExport Herror create_planar_uncalib_deformable_model_xld(const Halcon::Hobject &Contours, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Hlong *ModelID);
LIntExport Herror create_local_deformable_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *ModelID);
LIntExport Herror create_local_deformable_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Hlong *ModelID);
LIntExport Herror create_planar_calib_deformable_model(const Halcon::Hobject &Template, const Halcon::HTuple &CamParam, const Halcon::HTuple &ReferencePose, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *ModelID);
LIntExport Herror create_planar_calib_deformable_model(const Halcon::Hobject &Template, const Halcon::HTuple &CamParam, const Halcon::HTuple &ReferencePose, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Hlong *ModelID);
LIntExport Herror create_planar_uncalib_deformable_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Halcon::HTuple *ModelID);
LIntExport Herror create_planar_uncalib_deformable_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &ScaleRMin, const Halcon::HTuple &ScaleRMax, const Halcon::HTuple &ScaleRStep, const Halcon::HTuple &ScaleCMin, const Halcon::HTuple &ScaleCMax, const Halcon::HTuple &ScaleCStep, const Halcon::HTuple &Optimization, const Halcon::HTuple &Metric, const Halcon::HTuple &Contrast, const Halcon::HTuple &MinContrast, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue, Hlong *ModelID);
LIntExport Herror clear_all_ncc_models(void);
LIntExport Herror clear_ncc_model(const Halcon::HTuple &ModelID);
LIntExport Herror clear_ncc_model(Hlong ModelID);
LIntExport Herror deserialize_ncc_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_ncc_model(const Halcon::HTuple &SerializedItemHandle, Hlong *ModelID);
LIntExport Herror deserialize_ncc_model(Hlong SerializedItemHandle, Halcon::HTuple *ModelID);
LIntExport Herror deserialize_ncc_model(Hlong SerializedItemHandle, Hlong *ModelID);
LIntExport Herror serialize_ncc_model(const Halcon::HTuple &ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ncc_model(const Halcon::HTuple &ModelID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_ncc_model(Hlong ModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_ncc_model(Hlong ModelID, Hlong *SerializedItemHandle);
LIntExport Herror read_ncc_model(const Halcon::HTuple &FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_ncc_model(const Halcon::HTuple &FileName, Hlong *ModelID);
LIntExport Herror read_ncc_model(const char *FileName, Halcon::HTuple *ModelID);
LIntExport Herror read_ncc_model(const char *FileName, Hlong *ModelID);
LIntExport Herror write_ncc_model(const Halcon::HTuple &ModelID, const Halcon::HTuple &FileName);
LIntExport Herror write_ncc_model(Hlong ModelID, const char *FileName);
LIntExport Herror determine_ncc_model_params(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &Metric, const Halcon::HTuple &Parameters, Halcon::HTuple *ParameterName, Halcon::HTuple *ParameterValue);
LIntExport Herror determine_ncc_model_params(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, const char *Metric, const char *Parameters, Halcon::HTuple *ParameterName, Halcon::HTuple *ParameterValue);
LIntExport Herror get_ncc_model_params(const Halcon::HTuple &ModelID, Halcon::HTuple *NumLevels, Halcon::HTuple *AngleStart, Halcon::HTuple *AngleExtent, Halcon::HTuple *AngleStep, Halcon::HTuple *Metric);
LIntExport Herror get_ncc_model_params(const Halcon::HTuple &ModelID, Hlong *NumLevels, double *AngleStart, double *AngleExtent, double *AngleStep, char *Metric);
LIntExport Herror get_ncc_model_params(Hlong ModelID, Halcon::HTuple *NumLevels, Halcon::HTuple *AngleStart, Halcon::HTuple *AngleExtent, Halcon::HTuple *AngleStep, Halcon::HTuple *Metric);
LIntExport Herror get_ncc_model_params(Hlong ModelID, Hlong *NumLevels, double *AngleStart, double *AngleExtent, double *AngleStep, char *Metric);
LIntExport Herror get_ncc_model_origin(const Halcon::HTuple &ModelID, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_ncc_model_origin(const Halcon::HTuple &ModelID, double *Row, double *Column);
LIntExport Herror get_ncc_model_origin(Hlong ModelID, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_ncc_model_origin(Hlong ModelID, double *Row, double *Column);
LIntExport Herror set_ncc_model_origin(const Halcon::HTuple &ModelID, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror set_ncc_model_origin(Hlong ModelID, double Row, double Column);
LIntExport Herror find_ncc_model(const Halcon::Hobject &Image, const Halcon::HTuple &ModelID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Score);
LIntExport Herror find_ncc_model(const Halcon::Hobject &Image, Hlong ModelID, double AngleStart, double AngleExtent, double MinScore, Hlong NumMatches, double MaxOverlap, const char *SubPixel, Hlong NumLevels, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Score);
LIntExport Herror set_ncc_model_param(const Halcon::HTuple &ModelID, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror create_ncc_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &Metric, Halcon::HTuple *ModelID);
LIntExport Herror create_ncc_model(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevels, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &AngleStep, const Halcon::HTuple &Metric, Hlong *ModelID);
LIntExport Herror create_ncc_model(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, const char *Metric, Halcon::HTuple *ModelID);
LIntExport Herror create_ncc_model(const Halcon::Hobject &Template, Hlong NumLevels, double AngleStart, double AngleExtent, double AngleStep, const char *Metric, Hlong *ModelID);
LIntExport Herror get_found_component_model(Halcon::Hobject *FoundComponents, const Halcon::HTuple &ComponentModelID, const Halcon::HTuple &ModelStart, const Halcon::HTuple &ModelEnd, const Halcon::HTuple &RowComp, const Halcon::HTuple &ColumnComp, const Halcon::HTuple &AngleComp, const Halcon::HTuple &ScoreComp, const Halcon::HTuple &ModelComp, const Halcon::HTuple &ModelMatch, const Halcon::HTuple &MarkOrientation, Halcon::HTuple *RowCompInst, Halcon::HTuple *ColumnCompInst, Halcon::HTuple *AngleCompInst, Halcon::HTuple *ScoreCompInst);
LIntExport Herror get_found_component_model(Halcon::Hobject *FoundComponents, const Halcon::HTuple &ComponentModelID, const Halcon::HTuple &ModelStart, const Halcon::HTuple &ModelEnd, const Halcon::HTuple &RowComp, const Halcon::HTuple &ColumnComp, const Halcon::HTuple &AngleComp, const Halcon::HTuple &ScoreComp, const Halcon::HTuple &ModelComp, const Halcon::HTuple &ModelMatch, const Halcon::HTuple &MarkOrientation, double *RowCompInst, double *ColumnCompInst, double *AngleCompInst, double *ScoreCompInst);
LIntExport Herror get_found_component_model(Halcon::Hobject *FoundComponents, Hlong ComponentModelID, Hlong ModelStart, Hlong ModelEnd, double RowComp, double ColumnComp, double AngleComp, double ScoreComp, Hlong ModelComp, Hlong ModelMatch, const char *MarkOrientation, Halcon::HTuple *RowCompInst, Halcon::HTuple *ColumnCompInst, Halcon::HTuple *AngleCompInst, Halcon::HTuple *ScoreCompInst);
LIntExport Herror get_found_component_model(Halcon::Hobject *FoundComponents, Hlong ComponentModelID, Hlong ModelStart, Hlong ModelEnd, double RowComp, double ColumnComp, double AngleComp, double ScoreComp, Hlong ModelComp, Hlong ModelMatch, const char *MarkOrientation, double *RowCompInst, double *ColumnCompInst, double *AngleCompInst, double *ScoreCompInst);
LIntExport Herror find_component_model(const Halcon::Hobject &Image, const Halcon::HTuple &ComponentModelID, const Halcon::HTuple &RootComponent, const Halcon::HTuple &AngleStartRoot, const Halcon::HTuple &AngleExtentRoot, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &IfRootNotFound, const Halcon::HTuple &IfComponentNotFound, const Halcon::HTuple &PosePrediction, const Halcon::HTuple &MinScoreComp, const Halcon::HTuple &SubPixelComp, const Halcon::HTuple &NumLevelsComp, const Halcon::HTuple &GreedinessComp, Halcon::HTuple *ModelStart, Halcon::HTuple *ModelEnd, Halcon::HTuple *Score, Halcon::HTuple *RowComp, Halcon::HTuple *ColumnComp, Halcon::HTuple *AngleComp, Halcon::HTuple *ScoreComp, Halcon::HTuple *ModelComp);
LIntExport Herror find_component_model(const Halcon::Hobject &Image, const Halcon::HTuple &ComponentModelID, const Halcon::HTuple &RootComponent, const Halcon::HTuple &AngleStartRoot, const Halcon::HTuple &AngleExtentRoot, const Halcon::HTuple &MinScore, const Halcon::HTuple &NumMatches, const Halcon::HTuple &MaxOverlap, const Halcon::HTuple &IfRootNotFound, const Halcon::HTuple &IfComponentNotFound, const Halcon::HTuple &PosePrediction, const Halcon::HTuple &MinScoreComp, const Halcon::HTuple &SubPixelComp, const Halcon::HTuple &NumLevelsComp, const Halcon::HTuple &GreedinessComp, Hlong *ModelStart, Hlong *ModelEnd, double *Score, double *RowComp, double *ColumnComp, double *AngleComp, double *ScoreComp, Hlong *ModelComp);
LIntExport Herror find_component_model(const Halcon::Hobject &Image, Hlong ComponentModelID, Hlong RootComponent, double AngleStartRoot, double AngleExtentRoot, double MinScore, Hlong NumMatches, double MaxOverlap, const char *IfRootNotFound, const char *IfComponentNotFound, const char *PosePrediction, double MinScoreComp, const char *SubPixelComp, Hlong NumLevelsComp, double GreedinessComp, Halcon::HTuple *ModelStart, Halcon::HTuple *ModelEnd, Halcon::HTuple *Score, Halcon::HTuple *RowComp, Halcon::HTuple *ColumnComp, Halcon::HTuple *AngleComp, Halcon::HTuple *ScoreComp, Halcon::HTuple *ModelComp);
LIntExport Herror find_component_model(const Halcon::Hobject &Image, Hlong ComponentModelID, Hlong RootComponent, double AngleStartRoot, double AngleExtentRoot, double MinScore, Hlong NumMatches, double MaxOverlap, const char *IfRootNotFound, const char *IfComponentNotFound, const char *PosePrediction, double MinScoreComp, const char *SubPixelComp, Hlong NumLevelsComp, double GreedinessComp, Hlong *ModelStart, Hlong *ModelEnd, double *Score, double *RowComp, double *ColumnComp, double *AngleComp, double *ScoreComp, Hlong *ModelComp);
LIntExport Herror clear_all_component_models(void);
LIntExport Herror clear_component_model(const Halcon::HTuple &ComponentModelID);
LIntExport Herror clear_component_model(Hlong ComponentModelID);
LIntExport Herror get_component_model_tree(Halcon::Hobject *Tree, Halcon::Hobject *Relations, const Halcon::HTuple &ComponentModelID, const Halcon::HTuple &RootComponent, const Halcon::HTuple &Image, Halcon::HTuple *StartNode, Halcon::HTuple *EndNode, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2, Halcon::HTuple *AngleStart, Halcon::HTuple *AngleExtent);
LIntExport Herror get_component_model_tree(Halcon::Hobject *Tree, Halcon::Hobject *Relations, const Halcon::HTuple &ComponentModelID, const Halcon::HTuple &RootComponent, const Halcon::HTuple &Image, Hlong *StartNode, Hlong *EndNode, double *Row, double *Column, double *Phi, double *Length1, double *Length2, double *AngleStart, double *AngleExtent);
LIntExport Herror get_component_model_params(const Halcon::HTuple &ComponentModelID, Halcon::HTuple *MinScoreComp, Halcon::HTuple *RootRanking, Halcon::HTuple *ShapeModelIDs);
LIntExport Herror get_component_model_params(const Halcon::HTuple &ComponentModelID, double *MinScoreComp, Hlong *RootRanking, Hlong *ShapeModelIDs);
LIntExport Herror get_component_model_params(Hlong ComponentModelID, Halcon::HTuple *MinScoreComp, Halcon::HTuple *RootRanking, Halcon::HTuple *ShapeModelIDs);
LIntExport Herror get_component_model_params(Hlong ComponentModelID, double *MinScoreComp, Hlong *RootRanking, Hlong *ShapeModelIDs);
LIntExport Herror deserialize_component_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ComponentModelID);
LIntExport Herror deserialize_component_model(const Halcon::HTuple &SerializedItemHandle, Hlong *ComponentModelID);
LIntExport Herror deserialize_component_model(Hlong SerializedItemHandle, Halcon::HTuple *ComponentModelID);
LIntExport Herror deserialize_component_model(Hlong SerializedItemHandle, Hlong *ComponentModelID);
LIntExport Herror serialize_component_model(const Halcon::HTuple &ComponentModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_component_model(const Halcon::HTuple &ComponentModelID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_component_model(Hlong ComponentModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_component_model(Hlong ComponentModelID, Hlong *SerializedItemHandle);
LIntExport Herror read_component_model(const Halcon::HTuple &FileName, Halcon::HTuple *ComponentModelID);
LIntExport Herror read_component_model(const Halcon::HTuple &FileName, Hlong *ComponentModelID);
LIntExport Herror read_component_model(const char *FileName, Halcon::HTuple *ComponentModelID);
LIntExport Herror read_component_model(const char *FileName, Hlong *ComponentModelID);
LIntExport Herror write_component_model(const Halcon::HTuple &ComponentModelID, const Halcon::HTuple &FileName);
LIntExport Herror write_component_model(Hlong ComponentModelID, const char *FileName);
LIntExport Herror create_component_model(const Halcon::Hobject &ModelImage, const Halcon::Hobject &ComponentRegions, const Halcon::HTuple &VariationRow, const Halcon::HTuple &VariationColumn, const Halcon::HTuple &VariationAngle, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ContrastLowComp, const Halcon::HTuple &ContrastHighComp, const Halcon::HTuple &MinSizeComp, const Halcon::HTuple &MinContrastComp, const Halcon::HTuple &MinScoreComp, const Halcon::HTuple &NumLevelsComp, const Halcon::HTuple &AngleStepComp, const Halcon::HTuple &OptimizationComp, const Halcon::HTuple &MetricComp, const Halcon::HTuple &PregenerationComp, Halcon::HTuple *ComponentModelID, Halcon::HTuple *RootRanking);
LIntExport Herror create_component_model(const Halcon::Hobject &ModelImage, const Halcon::Hobject &ComponentRegions, const Halcon::HTuple &VariationRow, const Halcon::HTuple &VariationColumn, const Halcon::HTuple &VariationAngle, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &ContrastLowComp, const Halcon::HTuple &ContrastHighComp, const Halcon::HTuple &MinSizeComp, const Halcon::HTuple &MinContrastComp, const Halcon::HTuple &MinScoreComp, const Halcon::HTuple &NumLevelsComp, const Halcon::HTuple &AngleStepComp, const Halcon::HTuple &OptimizationComp, const Halcon::HTuple &MetricComp, const Halcon::HTuple &PregenerationComp, Hlong *ComponentModelID, Hlong *RootRanking);
LIntExport Herror create_component_model(const Halcon::Hobject &ModelImage, const Halcon::Hobject &ComponentRegions, Hlong VariationRow, Hlong VariationColumn, double VariationAngle, double AngleStart, double AngleExtent, Hlong ContrastLowComp, Hlong ContrastHighComp, Hlong MinSizeComp, Hlong MinContrastComp, double MinScoreComp, Hlong NumLevelsComp, double AngleStepComp, const char *OptimizationComp, const char *MetricComp, const char *PregenerationComp, Halcon::HTuple *ComponentModelID, Halcon::HTuple *RootRanking);
LIntExport Herror create_component_model(const Halcon::Hobject &ModelImage, const Halcon::Hobject &ComponentRegions, Hlong VariationRow, Hlong VariationColumn, double VariationAngle, double AngleStart, double AngleExtent, Hlong ContrastLowComp, Hlong ContrastHighComp, Hlong MinSizeComp, Hlong MinContrastComp, double MinScoreComp, Hlong NumLevelsComp, double AngleStepComp, const char *OptimizationComp, const char *MetricComp, const char *PregenerationComp, Hlong *ComponentModelID, Hlong *RootRanking);
LIntExport Herror create_trained_component_model(const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &MinContrastComp, const Halcon::HTuple &MinScoreComp, const Halcon::HTuple &NumLevelsComp, const Halcon::HTuple &AngleStepComp, const Halcon::HTuple &OptimizationComp, const Halcon::HTuple &MetricComp, const Halcon::HTuple &PregenerationComp, Halcon::HTuple *ComponentModelID, Halcon::HTuple *RootRanking);
LIntExport Herror create_trained_component_model(const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtent, const Halcon::HTuple &MinContrastComp, const Halcon::HTuple &MinScoreComp, const Halcon::HTuple &NumLevelsComp, const Halcon::HTuple &AngleStepComp, const Halcon::HTuple &OptimizationComp, const Halcon::HTuple &MetricComp, const Halcon::HTuple &PregenerationComp, Hlong *ComponentModelID, Hlong *RootRanking);
LIntExport Herror create_trained_component_model(Hlong ComponentTrainingID, double AngleStart, double AngleExtent, Hlong MinContrastComp, double MinScoreComp, Hlong NumLevelsComp, double AngleStepComp, const char *OptimizationComp, const char *MetricComp, const char *PregenerationComp, Halcon::HTuple *ComponentModelID, Halcon::HTuple *RootRanking);
LIntExport Herror create_trained_component_model(Hlong ComponentTrainingID, double AngleStart, double AngleExtent, Hlong MinContrastComp, double MinScoreComp, Hlong NumLevelsComp, double AngleStepComp, const char *OptimizationComp, const char *MetricComp, const char *PregenerationComp, Hlong *ComponentModelID, Hlong *RootRanking);
LIntExport Herror clear_all_training_components(void);
LIntExport Herror clear_training_components(const Halcon::HTuple &ComponentTrainingID);
LIntExport Herror clear_training_components(Hlong ComponentTrainingID);
LIntExport Herror get_component_relations(Halcon::Hobject *Relations, const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &ReferenceComponent, const Halcon::HTuple &Image, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2, Halcon::HTuple *AngleStart, Halcon::HTuple *AngleExtent);
LIntExport Herror get_component_relations(Halcon::Hobject *Relations, const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &ReferenceComponent, const Halcon::HTuple &Image, double *Row, double *Column, double *Phi, double *Length1, double *Length2, double *AngleStart, double *AngleExtent);
LIntExport Herror get_training_components(Halcon::Hobject *TrainingComponents, const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &Components, const Halcon::HTuple &Image, const Halcon::HTuple &MarkOrientation, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Score);
LIntExport Herror get_training_components(Halcon::Hobject *TrainingComponents, const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &Components, const Halcon::HTuple &Image, const Halcon::HTuple &MarkOrientation, double *Row, double *Column, double *Angle, double *Score);
LIntExport Herror modify_component_relations(const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &ReferenceComponent, const Halcon::HTuple &ToleranceComponent, const Halcon::HTuple &PositionTolerance, const Halcon::HTuple &AngleTolerance);
LIntExport Herror deserialize_training_components(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ComponentTrainingID);
LIntExport Herror deserialize_training_components(const Halcon::HTuple &SerializedItemHandle, Hlong *ComponentTrainingID);
LIntExport Herror deserialize_training_components(Hlong SerializedItemHandle, Halcon::HTuple *ComponentTrainingID);
LIntExport Herror deserialize_training_components(Hlong SerializedItemHandle, Hlong *ComponentTrainingID);
LIntExport Herror serialize_training_components(const Halcon::HTuple &ComponentTrainingID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_training_components(const Halcon::HTuple &ComponentTrainingID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_training_components(Hlong ComponentTrainingID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_training_components(Hlong ComponentTrainingID, Hlong *SerializedItemHandle);
LIntExport Herror read_training_components(const Halcon::HTuple &FileName, Halcon::HTuple *ComponentTrainingID);
LIntExport Herror read_training_components(const Halcon::HTuple &FileName, Hlong *ComponentTrainingID);
LIntExport Herror read_training_components(const char *FileName, Halcon::HTuple *ComponentTrainingID);
LIntExport Herror read_training_components(const char *FileName, Hlong *ComponentTrainingID);
LIntExport Herror write_training_components(const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &FileName);
LIntExport Herror write_training_components(Hlong ComponentTrainingID, const char *FileName);
LIntExport Herror cluster_model_components(const Halcon::Hobject &TrainingImages, Halcon::Hobject *ModelComponents, const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &AmbiguityCriterion, const Halcon::HTuple &MaxContourOverlap, const Halcon::HTuple &ClusterThreshold);
LIntExport Herror cluster_model_components(const Halcon::Hobject &TrainingImages,Halcon::Hobject *ModelComponents, Hlong ComponentTrainingID, const char *AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold);
LIntExport Herror inspect_clustered_components(Halcon::Hobject *ModelComponents, const Halcon::HTuple &ComponentTrainingID, const Halcon::HTuple &AmbiguityCriterion, const Halcon::HTuple &MaxContourOverlap, const Halcon::HTuple &ClusterThreshold);
LIntExport Herror inspect_clustered_components(Halcon::Hobject *ModelComponents, Hlong ComponentTrainingID, const char *AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold);
LIntExport Herror train_model_components(const Halcon::Hobject &ModelImage, const Halcon::Hobject &InitialComponents, const Halcon::Hobject &TrainingImages, Halcon::Hobject *ModelComponents, const Halcon::HTuple &ContrastLow, const Halcon::HTuple &ContrastHigh, const Halcon::HTuple &MinSize, const Halcon::HTuple &MinScore, const Halcon::HTuple &SearchRowTol, const Halcon::HTuple &SearchColumnTol, const Halcon::HTuple &SearchAngleTol, const Halcon::HTuple &TrainingEmphasis, const Halcon::HTuple &AmbiguityCriterion, const Halcon::HTuple &MaxContourOverlap, const Halcon::HTuple &ClusterThreshold, Halcon::HTuple *ComponentTrainingID);
LIntExport Herror train_model_components(const Halcon::Hobject &ModelImage, const Halcon::Hobject &InitialComponents, const Halcon::Hobject &TrainingImages, Halcon::Hobject *ModelComponents, const Halcon::HTuple &ContrastLow, const Halcon::HTuple &ContrastHigh, const Halcon::HTuple &MinSize, const Halcon::HTuple &MinScore, const Halcon::HTuple &SearchRowTol, const Halcon::HTuple &SearchColumnTol, const Halcon::HTuple &SearchAngleTol, const Halcon::HTuple &TrainingEmphasis, const Halcon::HTuple &AmbiguityCriterion, const Halcon::HTuple &MaxContourOverlap, const Halcon::HTuple &ClusterThreshold, Hlong *ComponentTrainingID);
LIntExport Herror train_model_components(const Halcon::Hobject &ModelImage, const Halcon::Hobject &InitialComponents, const Halcon::Hobject &TrainingImages,Halcon::Hobject *ModelComponents, Hlong ContrastLow, Hlong ContrastHigh, Hlong MinSize, double MinScore, Hlong SearchRowTol, Hlong SearchColumnTol, double SearchAngleTol, const char *TrainingEmphasis, const char *AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold, Halcon::HTuple *ComponentTrainingID);
LIntExport Herror train_model_components(const Halcon::Hobject &ModelImage, const Halcon::Hobject &InitialComponents, const Halcon::Hobject &TrainingImages, Halcon::Hobject *ModelComponents, Hlong ContrastLow, Hlong ContrastHigh, Hlong MinSize, double MinScore, Hlong SearchRowTol, Hlong SearchColumnTol, double SearchAngleTol, const char *TrainingEmphasis, const char *AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold, Hlong *ComponentTrainingID);
LIntExport Herror gen_initial_components(const Halcon::Hobject &ModelImage, Halcon::Hobject *InitialComponents, const Halcon::HTuple &ContrastLow, const Halcon::HTuple &ContrastHigh, const Halcon::HTuple &MinSize, const Halcon::HTuple &Mode, const Halcon::HTuple &GenericName, const Halcon::HTuple &GenericValue);
LIntExport Herror gen_initial_components(const Halcon::Hobject &ModelImage,Halcon::Hobject *InitialComponents, Hlong ContrastLow, Hlong ContrastHigh, Hlong MinSize, const char *Mode, const char *GenericName, double GenericValue);
LIntExport Herror get_deformable_surface_matching_result(const Halcon::HTuple &DeformableSurfaceMatchingResult, const Halcon::HTuple &ResultName, const Halcon::HTuple &ResultIndex, Halcon::HTuple *ResultValue);
LIntExport Herror get_deformable_surface_matching_result(const Halcon::HTuple &DeformableSurfaceMatchingResult, const Halcon::HTuple &ResultName, const Halcon::HTuple &ResultIndex, Hlong *ResultValue);
LIntExport Herror get_deformable_surface_matching_result(Hlong DeformableSurfaceMatchingResult, const char *ResultName, Hlong ResultIndex, Halcon::HTuple *ResultValue);
LIntExport Herror get_deformable_surface_matching_result(Hlong DeformableSurfaceMatchingResult, const char *ResultName, Hlong ResultIndex, Hlong *ResultValue);
LIntExport Herror clear_deformable_surface_matching_result(const Halcon::HTuple &DeformableSurfaceMatchingResult);
LIntExport Herror clear_deformable_surface_matching_result(Hlong DeformableSurfaceMatchingResult);
LIntExport Herror clear_deformable_surface_model(const Halcon::HTuple &DeformableSurfaceModel);
LIntExport Herror clear_deformable_surface_model(Hlong DeformableSurfaceModel);
LIntExport Herror deserialize_deformable_surface_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *DeformableSurfaceModel);
LIntExport Herror deserialize_deformable_surface_model(const Halcon::HTuple &SerializedItemHandle, Hlong *DeformableSurfaceModel);
LIntExport Herror deserialize_deformable_surface_model(Hlong SerializedItemHandle, Halcon::HTuple *DeformableSurfaceModel);
LIntExport Herror deserialize_deformable_surface_model(Hlong SerializedItemHandle, Hlong *DeformableSurfaceModel);
LIntExport Herror serialize_deformable_surface_model(const Halcon::HTuple &DeformableSurfaceModel, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_deformable_surface_model(const Halcon::HTuple &DeformableSurfaceModel, Hlong *SerializedItemHandle);
LIntExport Herror serialize_deformable_surface_model(Hlong DeformableSurfaceModel, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_deformable_surface_model(Hlong DeformableSurfaceModel, Hlong *SerializedItemHandle);
LIntExport Herror read_deformable_surface_model(const Halcon::HTuple &FileName, Halcon::HTuple *DeformableSurfaceModel);
LIntExport Herror read_deformable_surface_model(const Halcon::HTuple &FileName, Hlong *DeformableSurfaceModel);
LIntExport Herror read_deformable_surface_model(const char *FileName, Halcon::HTuple *DeformableSurfaceModel);
LIntExport Herror read_deformable_surface_model(const char *FileName, Hlong *DeformableSurfaceModel);
LIntExport Herror write_deformable_surface_model(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &FileName);
LIntExport Herror write_deformable_surface_model(Hlong DeformableSurfaceModel, const char *FileName);
LIntExport Herror refine_deformable_surface_model(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &RelSamplingDistance, const Halcon::HTuple &InitialDeformationObjectModel3D, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Score, Halcon::HTuple *DeformableSurfaceMatchingResult);
LIntExport Herror refine_deformable_surface_model(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &RelSamplingDistance, const Halcon::HTuple &InitialDeformationObjectModel3D, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, double *Score, Hlong *DeformableSurfaceMatchingResult);
LIntExport Herror find_deformable_surface_model(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &RelSamplingDistance, const Halcon::HTuple &MinScore, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Score, Halcon::HTuple *DeformableSurfaceMatchingResult);
LIntExport Herror find_deformable_surface_model(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &RelSamplingDistance, const Halcon::HTuple &MinScore, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, double *Score, Hlong *DeformableSurfaceMatchingResult);
LIntExport Herror get_deformable_surface_model_param(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_deformable_surface_model_param(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &ParamName, double *ParamValue);
LIntExport Herror get_deformable_surface_model_param(Hlong DeformableSurfaceModel, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_deformable_surface_model_param(Hlong DeformableSurfaceModel, const char *ParamName, double *ParamValue);
LIntExport Herror add_deformable_surface_model_reference_point(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &ReferencePointX, const Halcon::HTuple &ReferencePointY, const Halcon::HTuple &ReferencePointZ, Halcon::HTuple *ReferencePointIndex);
LIntExport Herror add_deformable_surface_model_reference_point(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &ReferencePointX, const Halcon::HTuple &ReferencePointY, const Halcon::HTuple &ReferencePointZ, Hlong *ReferencePointIndex);
LIntExport Herror add_deformable_surface_model_reference_point(Hlong DeformableSurfaceModel, double ReferencePointX, double ReferencePointY, double ReferencePointZ, Halcon::HTuple *ReferencePointIndex);
LIntExport Herror add_deformable_surface_model_reference_point(Hlong DeformableSurfaceModel, double ReferencePointX, double ReferencePointY, double ReferencePointZ, Hlong *ReferencePointIndex);
LIntExport Herror add_deformable_surface_model_sample(const Halcon::HTuple &DeformableSurfaceModel, const Halcon::HTuple &ObjectModel3D);
LIntExport Herror add_deformable_surface_model_sample(Hlong DeformableSurfaceModel, Hlong ObjectModel3D);
LIntExport Herror create_deformable_surface_model(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &RelSamplingDistance, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *DeformableSurfaceModel);
LIntExport Herror create_deformable_surface_model(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &RelSamplingDistance, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *DeformableSurfaceModel);
LIntExport Herror get_surface_matching_result(const Halcon::HTuple &SurfaceMatchingResultID, const Halcon::HTuple &ResultName, const Halcon::HTuple &ResultIndex, Halcon::HTuple *ResultValue);
LIntExport Herror get_surface_matching_result(const Halcon::HTuple &SurfaceMatchingResultID, const Halcon::HTuple &ResultName, const Halcon::HTuple &ResultIndex, Hlong *ResultValue);
LIntExport Herror get_surface_matching_result(Hlong SurfaceMatchingResultID, const char *ResultName, Hlong ResultIndex, Halcon::HTuple *ResultValue);
LIntExport Herror get_surface_matching_result(Hlong SurfaceMatchingResultID, const char *ResultName, Hlong ResultIndex, Hlong *ResultValue);
LIntExport Herror clear_all_surface_matching_results(void);
LIntExport Herror clear_surface_matching_result(const Halcon::HTuple &SurfaceMatchingResultID);
LIntExport Herror clear_surface_matching_result(Hlong SurfaceMatchingResultID);
LIntExport Herror clear_all_surface_models(void);
LIntExport Herror clear_surface_model(const Halcon::HTuple &SurfaceModelID);
LIntExport Herror clear_surface_model(Hlong SurfaceModelID);
LIntExport Herror deserialize_surface_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *SurfaceModelID);
LIntExport Herror deserialize_surface_model(const Halcon::HTuple &SerializedItemHandle, Hlong *SurfaceModelID);
LIntExport Herror deserialize_surface_model(Hlong SerializedItemHandle, Halcon::HTuple *SurfaceModelID);
LIntExport Herror deserialize_surface_model(Hlong SerializedItemHandle, Hlong *SurfaceModelID);
LIntExport Herror serialize_surface_model(const Halcon::HTuple &SurfaceModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_surface_model(const Halcon::HTuple &SurfaceModelID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_surface_model(Hlong SurfaceModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_surface_model(Hlong SurfaceModelID, Hlong *SerializedItemHandle);
LIntExport Herror read_surface_model(const Halcon::HTuple &FileName, Halcon::HTuple *SurfaceModelID);
LIntExport Herror read_surface_model(const Halcon::HTuple &FileName, Hlong *SurfaceModelID);
LIntExport Herror read_surface_model(const char *FileName, Halcon::HTuple *SurfaceModelID);
LIntExport Herror read_surface_model(const char *FileName, Hlong *SurfaceModelID);
LIntExport Herror write_surface_model(const Halcon::HTuple &SurfaceModelID, const Halcon::HTuple &FileName);
LIntExport Herror write_surface_model(Hlong SurfaceModelID, const char *FileName);
LIntExport Herror refine_surface_model_pose(const Halcon::HTuple &SurfaceModelID, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &InitialPose, const Halcon::HTuple &MinScore, const Halcon::HTuple &ReturnResultHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Pose, Halcon::HTuple *Score, Halcon::HTuple *SurfaceMatchingResultID);
LIntExport Herror find_surface_model(const Halcon::HTuple &SurfaceModelID, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &RelSamplingDistance, const Halcon::HTuple &KeyPointFraction, const Halcon::HTuple &MinScore, const Halcon::HTuple &ReturnResultHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Pose, Halcon::HTuple *Score, Halcon::HTuple *SurfaceMatchingResultID);
LIntExport Herror get_surface_model_param(const Halcon::HTuple &SurfaceModelID, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_surface_model_param(const Halcon::HTuple &SurfaceModelID, const Halcon::HTuple &ParamName, double *ParamValue);
LIntExport Herror get_surface_model_param(Hlong SurfaceModelID, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_surface_model_param(Hlong SurfaceModelID, const char *ParamName, double *ParamValue);
LIntExport Herror create_surface_model(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &RelSamplingDistance, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *SurfaceModelID);
LIntExport Herror create_surface_model(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &RelSamplingDistance, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *SurfaceModelID);
LIntExport Herror create_cam_pose_look_at_point(const Halcon::HTuple &CamPosX, const Halcon::HTuple &CamPosY, const Halcon::HTuple &CamPosZ, const Halcon::HTuple &LookAtX, const Halcon::HTuple &LookAtY, const Halcon::HTuple &LookAtZ, const Halcon::HTuple &RefPlaneNormal, const Halcon::HTuple &CamRoll, Halcon::HTuple *CamPose);
LIntExport Herror convert_point_3d_spher_to_cart(const Halcon::HTuple &Longitude, const Halcon::HTuple &Latitude, const Halcon::HTuple &Radius, const Halcon::HTuple &EquatPlaneNormal, const Halcon::HTuple &ZeroMeridian, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z);
LIntExport Herror convert_point_3d_spher_to_cart(const Halcon::HTuple &Longitude, const Halcon::HTuple &Latitude, const Halcon::HTuple &Radius, const Halcon::HTuple &EquatPlaneNormal, const Halcon::HTuple &ZeroMeridian, double *X, double *Y, double *Z);
LIntExport Herror convert_point_3d_spher_to_cart(double Longitude, double Latitude, double Radius, const char *EquatPlaneNormal, const char *ZeroMeridian, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z);
LIntExport Herror convert_point_3d_spher_to_cart(double Longitude, double Latitude, double Radius, const char *EquatPlaneNormal, const char *ZeroMeridian, double *X, double *Y, double *Z);
LIntExport Herror convert_point_3d_cart_to_spher(const Halcon::HTuple &X, const Halcon::HTuple &Y, const Halcon::HTuple &Z, const Halcon::HTuple &EquatPlaneNormal, const Halcon::HTuple &ZeroMeridian, Halcon::HTuple *Longitude, Halcon::HTuple *Latitude, Halcon::HTuple *Radius);
LIntExport Herror convert_point_3d_cart_to_spher(const Halcon::HTuple &X, const Halcon::HTuple &Y, const Halcon::HTuple &Z, const Halcon::HTuple &EquatPlaneNormal, const Halcon::HTuple &ZeroMeridian, double *Longitude, double *Latitude, double *Radius);
LIntExport Herror convert_point_3d_cart_to_spher(double X, double Y, double Z, const char *EquatPlaneNormal, const char *ZeroMeridian, Halcon::HTuple *Longitude, Halcon::HTuple *Latitude, Halcon::HTuple *Radius);
LIntExport Herror convert_point_3d_cart_to_spher(double X, double Y, double Z, const char *EquatPlaneNormal, const char *ZeroMeridian, double *Longitude, double *Latitude, double *Radius);
LIntExport Herror clear_all_shape_model_3d(void);
LIntExport Herror clear_shape_model_3d(const Halcon::HTuple &ShapeModel3DID);
LIntExport Herror clear_shape_model_3d(Hlong ShapeModel3DID);
LIntExport Herror deserialize_shape_model_3d(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ShapeModel3DID);
LIntExport Herror deserialize_shape_model_3d(const Halcon::HTuple &SerializedItemHandle, Hlong *ShapeModel3DID);
LIntExport Herror deserialize_shape_model_3d(Hlong SerializedItemHandle, Halcon::HTuple *ShapeModel3DID);
LIntExport Herror deserialize_shape_model_3d(Hlong SerializedItemHandle, Hlong *ShapeModel3DID);
LIntExport Herror serialize_shape_model_3d(const Halcon::HTuple &ShapeModel3DID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_shape_model_3d(const Halcon::HTuple &ShapeModel3DID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_shape_model_3d(Hlong ShapeModel3DID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_shape_model_3d(Hlong ShapeModel3DID, Hlong *SerializedItemHandle);
LIntExport Herror read_shape_model_3d(const Halcon::HTuple &FileName, Halcon::HTuple *ShapeModel3DID);
LIntExport Herror read_shape_model_3d(const Halcon::HTuple &FileName, Hlong *ShapeModel3DID);
LIntExport Herror read_shape_model_3d(const char *FileName, Halcon::HTuple *ShapeModel3DID);
LIntExport Herror read_shape_model_3d(const char *FileName, Hlong *ShapeModel3DID);
LIntExport Herror write_shape_model_3d(const Halcon::HTuple &ShapeModel3DID, const Halcon::HTuple &FileName);
LIntExport Herror write_shape_model_3d(Hlong ShapeModel3DID, const char *FileName);
LIntExport Herror trans_pose_shape_model_3d(const Halcon::HTuple &ShapeModel3DID, const Halcon::HTuple &PoseIn, const Halcon::HTuple &Transformation, Halcon::HTuple *PoseOut);
LIntExport Herror project_shape_model_3d(Halcon::Hobject *ModelContours, const Halcon::HTuple &ShapeModel3DID, const Halcon::HTuple &CamParam, const Halcon::HTuple &Pose, const Halcon::HTuple &HiddenSurfaceRemoval, const Halcon::HTuple &MinFaceAngle);
LIntExport Herror get_shape_model_3d_contours(Halcon::Hobject *ModelContours, const Halcon::HTuple &ShapeModel3DID, const Halcon::HTuple &Level, const Halcon::HTuple &View, Halcon::HTuple *ViewPose);
LIntExport Herror get_shape_model_3d_contours(Halcon::Hobject *ModelContours, Hlong ShapeModel3DID, Hlong Level, Hlong View, Halcon::HTuple *ViewPose);
LIntExport Herror get_shape_model_3d_params(const Halcon::HTuple &ShapeModel3DID, const Halcon::HTuple &GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_shape_model_3d_params(const Halcon::HTuple &ShapeModel3DID, const Halcon::HTuple &GenParamNames, char *GenParamValues);
LIntExport Herror get_shape_model_3d_params(Hlong ShapeModel3DID, const char *GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_shape_model_3d_params(Hlong ShapeModel3DID, const char *GenParamNames, char *GenParamValues);
LIntExport Herror find_shape_model_3d(const Halcon::Hobject &Image, const Halcon::HTuple &ShapeModel3DID, const Halcon::HTuple &MinScore, const Halcon::HTuple &Greediness, const Halcon::HTuple &NumLevels, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *Pose, Halcon::HTuple *CovPose, Halcon::HTuple *Score);
LIntExport Herror create_shape_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &CamParam, const Halcon::HTuple &RefRotX, const Halcon::HTuple &RefRotY, const Halcon::HTuple &RefRotZ, const Halcon::HTuple &OrderOfRotation, const Halcon::HTuple &LongitudeMin, const Halcon::HTuple &LongitudeMax, const Halcon::HTuple &LatitudeMin, const Halcon::HTuple &LatitudeMax, const Halcon::HTuple &CamRollMin, const Halcon::HTuple &CamRollMax, const Halcon::HTuple &DistMin, const Halcon::HTuple &DistMax, const Halcon::HTuple &MinContrast, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *ShapeModel3DID);
LIntExport Herror create_shape_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &CamParam, const Halcon::HTuple &RefRotX, const Halcon::HTuple &RefRotY, const Halcon::HTuple &RefRotZ, const Halcon::HTuple &OrderOfRotation, const Halcon::HTuple &LongitudeMin, const Halcon::HTuple &LongitudeMax, const Halcon::HTuple &LatitudeMin, const Halcon::HTuple &LatitudeMax, const Halcon::HTuple &CamRollMin, const Halcon::HTuple &CamRollMax, const Halcon::HTuple &DistMin, const Halcon::HTuple &DistMax, const Halcon::HTuple &MinContrast, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *ShapeModel3DID);
LIntExport Herror simplify_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &Amount, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *SimplifiedObjectModel3D);
LIntExport Herror simplify_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &Amount, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *SimplifiedObjectModel3D);
LIntExport Herror distance_object_model_3d(const Halcon::HTuple &ObjectModel3DFrom, const Halcon::HTuple &ObjectModel3DTo, const Halcon::HTuple &Pose, const Halcon::HTuple &MaxDistance, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror union_object_model_3d(const Halcon::HTuple &ObjectModels3D, const Halcon::HTuple &Method, Halcon::HTuple *UnionObjectModel3D);
LIntExport Herror union_object_model_3d(const Halcon::HTuple &ObjectModels3D, const Halcon::HTuple &Method, Hlong *UnionObjectModel3D);
LIntExport Herror union_object_model_3d(Hlong ObjectModels3D, const char *Method, Halcon::HTuple *UnionObjectModel3D);
LIntExport Herror union_object_model_3d(Hlong ObjectModels3D, const char *Method, Hlong *UnionObjectModel3D);
LIntExport Herror set_object_model_3d_attrib_mod(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &AttribName, const Halcon::HTuple &AttachExtAttribTo, const Halcon::HTuple &AttribValues);
LIntExport Herror set_object_model_3d_attrib_mod(Hlong ObjectModel3D, const char *AttribName, const char *AttachExtAttribTo, double AttribValues);
LIntExport Herror set_object_model_3d_attrib(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &AttribName, const Halcon::HTuple &AttachExtAttribTo, const Halcon::HTuple &AttribValues, Halcon::HTuple *ObjectModel3DOut);
LIntExport Herror set_object_model_3d_attrib(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &AttribName, const Halcon::HTuple &AttachExtAttribTo, const Halcon::HTuple &AttribValues, Hlong *ObjectModel3DOut);
LIntExport Herror set_object_model_3d_attrib(Hlong ObjectModel3D, const char *AttribName, const char *AttachExtAttribTo, double AttribValues, Halcon::HTuple *ObjectModel3DOut);
LIntExport Herror set_object_model_3d_attrib(Hlong ObjectModel3D, const char *AttribName, const char *AttachExtAttribTo, double AttribValues, Hlong *ObjectModel3DOut);
LIntExport Herror gen_empty_object_model_3d(Halcon::HTuple *EmptyObjectModel3D);
LIntExport Herror gen_empty_object_model_3d(Hlong *EmptyObjectModel3D);
LIntExport Herror sample_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &SampleDistance, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *SampledObjectModel3D);
LIntExport Herror sample_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Method, const Halcon::HTuple &SampleDistance, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *SampledObjectModel3D);
LIntExport Herror sample_object_model_3d(Hlong ObjectModel3D, const char *Method, double SampleDistance, const char *GenParamName, double GenParamValue, Halcon::HTuple *SampledObjectModel3D);
LIntExport Herror sample_object_model_3d(Hlong ObjectModel3D, const char *Method, double SampleDistance, const char *GenParamName, double GenParamValue, Hlong *SampledObjectModel3D);
LIntExport Herror register_object_model_3d_global(const Halcon::HTuple &ObjectModels3D, const Halcon::HTuple &HomMats3D, const Halcon::HTuple &From, const Halcon::HTuple &To, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *HomMats3DOut, Halcon::HTuple *Scores);
LIntExport Herror register_object_model_3d_pair(const Halcon::HTuple &ObjectModel3D1, const Halcon::HTuple &ObjectModel3D2, const Halcon::HTuple &Method, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *Pose, Halcon::HTuple *Score);
LIntExport Herror register_object_model_3d_pair(Hlong ObjectModel3D1, Hlong ObjectModel3D2, const char *Method, const char *GenParamName, double GenParamValue, Halcon::HTuple *Pose, Halcon::HTuple *Score);
LIntExport Herror gen_object_model_3d_from_points(const Halcon::HTuple &X, const Halcon::HTuple &Y, const Halcon::HTuple &Z, Halcon::HTuple *ObjectModel3D);
LIntExport Herror gen_object_model_3d_from_points(const Halcon::HTuple &X, const Halcon::HTuple &Y, const Halcon::HTuple &Z, Hlong *ObjectModel3D);
LIntExport Herror gen_object_model_3d_from_points(double X, double Y, double Z, Halcon::HTuple *ObjectModel3D);
LIntExport Herror gen_object_model_3d_from_points(double X, double Y, double Z, Hlong *ObjectModel3D);
LIntExport Herror gen_box_object_model_3d(const Halcon::HTuple &Pose, const Halcon::HTuple &LengthX, const Halcon::HTuple &LengthY, const Halcon::HTuple &LengthZ, Halcon::HTuple *ObjectModel3D);
LIntExport Herror gen_box_object_model_3d(const Halcon::HTuple &Pose, const Halcon::HTuple &LengthX, const Halcon::HTuple &LengthY, const Halcon::HTuple &LengthZ, Hlong *ObjectModel3D);
LIntExport Herror gen_plane_object_model_3d(const Halcon::HTuple &Pose, const Halcon::HTuple &XExtent, const Halcon::HTuple &YExtent, Halcon::HTuple *ObjectModel3D);
LIntExport Herror gen_plane_object_model_3d(const Halcon::HTuple &Pose, const Halcon::HTuple &XExtent, const Halcon::HTuple &YExtent, Hlong *ObjectModel3D);
LIntExport Herror gen_sphere_object_model_3d_center(const Halcon::HTuple &X, const Halcon::HTuple &Y, const Halcon::HTuple &Z, const Halcon::HTuple &Radius, Halcon::HTuple *ObjectModel3D);
LIntExport Herror gen_sphere_object_model_3d_center(const Halcon::HTuple &X, const Halcon::HTuple &Y, const Halcon::HTuple &Z, const Halcon::HTuple &Radius, Hlong *ObjectModel3D);
LIntExport Herror gen_sphere_object_model_3d_center(double X, double Y, double Z, double Radius, Halcon::HTuple *ObjectModel3D);
LIntExport Herror gen_sphere_object_model_3d_center(double X, double Y, double Z, double Radius, Hlong *ObjectModel3D);
LIntExport Herror gen_sphere_object_model_3d(const Halcon::HTuple &Pose, const Halcon::HTuple &Radius, Halcon::HTuple *ObjectModel3D);
LIntExport Herror gen_sphere_object_model_3d(const Halcon::HTuple &Pose, const Halcon::HTuple &Radius, Hlong *ObjectModel3D);
LIntExport Herror gen_cylinder_object_model_3d(const Halcon::HTuple &Pose, const Halcon::HTuple &Radius, const Halcon::HTuple &MinExtent, const Halcon::HTuple &MaxExtent, Halcon::HTuple *ObjectModel3D);
LIntExport Herror gen_cylinder_object_model_3d(const Halcon::HTuple &Pose, const Halcon::HTuple &Radius, const Halcon::HTuple &MinExtent, const Halcon::HTuple &MaxExtent, Hlong *ObjectModel3D);
LIntExport Herror smallest_bounding_box_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Type, Halcon::HTuple *Pose, Halcon::HTuple *Length1, Halcon::HTuple *Length2, Halcon::HTuple *Length3);
LIntExport Herror smallest_bounding_box_object_model_3d(Hlong ObjectModel3D, const char *Type, Halcon::HTuple *Pose, Halcon::HTuple *Length1, Halcon::HTuple *Length2, Halcon::HTuple *Length3);
LIntExport Herror smallest_sphere_object_model_3d(const Halcon::HTuple &ObjectModel3D, Halcon::HTuple *CenterPoint, Halcon::HTuple *Radius);
LIntExport Herror smallest_sphere_object_model_3d(Hlong ObjectModel3D, Halcon::HTuple *CenterPoint, Halcon::HTuple *Radius);
LIntExport Herror intersect_plane_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Plane, Halcon::HTuple *ObjectModel3DIntersection);
LIntExport Herror intersect_plane_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Plane, Hlong *ObjectModel3DIntersection);
LIntExport Herror convex_hull_object_model_3d(const Halcon::HTuple &ObjectModel3D, Halcon::HTuple *ObjectModel3DConvexHull);
LIntExport Herror convex_hull_object_model_3d(const Halcon::HTuple &ObjectModel3D, Hlong *ObjectModel3DConvexHull);
LIntExport Herror convex_hull_object_model_3d(Hlong ObjectModel3D, Halcon::HTuple *ObjectModel3DConvexHull);
LIntExport Herror convex_hull_object_model_3d(Hlong ObjectModel3D, Hlong *ObjectModel3DConvexHull);
LIntExport Herror select_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Feature, const Halcon::HTuple &Operation, const Halcon::HTuple &MinValue, const Halcon::HTuple &MaxValue, Halcon::HTuple *ObjectModel3DSelected);
LIntExport Herror select_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Feature, const Halcon::HTuple &Operation, const Halcon::HTuple &MinValue, const Halcon::HTuple &MaxValue, Hlong *ObjectModel3DSelected);
LIntExport Herror select_object_model_3d(Hlong ObjectModel3D, const char *Feature, const char *Operation, double MinValue, double MaxValue, Halcon::HTuple *ObjectModel3DSelected);
LIntExport Herror select_object_model_3d(Hlong ObjectModel3D, const char *Feature, const char *Operation, double MinValue, double MaxValue, Hlong *ObjectModel3DSelected);
LIntExport Herror area_object_model_3d(const Halcon::HTuple &ObjectModel3D, Halcon::HTuple *Area);
LIntExport Herror area_object_model_3d(const Halcon::HTuple &ObjectModel3D, double *Area);
LIntExport Herror area_object_model_3d(Hlong ObjectModel3D, Halcon::HTuple *Area);
LIntExport Herror area_object_model_3d(Hlong ObjectModel3D, double *Area);
LIntExport Herror max_diameter_object_model_3d(const Halcon::HTuple &ObjectModel3D, Halcon::HTuple *Diameter);
LIntExport Herror max_diameter_object_model_3d(const Halcon::HTuple &ObjectModel3D, double *Diameter);
LIntExport Herror max_diameter_object_model_3d(Hlong ObjectModel3D, Halcon::HTuple *Diameter);
LIntExport Herror max_diameter_object_model_3d(Hlong ObjectModel3D, double *Diameter);
LIntExport Herror moments_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &MomentsToCalculate, Halcon::HTuple *Moments);
LIntExport Herror moments_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &MomentsToCalculate, double *Moments);
LIntExport Herror moments_object_model_3d(Hlong ObjectModel3D, const char *MomentsToCalculate, Halcon::HTuple *Moments);
LIntExport Herror moments_object_model_3d(Hlong ObjectModel3D, const char *MomentsToCalculate, double *Moments);
LIntExport Herror volume_object_model_3d_relative_to_plane(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Plane, const Halcon::HTuple &Mode, const Halcon::HTuple &UseFaceOrientation, Halcon::HTuple *Volume);
LIntExport Herror volume_object_model_3d_relative_to_plane(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Plane, const Halcon::HTuple &Mode, const Halcon::HTuple &UseFaceOrientation, double *Volume);
LIntExport Herror reduce_object_model_3d_by_view(const Halcon::Hobject &Region, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &CamParam, const Halcon::HTuple &Pose, Halcon::HTuple *ObjectModel3DReduced);
LIntExport Herror reduce_object_model_3d_by_view(const Halcon::Hobject &Region, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &CamParam, const Halcon::HTuple &Pose, Hlong *ObjectModel3DReduced);
LIntExport Herror connection_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Feature, const Halcon::HTuple &Value, Halcon::HTuple *ObjectModel3DConnected);
LIntExport Herror connection_object_model_3d(Hlong ObjectModel3D, const char *Feature, double Value, Halcon::HTuple *ObjectModel3DConnected);
LIntExport Herror select_points_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Attrib, const Halcon::HTuple &MinValue, const Halcon::HTuple &MaxValue, Halcon::HTuple *ObjectModel3DThresholded);
LIntExport Herror select_points_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Attrib, const Halcon::HTuple &MinValue, const Halcon::HTuple &MaxValue, Hlong *ObjectModel3DThresholded);
LIntExport Herror select_points_object_model_3d(Hlong ObjectModel3D, const char *Attrib, double MinValue, double MaxValue, Halcon::HTuple *ObjectModel3DThresholded);
LIntExport Herror select_points_object_model_3d(Hlong ObjectModel3D, const char *Attrib, double MinValue, double MaxValue, Hlong *ObjectModel3DThresholded);
LIntExport Herror get_disp_object_model_3d_info(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Information, Halcon::HTuple *Value);
LIntExport Herror get_disp_object_model_3d_info(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Information, Hlong *Value);
LIntExport Herror get_disp_object_model_3d_info(Hlong WindowHandle, double Row, double Column, const char *Information, Halcon::HTuple *Value);
LIntExport Herror get_disp_object_model_3d_info(Hlong WindowHandle, double Row, double Column, const char *Information, Hlong *Value);
LIntExport Herror render_object_model_3d(Halcon::Hobject *Image, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &CamParam, const Halcon::HTuple &Pose, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror disp_object_model_3d(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &CamParam, const Halcon::HTuple &Pose, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror copy_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Attributes, Halcon::HTuple *CopiedObjectModel3D);
LIntExport Herror copy_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Attributes, Hlong *CopiedObjectModel3D);
LIntExport Herror prepare_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Purpose, const Halcon::HTuple &OverwriteData, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror object_model_3d_to_xyz(Halcon::Hobject *X, Halcon::Hobject *Y, Halcon::Hobject *Z, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Type, const Halcon::HTuple &CamParam, const Halcon::HTuple &Pose);
LIntExport Herror xyz_to_object_model_3d(const Halcon::Hobject &X, const Halcon::Hobject &Y, const Halcon::Hobject &Z, Halcon::HTuple *ObjectModel3D);
LIntExport Herror xyz_to_object_model_3d(const Halcon::Hobject &X, const Halcon::Hobject &Y, const Halcon::Hobject &Z, Hlong *ObjectModel3D);
LIntExport Herror get_object_model_3d_params(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_object_model_3d_params(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &ParamName, char *ParamValue);
LIntExport Herror get_object_model_3d_params(Hlong ObjectModel3D, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_object_model_3d_params(Hlong ObjectModel3D, const char *ParamName, char *ParamValue);
LIntExport Herror project_object_model_3d(Halcon::Hobject *ModelContours, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &CamParam, const Halcon::HTuple &Pose, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror rigid_trans_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Pose, Halcon::HTuple *ObjectModel3DRigidTrans);
LIntExport Herror rigid_trans_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Pose, Hlong *ObjectModel3DRigidTrans);
LIntExport Herror projective_trans_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &HomMat3D, Halcon::HTuple *ObjectModel3DProjectiveTrans);
LIntExport Herror projective_trans_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &HomMat3D, Hlong *ObjectModel3DProjectiveTrans);
LIntExport Herror affine_trans_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &HomMat3D, Halcon::HTuple *ObjectModel3DAffineTrans);
LIntExport Herror affine_trans_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &HomMat3D, Hlong *ObjectModel3DAffineTrans);
LIntExport Herror clear_all_object_model_3d(void);
LIntExport Herror clear_object_model_3d(const Halcon::HTuple &ObjectModel3D);
LIntExport Herror clear_object_model_3d(Hlong ObjectModel3D);
LIntExport Herror serialize_object_model_3d(const Halcon::HTuple &ObjectModel3D, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_object_model_3d(const Halcon::HTuple &ObjectModel3D, Hlong *SerializedItemHandle);
LIntExport Herror serialize_object_model_3d(Hlong ObjectModel3D, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_object_model_3d(Hlong ObjectModel3D, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_object_model_3d(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ObjectModel3D);
LIntExport Herror deserialize_object_model_3d(const Halcon::HTuple &SerializedItemHandle, Hlong *ObjectModel3D);
LIntExport Herror deserialize_object_model_3d(Hlong SerializedItemHandle, Halcon::HTuple *ObjectModel3D);
LIntExport Herror deserialize_object_model_3d(Hlong SerializedItemHandle, Hlong *ObjectModel3D);
LIntExport Herror write_object_model_3d(const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &FileType, const Halcon::HTuple &FileName, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror read_object_model_3d(const Halcon::HTuple &FileName, const Halcon::HTuple &Scale, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *ObjectModel3D, Halcon::HTuple *Status);
LIntExport Herror read_object_model_3d(const Halcon::HTuple &FileName, const Halcon::HTuple &Scale, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *ObjectModel3D, char *Status);
LIntExport Herror read_object_model_3d_dxf(const Halcon::HTuple &FileName, const Halcon::HTuple &Scale, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *ObjectModel3D, Halcon::HTuple *DxfStatus);
LIntExport Herror read_object_model_3d_dxf(const Halcon::HTuple &FileName, const Halcon::HTuple &Scale, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *ObjectModel3D, char *DxfStatus);
LIntExport Herror read_kalman(const Halcon::HTuple &FileName, Halcon::HTuple *Dimension, Halcon::HTuple *Model, Halcon::HTuple *Measurement, Halcon::HTuple *Prediction);
LIntExport Herror read_kalman(const char *FileName, Halcon::HTuple *Dimension, Halcon::HTuple *Model, Halcon::HTuple *Measurement, Halcon::HTuple *Prediction);
LIntExport Herror update_kalman(const Halcon::HTuple &FileName, const Halcon::HTuple &DimensionIn, const Halcon::HTuple &ModelIn, const Halcon::HTuple &MeasurementIn, Halcon::HTuple *DimensionOut, Halcon::HTuple *ModelOut, Halcon::HTuple *MeasurementOut);
LIntExport Herror filter_kalman(const Halcon::HTuple &Dimension, const Halcon::HTuple &Model, const Halcon::HTuple &Measurement, const Halcon::HTuple &PredictionIn, Halcon::HTuple *PredictionOut, Halcon::HTuple *Estimate);
LIntExport Herror query_operator_info(Halcon::HTuple *Slots);
LIntExport Herror query_param_info(Halcon::HTuple *Slots);
LIntExport Herror get_operator_name(const Halcon::HTuple &Pattern, Halcon::HTuple *OperatorNames);
LIntExport Herror get_operator_name(const char *Pattern, Halcon::HTuple *OperatorNames);
LIntExport Herror get_param_types(const Halcon::HTuple &OperatorName, Halcon::HTuple *InpCtrlParType, Halcon::HTuple *OutpCtrlParType);
LIntExport Herror get_param_types(const char *OperatorName, Halcon::HTuple *InpCtrlParType, Halcon::HTuple *OutpCtrlParType);
LIntExport Herror get_param_num(const Halcon::HTuple &OperatorName, Halcon::HTuple *CName, Halcon::HTuple *InpObjPar, Halcon::HTuple *OutpObjPar, Halcon::HTuple *InpCtrlPar, Halcon::HTuple *OutpCtrlPar, Halcon::HTuple *Type);
LIntExport Herror get_param_num(const Halcon::HTuple &OperatorName, char *CName, Hlong *InpObjPar, Hlong *OutpObjPar, Hlong *InpCtrlPar, Hlong *OutpCtrlPar, char *Type);
LIntExport Herror get_param_num(const char *OperatorName, Halcon::HTuple *CName, Halcon::HTuple *InpObjPar, Halcon::HTuple *OutpObjPar, Halcon::HTuple *InpCtrlPar, Halcon::HTuple *OutpCtrlPar, Halcon::HTuple *Type);
LIntExport Herror get_param_num(const char *OperatorName, char *CName, Hlong *InpObjPar, Hlong *OutpObjPar, Hlong *InpCtrlPar, Hlong *OutpCtrlPar, char *Type);
LIntExport Herror get_param_names(const Halcon::HTuple &OperatorName, Halcon::HTuple *InpObjPar, Halcon::HTuple *OutpObjPar, Halcon::HTuple *InpCtrlPar, Halcon::HTuple *OutpCtrlPar);
LIntExport Herror get_param_names(const char *OperatorName, Halcon::HTuple *InpObjPar, Halcon::HTuple *OutpObjPar, Halcon::HTuple *InpCtrlPar, Halcon::HTuple *OutpCtrlPar);
LIntExport Herror get_operator_info(const Halcon::HTuple &OperatorName, const Halcon::HTuple &Slot, Halcon::HTuple *Information);
LIntExport Herror get_operator_info(const Halcon::HTuple &OperatorName, const Halcon::HTuple &Slot, char *Information);
LIntExport Herror get_operator_info(const char *OperatorName, const char *Slot, Halcon::HTuple *Information);
LIntExport Herror get_operator_info(const char *OperatorName, const char *Slot, char *Information);
LIntExport Herror get_param_info(const Halcon::HTuple &OperatorName, const Halcon::HTuple &ParamName, const Halcon::HTuple &Slot, Halcon::HTuple *Information);
LIntExport Herror get_param_info(const Halcon::HTuple &OperatorName, const Halcon::HTuple &ParamName, const Halcon::HTuple &Slot, char *Information);
LIntExport Herror get_param_info(const char *OperatorName, const char *ParamName, const char *Slot, Halcon::HTuple *Information);
LIntExport Herror get_param_info(const char *OperatorName, const char *ParamName, const char *Slot, char *Information);
LIntExport Herror search_operator(const Halcon::HTuple &Keyword, Halcon::HTuple *OperatorNames);
LIntExport Herror search_operator(const char *Keyword, Halcon::HTuple *OperatorNames);
LIntExport Herror get_keywords(const Halcon::HTuple &OperatorName, Halcon::HTuple *Keywords);
LIntExport Herror get_keywords(const char *OperatorName, Halcon::HTuple *Keywords);
LIntExport Herror get_chapter_info(const Halcon::HTuple &Chapter, Halcon::HTuple *Info);
LIntExport Herror get_chapter_info(const char *Chapter, Halcon::HTuple *Info);
LIntExport Herror channels_to_image(const Halcon::Hobject &Images, Halcon::Hobject *MultiChannelImage);
LIntExport Herror image_to_channels(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Images);
LIntExport Herror compose7(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::Hobject &Image3, const Halcon::Hobject &Image4, const Halcon::Hobject &Image5, const Halcon::Hobject &Image6, const Halcon::Hobject &Image7, Halcon::Hobject *MultiChannelImage);
LIntExport Herror compose6(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::Hobject &Image3, const Halcon::Hobject &Image4, const Halcon::Hobject &Image5, const Halcon::Hobject &Image6, Halcon::Hobject *MultiChannelImage);
LIntExport Herror compose5(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::Hobject &Image3, const Halcon::Hobject &Image4, const Halcon::Hobject &Image5, Halcon::Hobject *MultiChannelImage);
LIntExport Herror compose4(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::Hobject &Image3, const Halcon::Hobject &Image4, Halcon::Hobject *MultiChannelImage);
LIntExport Herror compose3(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::Hobject &Image3, Halcon::Hobject *MultiChannelImage);
LIntExport Herror compose2(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *MultiChannelImage);
LIntExport Herror decompose7(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Image1, Halcon::Hobject *Image2, Halcon::Hobject *Image3, Halcon::Hobject *Image4, Halcon::Hobject *Image5, Halcon::Hobject *Image6, Halcon::Hobject *Image7);
LIntExport Herror decompose6(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Image1, Halcon::Hobject *Image2, Halcon::Hobject *Image3, Halcon::Hobject *Image4, Halcon::Hobject *Image5, Halcon::Hobject *Image6);
LIntExport Herror decompose5(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Image1, Halcon::Hobject *Image2, Halcon::Hobject *Image3, Halcon::Hobject *Image4, Halcon::Hobject *Image5);
LIntExport Herror decompose4(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Image1, Halcon::Hobject *Image2, Halcon::Hobject *Image3, Halcon::Hobject *Image4);
LIntExport Herror decompose3(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Image1, Halcon::Hobject *Image2, Halcon::Hobject *Image3);
LIntExport Herror decompose2(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Image1, Halcon::Hobject *Image2);
LIntExport Herror count_channels(const Halcon::Hobject &MultiChannelImage, Halcon::HTuple *Channels);
LIntExport Herror count_channels(const Halcon::Hobject &MultiChannelImage, Hlong *Channels);
LIntExport Herror append_channel(const Halcon::Hobject &MultiChannelImage, const Halcon::Hobject &Image, Halcon::Hobject *ImageExtended);
LIntExport Herror access_channel(const Halcon::Hobject &MultiChannelImage, Halcon::Hobject *Image, const Halcon::HTuple &Channel);
LIntExport Herror access_channel(const Halcon::Hobject &MultiChannelImage,Halcon::Hobject *Image, Hlong Channel);
LIntExport Herror tile_images_offset(const Halcon::Hobject &Images, Halcon::Hobject *TiledImage, const Halcon::HTuple &OffsetRow, const Halcon::HTuple &OffsetCol, const Halcon::HTuple &Row1, const Halcon::HTuple &Col1, const Halcon::HTuple &Row2, const Halcon::HTuple &Col2, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror tile_images_offset(const Halcon::Hobject &Images,Halcon::Hobject *TiledImage, Hlong OffsetRow, Hlong OffsetCol, Hlong Row1, Hlong Col1, Hlong Row2, Hlong Col2, Hlong Width, Hlong Height);
LIntExport Herror tile_images(const Halcon::Hobject &Images, Halcon::Hobject *TiledImage, const Halcon::HTuple &NumColumns, const Halcon::HTuple &TileOrder);
LIntExport Herror tile_images(const Halcon::Hobject &Images,Halcon::Hobject *TiledImage, Hlong NumColumns, const char *TileOrder);
LIntExport Herror tile_channels(const Halcon::Hobject &Image, Halcon::Hobject *TiledImage, const Halcon::HTuple &NumColumns, const Halcon::HTuple &TileOrder);
LIntExport Herror tile_channels(const Halcon::Hobject &Image,Halcon::Hobject *TiledImage, Hlong NumColumns, const char *TileOrder);
LIntExport Herror crop_domain(const Halcon::Hobject &Image, Halcon::Hobject *ImagePart);
LIntExport Herror crop_rectangle1(const Halcon::Hobject &Image, Halcon::Hobject *ImagePart, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2);
LIntExport Herror crop_rectangle1(const Halcon::Hobject &Image,Halcon::Hobject *ImagePart, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror crop_part(const Halcon::Hobject &Image, Halcon::Hobject *ImagePart, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror crop_part(const Halcon::Hobject &Image,Halcon::Hobject *ImagePart, Hlong Row, Hlong Column, Hlong Width, Hlong Height);
LIntExport Herror change_format(const Halcon::Hobject &Image, Halcon::Hobject *ImagePart, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror change_format(const Halcon::Hobject &Image,Halcon::Hobject *ImagePart, Hlong Width, Hlong Height);
LIntExport Herror change_domain(const Halcon::Hobject &Image, const Halcon::Hobject &NewDomain, Halcon::Hobject *ImageNew);
LIntExport Herror add_channels(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::Hobject *GrayRegions);
LIntExport Herror rectangle1_domain(const Halcon::Hobject &Image, Halcon::Hobject *ImageReduced, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2);
LIntExport Herror rectangle1_domain(const Halcon::Hobject &Image,Halcon::Hobject *ImageReduced, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror reduce_domain(const Halcon::Hobject &Image, const Halcon::Hobject &Region, Halcon::Hobject *ImageReduced);
LIntExport Herror full_domain(const Halcon::Hobject &Image, Halcon::Hobject *ImageFull);
LIntExport Herror get_domain(const Halcon::Hobject &Image, Halcon::Hobject *Domain);
LIntExport Herror hough_circles(const Halcon::Hobject &RegionIn, Halcon::Hobject *RegionOut, const Halcon::HTuple &Radius, const Halcon::HTuple &Percent, const Halcon::HTuple &Mode);
LIntExport Herror hough_circles(const Halcon::Hobject &RegionIn,Halcon::Hobject *RegionOut, Hlong Radius, Hlong Percent, Hlong Mode);
LIntExport Herror hough_circle_trans(const Halcon::Hobject &Region, Halcon::Hobject *HoughImage, const Halcon::HTuple &Radius);
LIntExport Herror hough_circle_trans(const Halcon::Hobject &Region,Halcon::Hobject *HoughImage, Hlong Radius);
LIntExport Herror hough_lines_dir(const Halcon::Hobject &ImageDir, Halcon::Hobject *HoughImage, Halcon::Hobject *Lines, const Halcon::HTuple &DirectionUncertainty, const Halcon::HTuple &AngleResolution, const Halcon::HTuple &Smoothing, const Halcon::HTuple &FilterSize, const Halcon::HTuple &Threshold, const Halcon::HTuple &AngleGap, const Halcon::HTuple &DistGap, const Halcon::HTuple &GenLines, Halcon::HTuple *Angle, Halcon::HTuple *Dist);
LIntExport Herror hough_lines_dir(const Halcon::Hobject &ImageDir,Halcon::Hobject *HoughImage,Halcon::Hobject *Lines, Hlong DirectionUncertainty, Hlong AngleResolution, const char *Smoothing, Hlong FilterSize, Hlong Threshold, Hlong AngleGap, Hlong DistGap, const char *GenLines, Halcon::HTuple *Angle, Halcon::HTuple *Dist);
LIntExport Herror hough_line_trans_dir(const Halcon::Hobject &ImageDir, Halcon::Hobject *HoughImage, const Halcon::HTuple &DirectionUncertainty, const Halcon::HTuple &AngleResolution);
LIntExport Herror hough_line_trans_dir(const Halcon::Hobject &ImageDir,Halcon::Hobject *HoughImage, Hlong DirectionUncertainty, Hlong AngleResolution);
LIntExport Herror hough_lines(const Halcon::Hobject &RegionIn, const Halcon::HTuple &AngleResolution, const Halcon::HTuple &Threshold, const Halcon::HTuple &AngleGap, const Halcon::HTuple &DistGap, Halcon::HTuple *Angle, Halcon::HTuple *Dist);
LIntExport Herror hough_lines(const Halcon::Hobject &RegionIn, Hlong AngleResolution, Hlong Threshold, Hlong AngleGap, Hlong DistGap, Halcon::HTuple *Angle, Halcon::HTuple *Dist);
LIntExport Herror hough_line_trans(const Halcon::Hobject &Region, Halcon::Hobject *HoughImage, const Halcon::HTuple &AngleResolution);
LIntExport Herror hough_line_trans(const Halcon::Hobject &Region,Halcon::Hobject *HoughImage, Hlong AngleResolution);
LIntExport Herror select_matching_lines(const Halcon::Hobject &RegionIn, Halcon::Hobject *RegionLines, const Halcon::HTuple &AngleIn, const Halcon::HTuple &DistIn, const Halcon::HTuple &LineWidth, const Halcon::HTuple &Thresh, Halcon::HTuple *AngleOut, Halcon::HTuple *DistOut);
LIntExport Herror select_matching_lines(const Halcon::Hobject &RegionIn, Halcon::Hobject *RegionLines, const Halcon::HTuple &AngleIn, const Halcon::HTuple &DistIn, const Halcon::HTuple &LineWidth, const Halcon::HTuple &Thresh, double *AngleOut, double *DistOut);
LIntExport Herror select_matching_lines(const Halcon::Hobject &RegionIn,Halcon::Hobject *RegionLines, double AngleIn, double DistIn, Hlong LineWidth, Hlong Thresh, Halcon::HTuple *AngleOut, Halcon::HTuple *DistOut);
LIntExport Herror select_matching_lines(const Halcon::Hobject &RegionIn, Halcon::Hobject *RegionLines, double AngleIn, double DistIn, Hlong LineWidth, Hlong Thresh, double *AngleOut, double *DistOut);
LIntExport Herror find_rectification_grid(const Halcon::Hobject &Image, Halcon::Hobject *GridRegion, const Halcon::HTuple &MinContrast, const Halcon::HTuple &Radius);
LIntExport Herror find_rectification_grid(const Halcon::Hobject &Image,Halcon::Hobject *GridRegion, double MinContrast, double Radius);
LIntExport Herror create_rectification_grid(const Halcon::HTuple &Width, const Halcon::HTuple &NumSquares, const Halcon::HTuple &GridFile);
LIntExport Herror create_rectification_grid(double Width, Hlong NumSquares, const char *GridFile);
LIntExport Herror connect_grid_points(const Halcon::Hobject &Image, Halcon::Hobject *ConnectingLines, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Sigma, const Halcon::HTuple &MaxDist);
LIntExport Herror gen_grid_rectification_map(const Halcon::Hobject &Image, const Halcon::Hobject &ConnectingLines, Halcon::Hobject *Map, Halcon::Hobject *Meshes, const Halcon::HTuple &GridSpacing, const Halcon::HTuple &Rotation, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &MapType);
LIntExport Herror gen_arbitrary_distortion_map(Halcon::Hobject *Map, const Halcon::HTuple &GridSpacing, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &GridWidth, const Halcon::HTuple &ImageWidth, const Halcon::HTuple &ImageHeight, const Halcon::HTuple &MapType);
LIntExport Herror get_window_background_image(Halcon::Hobject *BackgroundImage, const Halcon::HTuple &WindowHandle);
LIntExport Herror get_window_background_image(Halcon::Hobject *BackgroundImage, Hlong WindowHandle);
LIntExport Herror set_drawing_object_callback(const Halcon::HTuple &DrawID, const Halcon::HTuple &DrawObjectEvent, const Halcon::HTuple &CallbackFunction);
LIntExport Herror set_drawing_object_callback(Hlong DrawID, const char *DrawObjectEvent, Hlong CallbackFunction);
LIntExport Herror detach_background_from_window(const Halcon::HTuple &WindowHandle);
LIntExport Herror detach_background_from_window(Hlong WindowHandle);
LIntExport Herror attach_background_to_window(const Halcon::Hobject &Image, const Halcon::HTuple &WindowHandle);
LIntExport Herror attach_background_to_window(const Halcon::Hobject &Image, Hlong WindowHandle);
LIntExport Herror detach_drawing_object_from_window(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &DrawID);
LIntExport Herror detach_drawing_object_from_window(Hlong WindowHandle, Hlong DrawID);
LIntExport Herror attach_drawing_object_to_window(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &DrawID);
LIntExport Herror attach_drawing_object_to_window(Hlong WindowHandle, Hlong DrawID);
LIntExport Herror update_window_pose(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &LastRow, const Halcon::HTuple &LastCol, const Halcon::HTuple &CurrentRow, const Halcon::HTuple &CurrentCol, const Halcon::HTuple &Mode);
LIntExport Herror update_window_pose(Hlong WindowHandle, double LastRow, double LastCol, double CurrentRow, double CurrentCol, const char *Mode);
LIntExport Herror unproject_coordinates(const Halcon::Hobject &Image, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *ImageRow, Halcon::HTuple *ImageColumn, Halcon::HTuple *Height);
LIntExport Herror unproject_coordinates(const Halcon::Hobject &Image, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Hlong *ImageRow, Hlong *ImageColumn, Hlong *Height);
LIntExport Herror unproject_coordinates(const Halcon::Hobject &Image, Hlong WindowHandle, double Row, double Column, Halcon::HTuple *ImageRow, Halcon::HTuple *ImageColumn, Halcon::HTuple *Height);
LIntExport Herror unproject_coordinates(const Halcon::Hobject &Image, Hlong WindowHandle, double Row, double Column, Hlong *ImageRow, Hlong *ImageColumn, Hlong *Height);
LIntExport Herror get_os_window_handle(const Halcon::HTuple &WindowHandle, Halcon::HTuple *OSWindowHandle, Halcon::HTuple *OSDisplayHandle);
LIntExport Herror get_os_window_handle(const Halcon::HTuple &WindowHandle, Hlong *OSWindowHandle, Hlong *OSDisplayHandle);
LIntExport Herror get_os_window_handle(Hlong WindowHandle, Halcon::HTuple *OSWindowHandle, Halcon::HTuple *OSDisplayHandle);
LIntExport Herror get_os_window_handle(Hlong WindowHandle, Hlong *OSWindowHandle, Hlong *OSDisplayHandle);
LIntExport Herror set_window_dc(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &WINHDC);
LIntExport Herror set_window_dc(Hlong WindowHandle, Hlong WINHDC);
LIntExport Herror new_extern_window(const Halcon::HTuple &WINHWnd, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height, Halcon::HTuple *WindowHandle);
LIntExport Herror new_extern_window(const Halcon::HTuple &WINHWnd, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height, Hlong *WindowHandle);
LIntExport Herror new_extern_window(Hlong WINHWnd, Hlong Row, Hlong Column, Hlong Width, Hlong Height, Halcon::HTuple *WindowHandle);
LIntExport Herror new_extern_window(Hlong WINHWnd, Hlong Row, Hlong Column, Hlong Width, Hlong Height, Hlong *WindowHandle);
LIntExport Herror slide_image(const Halcon::HTuple &WindowHandleSource1, const Halcon::HTuple &WindowHandleSource2, const Halcon::HTuple &WindowHandle);
LIntExport Herror slide_image(Hlong WindowHandleSource1, Hlong WindowHandleSource2, Hlong WindowHandle);
LIntExport Herror set_window_type(const Halcon::HTuple &WindowType);
LIntExport Herror set_window_type(const char *WindowType);
LIntExport Herror set_window_extents(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror set_window_extents(Hlong WindowHandle, Hlong Row, Hlong Column, Hlong Width, Hlong Height);
LIntExport Herror get_window_attr(const Halcon::HTuple &AttributeName, Halcon::HTuple *AttributeValue);
LIntExport Herror get_window_attr(const Halcon::HTuple &AttributeName, char *AttributeValue);
LIntExport Herror get_window_attr(const char *AttributeName, Halcon::HTuple *AttributeValue);
LIntExport Herror get_window_attr(const char *AttributeName, char *AttributeValue);
LIntExport Herror set_window_attr(const Halcon::HTuple &AttributeName, const Halcon::HTuple &AttributeValue);
LIntExport Herror query_window_type(Halcon::HTuple *WindowTypes);
LIntExport Herror open_window(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &FatherWindow, const Halcon::HTuple &Mode, const Halcon::HTuple &Machine, Halcon::HTuple *WindowHandle);
LIntExport Herror open_window(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &FatherWindow, const Halcon::HTuple &Mode, const Halcon::HTuple &Machine, Hlong *WindowHandle);
LIntExport Herror open_window(Hlong Row, Hlong Column, Hlong Width, Hlong Height, Hlong FatherWindow, const char *Mode, const char *Machine, Halcon::HTuple *WindowHandle);
LIntExport Herror open_window(Hlong Row, Hlong Column, Hlong Width, Hlong Height, Hlong FatherWindow, const char *Mode, const char *Machine, Hlong *WindowHandle);
LIntExport Herror open_textwindow(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &BorderWidth, const Halcon::HTuple &BorderColor, const Halcon::HTuple &BackgroundColor, const Halcon::HTuple &FatherWindow, const Halcon::HTuple &Mode, const Halcon::HTuple &Machine, Halcon::HTuple *WindowHandle);
LIntExport Herror open_textwindow(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &BorderWidth, const Halcon::HTuple &BorderColor, const Halcon::HTuple &BackgroundColor, const Halcon::HTuple &FatherWindow, const Halcon::HTuple &Mode, const Halcon::HTuple &Machine, Hlong *WindowHandle);
LIntExport Herror open_textwindow(Hlong Row, Hlong Column, Hlong Width, Hlong Height, Hlong BorderWidth, const char *BorderColor, const char *BackgroundColor, Hlong FatherWindow, const char *Mode, const char *Machine, Halcon::HTuple *WindowHandle);
LIntExport Herror open_textwindow(Hlong Row, Hlong Column, Hlong Width, Hlong Height, Hlong BorderWidth, const char *BorderColor, const char *BackgroundColor, Hlong FatherWindow, const char *Mode, const char *Machine, Hlong *WindowHandle);
LIntExport Herror move_rectangle(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, const Halcon::HTuple &DestRow, const Halcon::HTuple &DestColumn);
LIntExport Herror move_rectangle(Hlong WindowHandle, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2, Hlong DestRow, Hlong DestColumn);
LIntExport Herror get_window_type(const Halcon::HTuple &WindowHandle, Halcon::HTuple *WindowType);
LIntExport Herror get_window_type(const Halcon::HTuple &WindowHandle, char *WindowType);
LIntExport Herror get_window_type(Hlong WindowHandle, Halcon::HTuple *WindowType);
LIntExport Herror get_window_type(Hlong WindowHandle, char *WindowType);
LIntExport Herror get_window_pointer3(const Halcon::HTuple &WindowHandle, Halcon::HTuple *ImageRed, Halcon::HTuple *ImageGreen, Halcon::HTuple *ImageBlue, Halcon::HTuple *Width, Halcon::HTuple *Height);
LIntExport Herror get_window_pointer3(const Halcon::HTuple &WindowHandle, Hlong *ImageRed, Hlong *ImageGreen, Hlong *ImageBlue, Hlong *Width, Hlong *Height);
LIntExport Herror get_window_pointer3(Hlong WindowHandle, Halcon::HTuple *ImageRed, Halcon::HTuple *ImageGreen, Halcon::HTuple *ImageBlue, Halcon::HTuple *Width, Halcon::HTuple *Height);
LIntExport Herror get_window_pointer3(Hlong WindowHandle, Hlong *ImageRed, Hlong *ImageGreen, Hlong *ImageBlue, Hlong *Width, Hlong *Height);
LIntExport Herror get_window_extents(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Width, Halcon::HTuple *Height);
LIntExport Herror get_window_extents(const Halcon::HTuple &WindowHandle, Hlong *Row, Hlong *Column, Hlong *Width, Hlong *Height);
LIntExport Herror get_window_extents(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Width, Halcon::HTuple *Height);
LIntExport Herror get_window_extents(Hlong WindowHandle, Hlong *Row, Hlong *Column, Hlong *Width, Hlong *Height);
LIntExport Herror dump_window_image(Halcon::Hobject *Image, const Halcon::HTuple &WindowHandle);
LIntExport Herror dump_window_image(Halcon::Hobject *Image, Hlong WindowHandle);
LIntExport Herror dump_window(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Device, const Halcon::HTuple &FileName);
LIntExport Herror copy_rectangle(const Halcon::HTuple &WindowHandleSource, const Halcon::HTuple &WindowHandleDestination, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, const Halcon::HTuple &DestRow, const Halcon::HTuple &DestColumn);
LIntExport Herror copy_rectangle(Hlong WindowHandleSource, Hlong WindowHandleDestination, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2, Hlong DestRow, Hlong DestColumn);
LIntExport Herror close_window(const Halcon::HTuple &WindowHandle);
LIntExport Herror close_window(Hlong WindowHandle);
LIntExport Herror clear_window(const Halcon::HTuple &WindowHandle);
LIntExport Herror clear_window(Hlong WindowHandle);
LIntExport Herror clear_rectangle(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2);
LIntExport Herror clear_rectangle(Hlong WindowHandle, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror write_string(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &String);
LIntExport Herror set_tshape(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &TextCursor);
LIntExport Herror set_tshape(Hlong WindowHandle, const char *TextCursor);
LIntExport Herror set_tposition(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror set_tposition(Hlong WindowHandle, Hlong Row, Hlong Column);
LIntExport Herror read_string(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &InString, const Halcon::HTuple &Length, Halcon::HTuple *OutString);
LIntExport Herror read_string(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &InString, const Halcon::HTuple &Length, char *OutString);
LIntExport Herror read_string(Hlong WindowHandle, const char *InString, Hlong Length, Halcon::HTuple *OutString);
LIntExport Herror read_string(Hlong WindowHandle, const char *InString, Hlong Length, char *OutString);
LIntExport Herror read_char(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Char, Halcon::HTuple *Code);
LIntExport Herror read_char(const Halcon::HTuple &WindowHandle, char *Char, char *Code);
LIntExport Herror read_char(Hlong WindowHandle, Halcon::HTuple *Char, Halcon::HTuple *Code);
LIntExport Herror read_char(Hlong WindowHandle, char *Char, char *Code);
LIntExport Herror new_line(const Halcon::HTuple &WindowHandle);
LIntExport Herror new_line(Hlong WindowHandle);
LIntExport Herror get_tshape(const Halcon::HTuple &WindowHandle, Halcon::HTuple *TextCursor);
LIntExport Herror get_tshape(const Halcon::HTuple &WindowHandle, char *TextCursor);
LIntExport Herror get_tshape(Hlong WindowHandle, Halcon::HTuple *TextCursor);
LIntExport Herror get_tshape(Hlong WindowHandle, char *TextCursor);
LIntExport Herror get_tposition(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_tposition(const Halcon::HTuple &WindowHandle, Hlong *Row, Hlong *Column);
LIntExport Herror get_tposition(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror get_tposition(Hlong WindowHandle, Hlong *Row, Hlong *Column);
LIntExport Herror get_font_extents(const Halcon::HTuple &WindowHandle, Halcon::HTuple *MaxAscent, Halcon::HTuple *MaxDescent, Halcon::HTuple *MaxWidth, Halcon::HTuple *MaxHeight);
LIntExport Herror get_font_extents(const Halcon::HTuple &WindowHandle, Hlong *MaxAscent, Hlong *MaxDescent, Hlong *MaxWidth, Hlong *MaxHeight);
LIntExport Herror get_font_extents(Hlong WindowHandle, Halcon::HTuple *MaxAscent, Halcon::HTuple *MaxDescent, Halcon::HTuple *MaxWidth, Halcon::HTuple *MaxHeight);
LIntExport Herror get_font_extents(Hlong WindowHandle, Hlong *MaxAscent, Hlong *MaxDescent, Hlong *MaxWidth, Hlong *MaxHeight);
LIntExport Herror get_string_extents(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Values, Halcon::HTuple *Ascent, Halcon::HTuple *Descent, Halcon::HTuple *Width, Halcon::HTuple *Height);
LIntExport Herror get_string_extents(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Values, Hlong *Ascent, Hlong *Descent, Hlong *Width, Hlong *Height);
LIntExport Herror query_font(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Font);
LIntExport Herror query_font(Hlong WindowHandle, Halcon::HTuple *Font);
LIntExport Herror query_tshape(const Halcon::HTuple &WindowHandle, Halcon::HTuple *TextCursor);
LIntExport Herror query_tshape(Hlong WindowHandle, Halcon::HTuple *TextCursor);
LIntExport Herror set_font(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Font);
LIntExport Herror set_font(Hlong WindowHandle, const char *Font);
LIntExport Herror get_font(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Font);
LIntExport Herror get_font(const Halcon::HTuple &WindowHandle, char *Font);
LIntExport Herror get_font(Hlong WindowHandle, Halcon::HTuple *Font);
LIntExport Herror get_font(Hlong WindowHandle, char *Font);
LIntExport Herror get_display_scene_3d_info(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Scene3D, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Information, Halcon::HTuple *Value);
LIntExport Herror get_display_scene_3d_info(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Scene3D, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Information, Hlong *Value);
LIntExport Herror get_display_scene_3d_info(Hlong WindowHandle, Hlong Scene3D, double Row, double Column, const char *Information, Halcon::HTuple *Value);
LIntExport Herror get_display_scene_3d_info(Hlong WindowHandle, Hlong Scene3D, double Row, double Column, const char *Information, Hlong *Value);
LIntExport Herror set_scene_3d_to_world_pose(const Halcon::HTuple &Scene3D, const Halcon::HTuple &ToWorldPose);
LIntExport Herror set_scene_3d_to_world_pose(Hlong Scene3D, double ToWorldPose);
LIntExport Herror set_scene_3d_param(const Halcon::HTuple &Scene3D, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror set_scene_3d_light_param(const Halcon::HTuple &Scene3D, const Halcon::HTuple &LightIndex, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror set_scene_3d_instance_pose(const Halcon::HTuple &Scene3D, const Halcon::HTuple &InstanceIndex, const Halcon::HTuple &Pose);
LIntExport Herror set_scene_3d_instance_pose(Hlong Scene3D, Hlong InstanceIndex, double Pose);
LIntExport Herror set_scene_3d_instance_param(const Halcon::HTuple &Scene3D, const Halcon::HTuple &InstanceIndex, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror set_scene_3d_camera_pose(const Halcon::HTuple &Scene3D, const Halcon::HTuple &CameraIndex, const Halcon::HTuple &Pose);
LIntExport Herror set_scene_3d_camera_pose(Hlong Scene3D, Hlong CameraIndex, double Pose);
LIntExport Herror render_scene_3d(Halcon::Hobject *Image, const Halcon::HTuple &Scene3D, const Halcon::HTuple &CameraIndex);
LIntExport Herror render_scene_3d(Halcon::Hobject *Image, Hlong Scene3D, Hlong CameraIndex);
LIntExport Herror remove_scene_3d_light(const Halcon::HTuple &Scene3D, const Halcon::HTuple &LightIndex);
LIntExport Herror remove_scene_3d_light(Hlong Scene3D, Hlong LightIndex);
LIntExport Herror remove_scene_3d_instance(const Halcon::HTuple &Scene3D, const Halcon::HTuple &InstanceIndex);
LIntExport Herror remove_scene_3d_instance(Hlong Scene3D, Hlong InstanceIndex);
LIntExport Herror remove_scene_3d_camera(const Halcon::HTuple &Scene3D, const Halcon::HTuple &CameraIndex);
LIntExport Herror remove_scene_3d_camera(Hlong Scene3D, Hlong CameraIndex);
LIntExport Herror display_scene_3d(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Scene3D, const Halcon::HTuple &CameraIndex);
LIntExport Herror add_scene_3d_light(const Halcon::HTuple &Scene3D, const Halcon::HTuple &LightPosition, const Halcon::HTuple &LightKind, Halcon::HTuple *LightIndex);
LIntExport Herror add_scene_3d_light(const Halcon::HTuple &Scene3D, const Halcon::HTuple &LightPosition, const Halcon::HTuple &LightKind, Hlong *LightIndex);
LIntExport Herror add_scene_3d_instance(const Halcon::HTuple &Scene3D, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Pose, Halcon::HTuple *InstanceIndex);
LIntExport Herror add_scene_3d_instance(const Halcon::HTuple &Scene3D, const Halcon::HTuple &ObjectModel3D, const Halcon::HTuple &Pose, Hlong *InstanceIndex);
LIntExport Herror add_scene_3d_camera(const Halcon::HTuple &Scene3D, const Halcon::HTuple &CameraParam, Halcon::HTuple *CameraIndex);
LIntExport Herror add_scene_3d_camera(const Halcon::HTuple &Scene3D, const Halcon::HTuple &CameraParam, Hlong *CameraIndex);
LIntExport Herror clear_scene_3d(const Halcon::HTuple &Scene3D);
LIntExport Herror clear_scene_3d(Hlong Scene3D);
LIntExport Herror create_scene_3d(Halcon::HTuple *Scene3D);
LIntExport Herror create_scene_3d(Hlong *Scene3D);
LIntExport Herror get_window_param(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Param, Halcon::HTuple *Value);
LIntExport Herror get_window_param(Hlong WindowHandle, const char *Param, Halcon::HTuple *Value);
LIntExport Herror set_window_param(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Param, const Halcon::HTuple &Value);
LIntExport Herror set_shape(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Shape);
LIntExport Herror set_shape(Hlong WindowHandle, const char *Shape);
LIntExport Herror set_rgb(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Red, const Halcon::HTuple &Green, const Halcon::HTuple &Blue);
LIntExport Herror set_rgb(Hlong WindowHandle, Hlong Red, Hlong Green, Hlong Blue);
LIntExport Herror set_pixel(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Pixel);
LIntExport Herror set_pixel(Hlong WindowHandle, Hlong Pixel);
LIntExport Herror set_part_style(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Style);
LIntExport Herror set_part_style(Hlong WindowHandle, Hlong Style);
LIntExport Herror set_part(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2);
LIntExport Herror set_part(Hlong WindowHandle, Hlong Row1, Hlong Column1, Hlong Row2, Hlong Column2);
LIntExport Herror set_paint(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Mode);
LIntExport Herror set_line_width(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Width);
LIntExport Herror set_line_width(Hlong WindowHandle, Hlong Width);
LIntExport Herror set_line_style(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Style);
LIntExport Herror set_line_approx(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Approximation);
LIntExport Herror set_line_approx(Hlong WindowHandle, Hlong Approximation);
LIntExport Herror set_insert(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Mode);
LIntExport Herror set_insert(Hlong WindowHandle, const char *Mode);
LIntExport Herror set_hsi(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Hue, const Halcon::HTuple &Saturation, const Halcon::HTuple &Intensity);
LIntExport Herror set_hsi(Hlong WindowHandle, Hlong Hue, Hlong Saturation, Hlong Intensity);
LIntExport Herror set_gray(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &GrayValues);
LIntExport Herror set_gray(Hlong WindowHandle, Hlong GrayValues);
LIntExport Herror set_draw(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Mode);
LIntExport Herror set_draw(Hlong WindowHandle, const char *Mode);
LIntExport Herror set_comprise(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Mode);
LIntExport Herror set_comprise(Hlong WindowHandle, const char *Mode);
LIntExport Herror set_colored(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &NumberOfColors);
LIntExport Herror set_colored(Hlong WindowHandle, Hlong NumberOfColors);
LIntExport Herror set_color(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Color);
LIntExport Herror set_color(Hlong WindowHandle, const char *Color);
LIntExport Herror get_shape(const Halcon::HTuple &WindowHandle, Halcon::HTuple *DisplayShape);
LIntExport Herror get_shape(const Halcon::HTuple &WindowHandle, char *DisplayShape);
LIntExport Herror get_shape(Hlong WindowHandle, Halcon::HTuple *DisplayShape);
LIntExport Herror get_shape(Hlong WindowHandle, char *DisplayShape);
LIntExport Herror get_rgb(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Red, Halcon::HTuple *Green, Halcon::HTuple *Blue);
LIntExport Herror get_rgb(Hlong WindowHandle, Halcon::HTuple *Red, Halcon::HTuple *Green, Halcon::HTuple *Blue);
LIntExport Herror get_pixel(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Pixel);
LIntExport Herror get_pixel(Hlong WindowHandle, Halcon::HTuple *Pixel);
LIntExport Herror get_part_style(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Style);
LIntExport Herror get_part_style(const Halcon::HTuple &WindowHandle, Hlong *Style);
LIntExport Herror get_part_style(Hlong WindowHandle, Halcon::HTuple *Style);
LIntExport Herror get_part_style(Hlong WindowHandle, Hlong *Style);
LIntExport Herror get_part(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror get_part(const Halcon::HTuple &WindowHandle, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2);
LIntExport Herror get_part(Hlong WindowHandle, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror get_part(Hlong WindowHandle, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2);
LIntExport Herror get_paint(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_paint(Hlong WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_line_width(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Width);
LIntExport Herror get_line_width(const Halcon::HTuple &WindowHandle, Hlong *Width);
LIntExport Herror get_line_width(Hlong WindowHandle, Halcon::HTuple *Width);
LIntExport Herror get_line_width(Hlong WindowHandle, Hlong *Width);
LIntExport Herror get_line_style(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Style);
LIntExport Herror get_line_style(Hlong WindowHandle, Halcon::HTuple *Style);
LIntExport Herror get_line_approx(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Approximation);
LIntExport Herror get_line_approx(const Halcon::HTuple &WindowHandle, Hlong *Approximation);
LIntExport Herror get_line_approx(Hlong WindowHandle, Halcon::HTuple *Approximation);
LIntExport Herror get_line_approx(Hlong WindowHandle, Hlong *Approximation);
LIntExport Herror get_insert(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_insert(const Halcon::HTuple &WindowHandle, char *Mode);
LIntExport Herror get_insert(Hlong WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_insert(Hlong WindowHandle, char *Mode);
LIntExport Herror get_hsi(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Hue, Halcon::HTuple *Saturation, Halcon::HTuple *Intensity);
LIntExport Herror get_hsi(Hlong WindowHandle, Halcon::HTuple *Hue, Halcon::HTuple *Saturation, Halcon::HTuple *Intensity);
LIntExport Herror get_draw(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_draw(const Halcon::HTuple &WindowHandle, char *Mode);
LIntExport Herror get_draw(Hlong WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_draw(Hlong WindowHandle, char *Mode);
LIntExport Herror get_comprise(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_comprise(const Halcon::HTuple &WindowHandle, char *Mode);
LIntExport Herror get_comprise(Hlong WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_comprise(Hlong WindowHandle, char *Mode);
LIntExport Herror query_shape(Halcon::HTuple *DisplayShape);
LIntExport Herror query_paint(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror query_paint(Hlong WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror query_line_width(Halcon::HTuple *Min, Halcon::HTuple *Max);
LIntExport Herror query_line_width(Hlong *Min, Hlong *Max);
LIntExport Herror query_insert(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror query_insert(Hlong WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror query_gray(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Grayval);
LIntExport Herror query_gray(Hlong WindowHandle, Halcon::HTuple *Grayval);
LIntExport Herror query_colored(Halcon::HTuple *PossibleNumberOfColors);
LIntExport Herror query_all_colors(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Colors);
LIntExport Herror query_all_colors(Hlong WindowHandle, Halcon::HTuple *Colors);
LIntExport Herror query_color(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Colors);
LIntExport Herror query_color(Hlong WindowHandle, Halcon::HTuple *Colors);
LIntExport Herror get_icon(Halcon::Hobject *Icon, const Halcon::HTuple &WindowHandle);
LIntExport Herror get_icon(Halcon::Hobject *Icon, Hlong WindowHandle);
LIntExport Herror set_icon(const Halcon::Hobject &Icon, const Halcon::HTuple &WindowHandle);
LIntExport Herror set_icon(const Halcon::Hobject &Icon, Hlong WindowHandle);
LIntExport Herror disp_region(const Halcon::Hobject &DispRegions, const Halcon::HTuple &WindowHandle);
LIntExport Herror disp_region(const Halcon::Hobject &DispRegions, Hlong WindowHandle);
LIntExport Herror disp_rectangle2(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &CenterRow, const Halcon::HTuple &CenterCol, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2);
LIntExport Herror disp_rectangle2(Hlong WindowHandle, double CenterRow, double CenterCol, double Phi, double Length1, double Length2);
LIntExport Herror disp_rectangle1(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2);
LIntExport Herror disp_rectangle1(Hlong WindowHandle, double Row1, double Column1, double Row2, double Column2);
LIntExport Herror disp_polygon(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror disp_line(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2);
LIntExport Herror disp_line(Hlong WindowHandle, double Row1, double Column1, double Row2, double Column2);
LIntExport Herror disp_cross(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Size, const Halcon::HTuple &Angle);
LIntExport Herror disp_cross(Hlong WindowHandle, double Row, double Column, double Size, double Angle);
LIntExport Herror disp_image(const Halcon::Hobject &Image, const Halcon::HTuple &WindowHandle);
LIntExport Herror disp_image(const Halcon::Hobject &Image, Hlong WindowHandle);
LIntExport Herror disp_channel(const Halcon::Hobject &MultichannelImage, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Channel);
LIntExport Herror disp_channel(const Halcon::Hobject &MultichannelImage, Hlong WindowHandle, Hlong Channel);
LIntExport Herror disp_color(const Halcon::Hobject &ColorImage, const Halcon::HTuple &WindowHandle);
LIntExport Herror disp_color(const Halcon::Hobject &ColorImage, Hlong WindowHandle);
LIntExport Herror disp_ellipse(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &CenterRow, const Halcon::HTuple &CenterCol, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2);
LIntExport Herror disp_ellipse(Hlong WindowHandle, Hlong CenterRow, Hlong CenterCol, double Phi, double Radius1, double Radius2);
LIntExport Herror disp_distribution(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Distribution, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Scale);
LIntExport Herror disp_circle(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius);
LIntExport Herror disp_circle(Hlong WindowHandle, double Row, double Column, double Radius);
LIntExport Herror disp_arrow(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, const Halcon::HTuple &Size);
LIntExport Herror disp_arrow(Hlong WindowHandle, double Row1, double Column1, double Row2, double Column2, double Size);
LIntExport Herror disp_arc(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &CenterRow, const Halcon::HTuple &CenterCol, const Halcon::HTuple &Angle, const Halcon::HTuple &BeginRow, const Halcon::HTuple &BeginCol);
LIntExport Herror disp_arc(Hlong WindowHandle, double CenterRow, double CenterCol, double Angle, Hlong BeginRow, Hlong BeginCol);
LIntExport Herror disp_obj(const Halcon::Hobject &Object, const Halcon::HTuple &WindowHandle);
LIntExport Herror disp_obj(const Halcon::Hobject &Object, Hlong WindowHandle);
LIntExport Herror set_mshape(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Cursor);
LIntExport Herror set_mshape(Hlong WindowHandle, const char *Cursor);
LIntExport Herror get_mshape(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Cursor);
LIntExport Herror get_mshape(const Halcon::HTuple &WindowHandle, char *Cursor);
LIntExport Herror get_mshape(Hlong WindowHandle, Halcon::HTuple *Cursor);
LIntExport Herror get_mshape(Hlong WindowHandle, char *Cursor);
LIntExport Herror query_mshape(const Halcon::HTuple &WindowHandle, Halcon::HTuple *ShapeNames);
LIntExport Herror query_mshape(Hlong WindowHandle, Halcon::HTuple *ShapeNames);
LIntExport Herror get_mposition_sub_pix(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Button);
LIntExport Herror get_mposition_sub_pix(const Halcon::HTuple &WindowHandle, double *Row, double *Column, Hlong *Button);
LIntExport Herror get_mposition_sub_pix(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Button);
LIntExport Herror get_mposition_sub_pix(Hlong WindowHandle, double *Row, double *Column, Hlong *Button);
LIntExport Herror get_mposition(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Button);
LIntExport Herror get_mposition(const Halcon::HTuple &WindowHandle, Hlong *Row, Hlong *Column, Hlong *Button);
LIntExport Herror get_mposition(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Button);
LIntExport Herror get_mposition(Hlong WindowHandle, Hlong *Row, Hlong *Column, Hlong *Button);
LIntExport Herror get_mbutton_sub_pix(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Button);
LIntExport Herror get_mbutton_sub_pix(const Halcon::HTuple &WindowHandle, double *Row, double *Column, Hlong *Button);
LIntExport Herror get_mbutton_sub_pix(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Button);
LIntExport Herror get_mbutton_sub_pix(Hlong WindowHandle, double *Row, double *Column, Hlong *Button);
LIntExport Herror get_mbutton(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Button);
LIntExport Herror get_mbutton(const Halcon::HTuple &WindowHandle, Hlong *Row, Hlong *Column, Hlong *Button);
LIntExport Herror get_mbutton(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Button);
LIntExport Herror get_mbutton(Hlong WindowHandle, Hlong *Row, Hlong *Column, Hlong *Button);
LIntExport Herror write_lut(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_lut(Hlong WindowHandle, const char *FileName);
LIntExport Herror disp_lut(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Scale);
LIntExport Herror disp_lut(Hlong WindowHandle, Hlong Row, Hlong Column, Hlong Scale);
LIntExport Herror query_lut(const Halcon::HTuple &WindowHandle, Halcon::HTuple *LookUpTable);
LIntExport Herror query_lut(Hlong WindowHandle, Halcon::HTuple *LookUpTable);
LIntExport Herror draw_lut(const Halcon::HTuple &WindowHandle);
LIntExport Herror draw_lut(Hlong WindowHandle);
LIntExport Herror get_lut_style(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Hue, Halcon::HTuple *Saturation, Halcon::HTuple *Intensity);
LIntExport Herror get_lut_style(const Halcon::HTuple &WindowHandle, double *Hue, double *Saturation, double *Intensity);
LIntExport Herror get_lut_style(Hlong WindowHandle, Halcon::HTuple *Hue, Halcon::HTuple *Saturation, Halcon::HTuple *Intensity);
LIntExport Herror get_lut_style(Hlong WindowHandle, double *Hue, double *Saturation, double *Intensity);
LIntExport Herror set_lut_style(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Hue, const Halcon::HTuple &Saturation, const Halcon::HTuple &Intensity);
LIntExport Herror set_lut_style(Hlong WindowHandle, double Hue, double Saturation, double Intensity);
LIntExport Herror get_lut(const Halcon::HTuple &WindowHandle, Halcon::HTuple *LookUpTable);
LIntExport Herror get_lut(Hlong WindowHandle, Halcon::HTuple *LookUpTable);
LIntExport Herror set_lut(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &LookUpTable);
LIntExport Herror get_fix(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_fix(const Halcon::HTuple &WindowHandle, char *Mode);
LIntExport Herror get_fix(Hlong WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_fix(Hlong WindowHandle, char *Mode);
LIntExport Herror set_fix(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Mode);
LIntExport Herror set_fix(Hlong WindowHandle, const char *Mode);
LIntExport Herror get_fixed_lut(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_fixed_lut(const Halcon::HTuple &WindowHandle, char *Mode);
LIntExport Herror get_fixed_lut(Hlong WindowHandle, Halcon::HTuple *Mode);
LIntExport Herror get_fixed_lut(Hlong WindowHandle, char *Mode);
LIntExport Herror set_fixed_lut(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Mode);
LIntExport Herror set_fixed_lut(Hlong WindowHandle, const char *Mode);
LIntExport Herror gnuplot_plot_funct_1d(const Halcon::HTuple &GnuplotFileID, const Halcon::HTuple &Function);
LIntExport Herror gnuplot_plot_ctrl(const Halcon::HTuple &GnuplotFileID, const Halcon::HTuple &Values);
LIntExport Herror gnuplot_plot_image(const Halcon::Hobject &Image, const Halcon::HTuple &GnuplotFileID, const Halcon::HTuple &SamplesX, const Halcon::HTuple &SamplesY, const Halcon::HTuple &ViewRotX, const Halcon::HTuple &ViewRotZ, const Halcon::HTuple &Hidden3D);
LIntExport Herror gnuplot_plot_image(const Halcon::Hobject &Image, Hlong GnuplotFileID, Hlong SamplesX, Hlong SamplesY, double ViewRotX, double ViewRotZ, const char *Hidden3D);
LIntExport Herror gnuplot_close(const Halcon::HTuple &GnuplotFileID);
LIntExport Herror gnuplot_close(Hlong GnuplotFileID);
LIntExport Herror gnuplot_open_file(const Halcon::HTuple &FileName, Halcon::HTuple *GnuplotFileID);
LIntExport Herror gnuplot_open_file(const Halcon::HTuple &FileName, Hlong *GnuplotFileID);
LIntExport Herror gnuplot_open_file(const char *FileName, Halcon::HTuple *GnuplotFileID);
LIntExport Herror gnuplot_open_file(const char *FileName, Hlong *GnuplotFileID);
LIntExport Herror gnuplot_open_pipe(Halcon::HTuple *GnuplotFileID);
LIntExport Herror gnuplot_open_pipe(Hlong *GnuplotFileID);
LIntExport Herror create_drawing_object_text(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &String, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_text(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &String, Hlong *DrawID);
LIntExport Herror create_drawing_object_text(Hlong Row, Hlong Column, const char *String, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_text(Hlong Row, Hlong Column, const char *String, Hlong *DrawID);
LIntExport Herror get_drawing_object_iconic(Halcon::Hobject *Object, const Halcon::HTuple &DrawID);
LIntExport Herror get_drawing_object_iconic(Halcon::Hobject *Object, Hlong DrawID);
LIntExport Herror clear_drawing_object(const Halcon::HTuple &DrawID);
LIntExport Herror clear_drawing_object(Hlong DrawID);
LIntExport Herror set_drawing_object_params(const Halcon::HTuple &DrawID, const Halcon::HTuple &ParamNames, const Halcon::HTuple &ParamValues);
LIntExport Herror set_drawing_object_params(Hlong DrawID, const char *ParamNames, double ParamValues);
LIntExport Herror get_drawing_object_params(const Halcon::HTuple &DrawID, const Halcon::HTuple &ParamNames, Halcon::HTuple *ParamValues);
LIntExport Herror get_drawing_object_params(const Halcon::HTuple &DrawID, const Halcon::HTuple &ParamNames, double *ParamValues);
LIntExport Herror get_drawing_object_params(Hlong DrawID, const char *ParamNames, Halcon::HTuple *ParamValues);
LIntExport Herror get_drawing_object_params(Hlong DrawID, const char *ParamNames, double *ParamValues);
LIntExport Herror set_drawing_object_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &DrawID);
LIntExport Herror set_drawing_object_xld(const Halcon::Hobject &Contour, Hlong DrawID);
LIntExport Herror create_drawing_object_xld(const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_xld(const Halcon::HTuple &Row, const Halcon::HTuple &Column, Hlong *DrawID);
LIntExport Herror create_drawing_object_circle_sector(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius, const Halcon::HTuple &StartAngle, const Halcon::HTuple &EndAngle, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_circle_sector(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius, const Halcon::HTuple &StartAngle, const Halcon::HTuple &EndAngle, Hlong *DrawID);
LIntExport Herror create_drawing_object_circle_sector(double Row, double Column, double Radius, double StartAngle, double EndAngle, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_circle_sector(double Row, double Column, double Radius, double StartAngle, double EndAngle, Hlong *DrawID);
LIntExport Herror create_drawing_object_ellipse_sector(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, const Halcon::HTuple &StartAngle, const Halcon::HTuple &EndAngle, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_ellipse_sector(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, const Halcon::HTuple &StartAngle, const Halcon::HTuple &EndAngle, Hlong *DrawID);
LIntExport Herror create_drawing_object_ellipse_sector(double Row, double Column, double Phi, double Radius1, double Radius2, double StartAngle, double EndAngle, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_ellipse_sector(double Row, double Column, double Phi, double Radius1, double Radius2, double StartAngle, double EndAngle, Hlong *DrawID);
LIntExport Herror create_drawing_object_line(const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_line(const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Hlong *DrawID);
LIntExport Herror create_drawing_object_line(double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_line(double Row1, double Column1, double Row2, double Column2, Hlong *DrawID);
LIntExport Herror create_drawing_object_circle(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_circle(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Radius, Hlong *DrawID);
LIntExport Herror create_drawing_object_circle(double Row, double Column, double Radius, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_circle(double Row, double Column, double Radius, Hlong *DrawID);
LIntExport Herror create_drawing_object_ellipse(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_ellipse(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, Hlong *DrawID);
LIntExport Herror create_drawing_object_ellipse(double Row, double Column, double Phi, double Radius1, double Radius2, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_ellipse(double Row, double Column, double Phi, double Radius1, double Radius2, Hlong *DrawID);
LIntExport Herror create_drawing_object_rectangle2(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_rectangle2(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2, Hlong *DrawID);
LIntExport Herror create_drawing_object_rectangle2(double Row, double Column, double Phi, double Length1, double Length2, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_rectangle2(double Row, double Column, double Phi, double Length1, double Length2, Hlong *DrawID);
LIntExport Herror create_drawing_object_rectangle1(const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_rectangle1(const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Hlong *DrawID);
LIntExport Herror create_drawing_object_rectangle1(double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *DrawID);
LIntExport Herror create_drawing_object_rectangle1(double Row1, double Column1, double Row2, double Column2, Hlong *DrawID);
LIntExport Herror drag_region3(const Halcon::Hobject &SourceRegion, const Halcon::Hobject &MaskRegion, Halcon::Hobject *DestinationRegion, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror drag_region3(const Halcon::Hobject &SourceRegion, const Halcon::Hobject &MaskRegion,Halcon::Hobject *DestinationRegion, Hlong WindowHandle, Hlong Row, Hlong Column);
LIntExport Herror drag_region2(const Halcon::Hobject &SourceRegion, Halcon::Hobject *DestinationRegion, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror drag_region2(const Halcon::Hobject &SourceRegion,Halcon::Hobject *DestinationRegion, Hlong WindowHandle, Hlong Row, Hlong Column);
LIntExport Herror drag_region1(const Halcon::Hobject &SourceRegion, Halcon::Hobject *DestinationRegion, const Halcon::HTuple &WindowHandle);
LIntExport Herror drag_region1(const Halcon::Hobject &SourceRegion,Halcon::Hobject *DestinationRegion, Hlong WindowHandle);
LIntExport Herror draw_nurbs_interp_mod(Halcon::Hobject *ContOut, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Rotate, const Halcon::HTuple &Move, const Halcon::HTuple &Scale, const Halcon::HTuple &KeepRatio, const Halcon::HTuple &Edit, const Halcon::HTuple &Degree, const Halcon::HTuple &RowsIn, const Halcon::HTuple &ColsIn, const Halcon::HTuple &TangentsIn, Halcon::HTuple *ControlRows, Halcon::HTuple *ControlCols, Halcon::HTuple *Knots, Halcon::HTuple *Rows, Halcon::HTuple *Cols, Halcon::HTuple *Tangents);
LIntExport Herror draw_nurbs_interp(Halcon::Hobject *ContOut, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Rotate, const Halcon::HTuple &Move, const Halcon::HTuple &Scale, const Halcon::HTuple &KeepRatio, const Halcon::HTuple &Degree, Halcon::HTuple *ControlRows, Halcon::HTuple *ControlCols, Halcon::HTuple *Knots, Halcon::HTuple *Rows, Halcon::HTuple *Cols, Halcon::HTuple *Tangents);
LIntExport Herror draw_nurbs_interp(Halcon::Hobject *ContOut, Hlong WindowHandle, const char *Rotate, const char *Move, const char *Scale, const char *KeepRatio, Hlong Degree, Halcon::HTuple *ControlRows, Halcon::HTuple *ControlCols, Halcon::HTuple *Knots, Halcon::HTuple *Rows, Halcon::HTuple *Cols, Halcon::HTuple *Tangents);
LIntExport Herror draw_nurbs_mod(Halcon::Hobject *ContOut, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Rotate, const Halcon::HTuple &Move, const Halcon::HTuple &Scale, const Halcon::HTuple &KeepRatio, const Halcon::HTuple &Edit, const Halcon::HTuple &Degree, const Halcon::HTuple &RowsIn, const Halcon::HTuple &ColsIn, const Halcon::HTuple &WeightsIn, Halcon::HTuple *Rows, Halcon::HTuple *Cols, Halcon::HTuple *Weights);
LIntExport Herror draw_nurbs(Halcon::Hobject *ContOut, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Rotate, const Halcon::HTuple &Move, const Halcon::HTuple &Scale, const Halcon::HTuple &KeepRatio, const Halcon::HTuple &Degree, Halcon::HTuple *Rows, Halcon::HTuple *Cols, Halcon::HTuple *Weights);
LIntExport Herror draw_nurbs(Halcon::Hobject *ContOut, Hlong WindowHandle, const char *Rotate, const char *Move, const char *Scale, const char *KeepRatio, Hlong Degree, Halcon::HTuple *Rows, Halcon::HTuple *Cols, Halcon::HTuple *Weights);
LIntExport Herror draw_xld_mod(const Halcon::Hobject &ContIn, Halcon::Hobject *ContOut, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Rotate, const Halcon::HTuple &Move, const Halcon::HTuple &Scale, const Halcon::HTuple &KeepRatio, const Halcon::HTuple &Edit);
LIntExport Herror draw_xld_mod(const Halcon::Hobject &ContIn,Halcon::Hobject *ContOut, Hlong WindowHandle, const char *Rotate, const char *Move, const char *Scale, const char *KeepRatio, const char *Edit);
LIntExport Herror draw_xld(Halcon::Hobject *ContOut, const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Rotate, const Halcon::HTuple &Move, const Halcon::HTuple &Scale, const Halcon::HTuple &KeepRatio);
LIntExport Herror draw_xld(Halcon::Hobject *ContOut, Hlong WindowHandle, const char *Rotate, const char *Move, const char *Scale, const char *KeepRatio);
LIntExport Herror draw_rectangle2_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &RowIn, const Halcon::HTuple &ColumnIn, const Halcon::HTuple &PhiIn, const Halcon::HTuple &Length1In, const Halcon::HTuple &Length2In, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2);
LIntExport Herror draw_rectangle2_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &RowIn, const Halcon::HTuple &ColumnIn, const Halcon::HTuple &PhiIn, const Halcon::HTuple &Length1In, const Halcon::HTuple &Length2In, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror draw_rectangle2_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double PhiIn, double Length1In, double Length2In, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2);
LIntExport Herror draw_rectangle2_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double PhiIn, double Length1In, double Length2In, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror draw_rectangle2(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2);
LIntExport Herror draw_rectangle2(const Halcon::HTuple &WindowHandle, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror draw_rectangle2(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2);
LIntExport Herror draw_rectangle2(Hlong WindowHandle, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror draw_rectangle1_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1In, const Halcon::HTuple &Column1In, const Halcon::HTuple &Row2In, const Halcon::HTuple &Column2In, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror draw_rectangle1_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1In, const Halcon::HTuple &Column1In, const Halcon::HTuple &Row2In, const Halcon::HTuple &Column2In, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror draw_rectangle1_mod(Hlong WindowHandle, double Row1In, double Column1In, double Row2In, double Column2In, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror draw_rectangle1_mod(Hlong WindowHandle, double Row1In, double Column1In, double Row2In, double Column2In, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror draw_rectangle1(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror draw_rectangle1(const Halcon::HTuple &WindowHandle, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror draw_rectangle1(Hlong WindowHandle, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror draw_rectangle1(Hlong WindowHandle, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror draw_point_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &RowIn, const Halcon::HTuple &ColumnIn, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror draw_point_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &RowIn, const Halcon::HTuple &ColumnIn, double *Row, double *Column);
LIntExport Herror draw_point_mod(Hlong WindowHandle, double RowIn, double ColumnIn, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror draw_point_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double *Row, double *Column);
LIntExport Herror draw_point(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror draw_point(const Halcon::HTuple &WindowHandle, double *Row, double *Column);
LIntExport Herror draw_point(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror draw_point(Hlong WindowHandle, double *Row, double *Column);
LIntExport Herror draw_line_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1In, const Halcon::HTuple &Column1In, const Halcon::HTuple &Row2In, const Halcon::HTuple &Column2In, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror draw_line_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &Row1In, const Halcon::HTuple &Column1In, const Halcon::HTuple &Row2In, const Halcon::HTuple &Column2In, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror draw_line_mod(Hlong WindowHandle, double Row1In, double Column1In, double Row2In, double Column2In, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror draw_line_mod(Hlong WindowHandle, double Row1In, double Column1In, double Row2In, double Column2In, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror draw_line(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror draw_line(const Halcon::HTuple &WindowHandle, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror draw_line(Hlong WindowHandle, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror draw_line(Hlong WindowHandle, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror draw_ellipse_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &RowIn, const Halcon::HTuple &ColumnIn, const Halcon::HTuple &PhiIn, const Halcon::HTuple &Radius1In, const Halcon::HTuple &Radius2In, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Radius1, Halcon::HTuple *Radius2);
LIntExport Herror draw_ellipse_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &RowIn, const Halcon::HTuple &ColumnIn, const Halcon::HTuple &PhiIn, const Halcon::HTuple &Radius1In, const Halcon::HTuple &Radius2In, double *Row, double *Column, double *Phi, double *Radius1, double *Radius2);
LIntExport Herror draw_ellipse_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double PhiIn, double Radius1In, double Radius2In, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Radius1, Halcon::HTuple *Radius2);
LIntExport Herror draw_ellipse_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double PhiIn, double Radius1In, double Radius2In, double *Row, double *Column, double *Phi, double *Radius1, double *Radius2);
LIntExport Herror draw_ellipse(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Radius1, Halcon::HTuple *Radius2);
LIntExport Herror draw_ellipse(const Halcon::HTuple &WindowHandle, double *Row, double *Column, double *Phi, double *Radius1, double *Radius2);
LIntExport Herror draw_ellipse(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Radius1, Halcon::HTuple *Radius2);
LIntExport Herror draw_ellipse(Hlong WindowHandle, double *Row, double *Column, double *Phi, double *Radius1, double *Radius2);
LIntExport Herror draw_circle_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &RowIn, const Halcon::HTuple &ColumnIn, const Halcon::HTuple &RadiusIn, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Radius);
LIntExport Herror draw_circle_mod(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &RowIn, const Halcon::HTuple &ColumnIn, const Halcon::HTuple &RadiusIn, double *Row, double *Column, double *Radius);
LIntExport Herror draw_circle_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double RadiusIn, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Radius);
LIntExport Herror draw_circle_mod(Hlong WindowHandle, double RowIn, double ColumnIn, double RadiusIn, double *Row, double *Column, double *Radius);
LIntExport Herror draw_circle(const Halcon::HTuple &WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Radius);
LIntExport Herror draw_circle(const Halcon::HTuple &WindowHandle, double *Row, double *Column, double *Radius);
LIntExport Herror draw_circle(Hlong WindowHandle, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Radius);
LIntExport Herror draw_circle(Hlong WindowHandle, double *Row, double *Column, double *Radius);
LIntExport Herror draw_region(Halcon::Hobject *Region, const Halcon::HTuple &WindowHandle);
LIntExport Herror draw_region(Halcon::Hobject *Region, Hlong WindowHandle);
LIntExport Herror draw_polygon(Halcon::Hobject *PolygonRegion, const Halcon::HTuple &WindowHandle);
LIntExport Herror draw_polygon(Halcon::Hobject *PolygonRegion, Hlong WindowHandle);
LIntExport Herror projection_pl(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *RowProj, Halcon::HTuple *ColProj);
LIntExport Herror projection_pl(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, double *RowProj, double *ColProj);
LIntExport Herror projection_pl(double Row, double Column, double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *RowProj, Halcon::HTuple *ColProj);
LIntExport Herror projection_pl(double Row, double Column, double Row1, double Column1, double Row2, double Column2, double *RowProj, double *ColProj);
LIntExport Herror get_points_ellipse(const Halcon::HTuple &Angle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, Halcon::HTuple *RowPoint, Halcon::HTuple *ColPoint);
LIntExport Herror get_points_ellipse(const Halcon::HTuple &Angle, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Radius1, const Halcon::HTuple &Radius2, double *RowPoint, double *ColPoint);
LIntExport Herror get_points_ellipse(double Angle, double Row, double Column, double Phi, double Radius1, double Radius2, Halcon::HTuple *RowPoint, Halcon::HTuple *ColPoint);
LIntExport Herror get_points_ellipse(double Angle, double Row, double Column, double Phi, double Radius1, double Radius2, double *RowPoint, double *ColPoint);
LIntExport Herror intersection_ll(const Halcon::HTuple &RowA1, const Halcon::HTuple &ColumnA1, const Halcon::HTuple &RowA2, const Halcon::HTuple &ColumnA2, const Halcon::HTuple &RowB1, const Halcon::HTuple &ColumnB1, const Halcon::HTuple &RowB2, const Halcon::HTuple &ColumnB2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsParallel);
LIntExport Herror intersection_ll(const Halcon::HTuple &RowA1, const Halcon::HTuple &ColumnA1, const Halcon::HTuple &RowA2, const Halcon::HTuple &ColumnA2, const Halcon::HTuple &RowB1, const Halcon::HTuple &ColumnB1, const Halcon::HTuple &RowB2, const Halcon::HTuple &ColumnB2, double *Row, double *Column, Hlong *IsParallel);
LIntExport Herror intersection_ll(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsParallel);
LIntExport Herror intersection_ll(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double *Row, double *Column, Hlong *IsParallel);
LIntExport Herror intersection_contours_xld(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const Halcon::HTuple &IntersectionType, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_contours_xld(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const Halcon::HTuple &IntersectionType, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_contours_xld(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const char *IntersectionType, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_contours_xld(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const char *IntersectionType, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_circle_contour_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &CircleRow, const Halcon::HTuple &CircleColumn, const Halcon::HTuple &CircleRadius, const Halcon::HTuple &CircleStartPhi, const Halcon::HTuple &CircleEndPhi, const Halcon::HTuple &CirclePointOrder, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror intersection_circle_contour_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &CircleRow, const Halcon::HTuple &CircleColumn, const Halcon::HTuple &CircleRadius, const Halcon::HTuple &CircleStartPhi, const Halcon::HTuple &CircleEndPhi, const Halcon::HTuple &CirclePointOrder, double *Row, double *Column);
LIntExport Herror intersection_circle_contour_xld(const Halcon::Hobject &Contour, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, const char *CirclePointOrder, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror intersection_circle_contour_xld(const Halcon::Hobject &Contour, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, const char *CirclePointOrder, double *Row, double *Column);
LIntExport Herror intersection_circles(const Halcon::HTuple &Circle1Row, const Halcon::HTuple &Circle1Column, const Halcon::HTuple &Circle1Radius, const Halcon::HTuple &Circle1StartPhi, const Halcon::HTuple &Circle1EndPhi, const Halcon::HTuple &Circle1PointOrder, const Halcon::HTuple &Circle2Row, const Halcon::HTuple &Circle2Column, const Halcon::HTuple &Circle2Radius, const Halcon::HTuple &Circle2StartPhi, const Halcon::HTuple &Circle2EndPhi, const Halcon::HTuple &Circle2PointOrder, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_circles(const Halcon::HTuple &Circle1Row, const Halcon::HTuple &Circle1Column, const Halcon::HTuple &Circle1Radius, const Halcon::HTuple &Circle1StartPhi, const Halcon::HTuple &Circle1EndPhi, const Halcon::HTuple &Circle1PointOrder, const Halcon::HTuple &Circle2Row, const Halcon::HTuple &Circle2Column, const Halcon::HTuple &Circle2Radius, const Halcon::HTuple &Circle2StartPhi, const Halcon::HTuple &Circle2EndPhi, const Halcon::HTuple &Circle2PointOrder, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_circles(double Circle1Row, double Circle1Column, double Circle1Radius, double Circle1StartPhi, double Circle1EndPhi, const char *Circle1PointOrder, double Circle2Row, double Circle2Column, double Circle2Radius, double Circle2StartPhi, double Circle2EndPhi, const char *Circle2PointOrder, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_circles(double Circle1Row, double Circle1Column, double Circle1Radius, double Circle1StartPhi, double Circle1EndPhi, const char *Circle1PointOrder, double Circle2Row, double Circle2Column, double Circle2Radius, double Circle2StartPhi, double Circle2EndPhi, const char *Circle2PointOrder, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_line_contour_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &LineRow1, const Halcon::HTuple &LineColumn1, const Halcon::HTuple &LineRow2, const Halcon::HTuple &LineColumn2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_line_contour_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &LineRow1, const Halcon::HTuple &LineColumn1, const Halcon::HTuple &LineRow2, const Halcon::HTuple &LineColumn2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_line_contour_xld(const Halcon::Hobject &Contour, double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_line_contour_xld(const Halcon::Hobject &Contour, double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_line_circle(const Halcon::HTuple &LineRow1, const Halcon::HTuple &LineColumn1, const Halcon::HTuple &LineRow2, const Halcon::HTuple &LineColumn2, const Halcon::HTuple &CircleRow, const Halcon::HTuple &CircleColumn, const Halcon::HTuple &CircleRadius, const Halcon::HTuple &CircleStartPhi, const Halcon::HTuple &CircleEndPhi, const Halcon::HTuple &CirclePointOrder, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror intersection_line_circle(const Halcon::HTuple &LineRow1, const Halcon::HTuple &LineColumn1, const Halcon::HTuple &LineRow2, const Halcon::HTuple &LineColumn2, const Halcon::HTuple &CircleRow, const Halcon::HTuple &CircleColumn, const Halcon::HTuple &CircleRadius, const Halcon::HTuple &CircleStartPhi, const Halcon::HTuple &CircleEndPhi, const Halcon::HTuple &CirclePointOrder, double *Row, double *Column);
LIntExport Herror intersection_line_circle(double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, const char *CirclePointOrder, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror intersection_line_circle(double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, const char *CirclePointOrder, double *Row, double *Column);
LIntExport Herror intersection_lines(const Halcon::HTuple &Line1Row1, const Halcon::HTuple &Line1Column1, const Halcon::HTuple &Line1Row2, const Halcon::HTuple &Line1Column2, const Halcon::HTuple &Line2Row1, const Halcon::HTuple &Line2Column1, const Halcon::HTuple &Line2Row2, const Halcon::HTuple &Line2Column2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_lines(const Halcon::HTuple &Line1Row1, const Halcon::HTuple &Line1Column1, const Halcon::HTuple &Line1Row2, const Halcon::HTuple &Line1Column2, const Halcon::HTuple &Line2Row1, const Halcon::HTuple &Line2Column1, const Halcon::HTuple &Line2Row2, const Halcon::HTuple &Line2Column2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_lines(double Line1Row1, double Line1Column1, double Line1Row2, double Line1Column2, double Line2Row1, double Line2Column1, double Line2Row2, double Line2Column2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_lines(double Line1Row1, double Line1Column1, double Line1Row2, double Line1Column2, double Line2Row1, double Line2Column1, double Line2Row2, double Line2Column2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_segment_contour_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &SegmentRow1, const Halcon::HTuple &SegmentColumn1, const Halcon::HTuple &SegmentRow2, const Halcon::HTuple &SegmentColumn2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_segment_contour_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &SegmentRow1, const Halcon::HTuple &SegmentColumn1, const Halcon::HTuple &SegmentRow2, const Halcon::HTuple &SegmentColumn2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_segment_contour_xld(const Halcon::Hobject &Contour, double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_segment_contour_xld(const Halcon::Hobject &Contour, double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_segment_circle(const Halcon::HTuple &SegmentRow1, const Halcon::HTuple &SegmentColumn1, const Halcon::HTuple &SegmentRow2, const Halcon::HTuple &SegmentColumn2, const Halcon::HTuple &CircleRow, const Halcon::HTuple &CircleColumn, const Halcon::HTuple &CircleRadius, const Halcon::HTuple &CircleStartPhi, const Halcon::HTuple &CircleEndPhi, const Halcon::HTuple &CirclePointOrder, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror intersection_segment_circle(const Halcon::HTuple &SegmentRow1, const Halcon::HTuple &SegmentColumn1, const Halcon::HTuple &SegmentRow2, const Halcon::HTuple &SegmentColumn2, const Halcon::HTuple &CircleRow, const Halcon::HTuple &CircleColumn, const Halcon::HTuple &CircleRadius, const Halcon::HTuple &CircleStartPhi, const Halcon::HTuple &CircleEndPhi, const Halcon::HTuple &CirclePointOrder, double *Row, double *Column);
LIntExport Herror intersection_segment_circle(double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, const char *CirclePointOrder, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror intersection_segment_circle(double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, const char *CirclePointOrder, double *Row, double *Column);
LIntExport Herror intersection_segment_line(const Halcon::HTuple &SegmentRow1, const Halcon::HTuple &SegmentColumn1, const Halcon::HTuple &SegmentRow2, const Halcon::HTuple &SegmentColumn2, const Halcon::HTuple &LineRow1, const Halcon::HTuple &LineColumn1, const Halcon::HTuple &LineRow2, const Halcon::HTuple &LineColumn2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_segment_line(const Halcon::HTuple &SegmentRow1, const Halcon::HTuple &SegmentColumn1, const Halcon::HTuple &SegmentRow2, const Halcon::HTuple &SegmentColumn2, const Halcon::HTuple &LineRow1, const Halcon::HTuple &LineColumn1, const Halcon::HTuple &LineRow2, const Halcon::HTuple &LineColumn2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_segment_line(double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_segment_line(double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_segments(const Halcon::HTuple &Segment1Row1, const Halcon::HTuple &Segment1Column1, const Halcon::HTuple &Segment1Row2, const Halcon::HTuple &Segment1Column2, const Halcon::HTuple &Segment2Row1, const Halcon::HTuple &Segment2Column1, const Halcon::HTuple &Segment2Row2, const Halcon::HTuple &Segment2Column2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_segments(const Halcon::HTuple &Segment1Row1, const Halcon::HTuple &Segment1Column1, const Halcon::HTuple &Segment1Row2, const Halcon::HTuple &Segment1Column2, const Halcon::HTuple &Segment2Row1, const Halcon::HTuple &Segment2Column1, const Halcon::HTuple &Segment2Row2, const Halcon::HTuple &Segment2Column2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror intersection_segments(double Segment1Row1, double Segment1Column1, double Segment1Row2, double Segment1Column2, double Segment2Row1, double Segment2Column1, double Segment2Row2, double Segment2Column2, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *IsOverlapping);
LIntExport Herror intersection_segments(double Segment1Row1, double Segment1Column1, double Segment1Row2, double Segment1Column2, double Segment2Row1, double Segment2Column1, double Segment2Row2, double Segment2Column2, double *Row, double *Column, Hlong *IsOverlapping);
LIntExport Herror clear_distance_transform_xld(const Halcon::HTuple &DistanceTransformID);
LIntExport Herror clear_distance_transform_xld(Hlong DistanceTransformID);
LIntExport Herror apply_distance_transform_xld(const Halcon::Hobject &Contour, Halcon::Hobject *ContourOut, const Halcon::HTuple &DistanceTransformID);
LIntExport Herror apply_distance_transform_xld(const Halcon::Hobject &Contour,Halcon::Hobject *ContourOut, Hlong DistanceTransformID);
LIntExport Herror read_distance_transform_xld(const Halcon::HTuple &FileName, Halcon::HTuple *DistanceTransformID);
LIntExport Herror read_distance_transform_xld(const Halcon::HTuple &FileName, Hlong *DistanceTransformID);
LIntExport Herror read_distance_transform_xld(const char *FileName, Halcon::HTuple *DistanceTransformID);
LIntExport Herror read_distance_transform_xld(const char *FileName, Hlong *DistanceTransformID);
LIntExport Herror deserialize_distance_transform_xld(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *DistanceTransformID);
LIntExport Herror deserialize_distance_transform_xld(const Halcon::HTuple &SerializedItemHandle, Hlong *DistanceTransformID);
LIntExport Herror deserialize_distance_transform_xld(Hlong SerializedItemHandle, Halcon::HTuple *DistanceTransformID);
LIntExport Herror deserialize_distance_transform_xld(Hlong SerializedItemHandle, Hlong *DistanceTransformID);
LIntExport Herror serialize_distance_transform_xld(const Halcon::HTuple &DistanceTransformID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_distance_transform_xld(const Halcon::HTuple &DistanceTransformID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_distance_transform_xld(Hlong DistanceTransformID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_distance_transform_xld(Hlong DistanceTransformID, Hlong *SerializedItemHandle);
LIntExport Herror write_distance_transform_xld(const Halcon::HTuple &DistanceTransformID, const Halcon::HTuple &FileName);
LIntExport Herror write_distance_transform_xld(Hlong DistanceTransformID, const char *FileName);
LIntExport Herror set_distance_transform_xld_param(const Halcon::HTuple &DistanceTransformID, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror get_distance_transform_xld_param(const Halcon::HTuple &DistanceTransformID, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_distance_transform_xld_param(const Halcon::HTuple &DistanceTransformID, const Halcon::HTuple &GenParamName, char *GenParamValue);
LIntExport Herror get_distance_transform_xld_param(Hlong DistanceTransformID, const char *GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_distance_transform_xld_param(Hlong DistanceTransformID, const char *GenParamName, char *GenParamValue);
LIntExport Herror get_distance_transform_xld_contour(Halcon::Hobject *Contour, const Halcon::HTuple &DistanceTransformID);
LIntExport Herror get_distance_transform_xld_contour(Halcon::Hobject *Contour, Hlong DistanceTransformID);
LIntExport Herror create_distance_transform_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &Mode, const Halcon::HTuple &MaxDistance, Halcon::HTuple *DistanceTransformID);
LIntExport Herror create_distance_transform_xld(const Halcon::Hobject &Contour, const Halcon::HTuple &Mode, const Halcon::HTuple &MaxDistance, Hlong *DistanceTransformID);
LIntExport Herror create_distance_transform_xld(const Halcon::Hobject &Contour, const char *Mode, double MaxDistance, Halcon::HTuple *DistanceTransformID);
LIntExport Herror create_distance_transform_xld(const Halcon::Hobject &Contour, const char *Mode, double MaxDistance, Hlong *DistanceTransformID);
LIntExport Herror distance_contours_xld(const Halcon::Hobject &ContourFrom, const Halcon::Hobject &ContourTo, Halcon::Hobject *ContourOut, const Halcon::HTuple &Mode);
LIntExport Herror distance_contours_xld(const Halcon::Hobject &ContourFrom, const Halcon::Hobject &ContourTo,Halcon::Hobject *ContourOut, const char *Mode);
LIntExport Herror distance_cc_min(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const Halcon::HTuple &Mode, Halcon::HTuple *DistanceMin);
LIntExport Herror distance_cc_min(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const Halcon::HTuple &Mode, double *DistanceMin);
LIntExport Herror distance_cc_min(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const char *Mode, Halcon::HTuple *DistanceMin);
LIntExport Herror distance_cc_min(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const char *Mode, double *DistanceMin);
LIntExport Herror distance_cc(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const Halcon::HTuple &Mode, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_cc(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const Halcon::HTuple &Mode, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_cc(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const char *Mode, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_cc(const Halcon::Hobject &Contour1, const Halcon::Hobject &Contour2, const char *Mode, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_sc(const Halcon::Hobject &Contour, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_sc(const Halcon::Hobject &Contour, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_sc(const Halcon::Hobject &Contour, double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_sc(const Halcon::Hobject &Contour, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_lc(const Halcon::Hobject &Contour, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_lc(const Halcon::Hobject &Contour, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_lc(const Halcon::Hobject &Contour, double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_lc(const Halcon::Hobject &Contour, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_pc(const Halcon::Hobject &Contour, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_pc(const Halcon::Hobject &Contour, const Halcon::HTuple &Row, const Halcon::HTuple &Column, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_pc(const Halcon::Hobject &Contour, double Row, double Column, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_pc(const Halcon::Hobject &Contour, double Row, double Column, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_sr(const Halcon::Hobject &Region, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_sr(const Halcon::Hobject &Region, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_sr(const Halcon::Hobject &Region, double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_sr(const Halcon::Hobject &Region, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_lr(const Halcon::Hobject &Region, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_lr(const Halcon::Hobject &Region, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_lr(const Halcon::Hobject &Region, double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_lr(const Halcon::Hobject &Region, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_pr(const Halcon::Hobject &Region, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_pr(const Halcon::Hobject &Region, const Halcon::HTuple &Row, const Halcon::HTuple &Column, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_pr(const Halcon::Hobject &Region, double Row, double Column, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_pr(const Halcon::Hobject &Region, double Row, double Column, double *DistanceMin, double *DistanceMax);
LIntExport Herror angle_lx(const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *Angle);
LIntExport Herror angle_lx(const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, double *Angle);
LIntExport Herror angle_lx(double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *Angle);
LIntExport Herror angle_lx(double Row1, double Column1, double Row2, double Column2, double *Angle);
LIntExport Herror angle_ll(const Halcon::HTuple &RowA1, const Halcon::HTuple &ColumnA1, const Halcon::HTuple &RowA2, const Halcon::HTuple &ColumnA2, const Halcon::HTuple &RowB1, const Halcon::HTuple &ColumnB1, const Halcon::HTuple &RowB2, const Halcon::HTuple &ColumnB2, Halcon::HTuple *Angle);
LIntExport Herror angle_ll(const Halcon::HTuple &RowA1, const Halcon::HTuple &ColumnA1, const Halcon::HTuple &RowA2, const Halcon::HTuple &ColumnA2, const Halcon::HTuple &RowB1, const Halcon::HTuple &ColumnB1, const Halcon::HTuple &RowB2, const Halcon::HTuple &ColumnB2, double *Angle);
LIntExport Herror angle_ll(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, Halcon::HTuple *Angle);
LIntExport Herror angle_ll(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double *Angle);
LIntExport Herror distance_sl(const Halcon::HTuple &RowA1, const Halcon::HTuple &ColumnA1, const Halcon::HTuple &RowA2, const Halcon::HTuple &ColumnA2, const Halcon::HTuple &RowB1, const Halcon::HTuple &ColumnB1, const Halcon::HTuple &RowB2, const Halcon::HTuple &ColumnB2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_sl(const Halcon::HTuple &RowA1, const Halcon::HTuple &ColumnA1, const Halcon::HTuple &RowA2, const Halcon::HTuple &ColumnA2, const Halcon::HTuple &RowB1, const Halcon::HTuple &ColumnB1, const Halcon::HTuple &RowB2, const Halcon::HTuple &ColumnB2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_sl(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_sl(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_ss(const Halcon::HTuple &RowA1, const Halcon::HTuple &ColumnA1, const Halcon::HTuple &RowA2, const Halcon::HTuple &ColumnA2, const Halcon::HTuple &RowB1, const Halcon::HTuple &ColumnB1, const Halcon::HTuple &RowB2, const Halcon::HTuple &ColumnB2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_ss(const Halcon::HTuple &RowA1, const Halcon::HTuple &ColumnA1, const Halcon::HTuple &RowA2, const Halcon::HTuple &ColumnA2, const Halcon::HTuple &RowB1, const Halcon::HTuple &ColumnB1, const Halcon::HTuple &RowB2, const Halcon::HTuple &ColumnB2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_ss(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_ss(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_ps(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_ps(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_ps(double Row, double Column, double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *DistanceMin, Halcon::HTuple *DistanceMax);
LIntExport Herror distance_ps(double Row, double Column, double Row1, double Column1, double Row2, double Column2, double *DistanceMin, double *DistanceMax);
LIntExport Herror distance_pl(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *Distance);
LIntExport Herror distance_pl(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, double *Distance);
LIntExport Herror distance_pl(double Row, double Column, double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *Distance);
LIntExport Herror distance_pl(double Row, double Column, double Row1, double Column1, double Row2, double Column2, double *Distance);
LIntExport Herror distance_pp(const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, Halcon::HTuple *Distance);
LIntExport Herror distance_pp(const Halcon::HTuple &Row1, const Halcon::HTuple &Column1, const Halcon::HTuple &Row2, const Halcon::HTuple &Column2, double *Distance);
LIntExport Herror distance_pp(double Row1, double Column1, double Row2, double Column2, Halcon::HTuple *Distance);
LIntExport Herror distance_pp(double Row1, double Column1, double Row2, double Column2, double *Distance);
LIntExport Herror compose_funct_1d(const Halcon::HTuple &Function1, const Halcon::HTuple &Function2, const Halcon::HTuple &Border, Halcon::HTuple *ComposedFunction);
LIntExport Herror invert_funct_1d(const Halcon::HTuple &Function, Halcon::HTuple *InverseFunction);
LIntExport Herror derivate_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &Mode, Halcon::HTuple *Derivative);
LIntExport Herror local_min_max_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &Mode, const Halcon::HTuple &Interpolation, Halcon::HTuple *Min, Halcon::HTuple *Max);
LIntExport Herror zero_crossings_funct_1d(const Halcon::HTuple &Function, Halcon::HTuple *ZeroCrossings);
LIntExport Herror scale_y_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &Mult, const Halcon::HTuple &Add, Halcon::HTuple *FunctionScaled);
LIntExport Herror negate_funct_1d(const Halcon::HTuple &Function, Halcon::HTuple *FunctionInverted);
LIntExport Herror abs_funct_1d(const Halcon::HTuple &Function, Halcon::HTuple *FunctionAbsolute);
LIntExport Herror get_y_value_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &X, const Halcon::HTuple &Border, Halcon::HTuple *Y);
LIntExport Herror get_y_value_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &X, const Halcon::HTuple &Border, double *Y);
LIntExport Herror get_pair_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &Index, Halcon::HTuple *X, Halcon::HTuple *Y);
LIntExport Herror get_pair_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &Index, double *X, double *Y);
LIntExport Herror num_points_funct_1d(const Halcon::HTuple &Function, Halcon::HTuple *Length);
LIntExport Herror num_points_funct_1d(const Halcon::HTuple &Function, Hlong *Length);
LIntExport Herror y_range_funct_1d(const Halcon::HTuple &Function, Halcon::HTuple *YMin, Halcon::HTuple *YMax);
LIntExport Herror y_range_funct_1d(const Halcon::HTuple &Function, double *YMin, double *YMax);
LIntExport Herror x_range_funct_1d(const Halcon::HTuple &Function, Halcon::HTuple *XMin, Halcon::HTuple *XMax);
LIntExport Herror x_range_funct_1d(const Halcon::HTuple &Function, double *XMin, double *XMax);
LIntExport Herror funct_1d_to_pairs(const Halcon::HTuple &Function, Halcon::HTuple *XValues, Halcon::HTuple *YValues);
LIntExport Herror sample_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &XMin, const Halcon::HTuple &XMax, const Halcon::HTuple &XDist, const Halcon::HTuple &Border, Halcon::HTuple *SampledFunction);
LIntExport Herror transform_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &Params, Halcon::HTuple *TransformedFunction);
LIntExport Herror match_funct_1d_trans(const Halcon::HTuple &Function1, const Halcon::HTuple &Function2, const Halcon::HTuple &Border, const Halcon::HTuple &ParamsConst, const Halcon::HTuple &UseParams, Halcon::HTuple *Params, Halcon::HTuple *ChiSquare, Halcon::HTuple *Covar);
LIntExport Herror distance_funct_1d(const Halcon::HTuple &Function1, const Halcon::HTuple &Function2, const Halcon::HTuple &Mode, const Halcon::HTuple &Sigma, Halcon::HTuple *Distance);
LIntExport Herror smooth_funct_1d_gauss(const Halcon::HTuple &Function, const Halcon::HTuple &Sigma, Halcon::HTuple *SmoothedFunction);
LIntExport Herror integrate_funct_1d(const Halcon::HTuple &Function, Halcon::HTuple *Positive, Halcon::HTuple *Negative);
LIntExport Herror read_funct_1d(const Halcon::HTuple &FileName, Halcon::HTuple *Function);
LIntExport Herror read_funct_1d(const Halcon::HTuple &FileName, double *Function);
LIntExport Herror read_funct_1d(const char *FileName, Halcon::HTuple *Function);
LIntExport Herror read_funct_1d(const char *FileName, double *Function);
LIntExport Herror write_funct_1d(const Halcon::HTuple &Function, const Halcon::HTuple &FileName);
LIntExport Herror create_funct_1d_array(const Halcon::HTuple &YValues, Halcon::HTuple *Function);
LIntExport Herror create_funct_1d_array(double YValues, Halcon::HTuple *Function);
LIntExport Herror create_funct_1d_pairs(const Halcon::HTuple &XValues, const Halcon::HTuple &YValues, Halcon::HTuple *Function);
LIntExport Herror create_funct_1d_pairs(double XValues, double YValues, Halcon::HTuple *Function);
LIntExport Herror smooth_funct_1d_mean(const Halcon::HTuple &Function, const Halcon::HTuple &SmoothSize, const Halcon::HTuple &Iterations, Halcon::HTuple *SmoothedFunction);
LIntExport Herror match_fourier_coeff(const Halcon::HTuple &RealCoef1, const Halcon::HTuple &ImaginaryCoef1, const Halcon::HTuple &RealCoef2, const Halcon::HTuple &ImaginaryCoef2, const Halcon::HTuple &MaxCoef, const Halcon::HTuple &Damping, Halcon::HTuple *Distance);
LIntExport Herror match_fourier_coeff(const Halcon::HTuple &RealCoef1, const Halcon::HTuple &ImaginaryCoef1, const Halcon::HTuple &RealCoef2, const Halcon::HTuple &ImaginaryCoef2, const Halcon::HTuple &MaxCoef, const Halcon::HTuple &Damping, double *Distance);
LIntExport Herror fourier_1dim_inv(const Halcon::HTuple &RealCoef, const Halcon::HTuple &ImaginaryCoef, const Halcon::HTuple &MaxCoef, Halcon::HTuple *Rows, Halcon::HTuple *Columns);
LIntExport Herror abs_invar_fourier_coeff(const Halcon::HTuple &RealInvar, const Halcon::HTuple &ImaginaryInvar, const Halcon::HTuple &CoefP, const Halcon::HTuple &CoefQ, const Halcon::HTuple &AZInvar, Halcon::HTuple *RealAbsInvar, Halcon::HTuple *ImaginaryAbsInvar);
LIntExport Herror invar_fourier_coeff(const Halcon::HTuple &RealCoef, const Halcon::HTuple &ImaginaryCoef, const Halcon::HTuple &NormPar, const Halcon::HTuple &InvarType, Halcon::HTuple *RealInvar, Halcon::HTuple *ImaginaryInvar);
LIntExport Herror fourier_1dim(const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, const Halcon::HTuple &ParContour, const Halcon::HTuple &MaxCoef, Halcon::HTuple *RealCoef, Halcon::HTuple *ImaginaryCoef);
LIntExport Herror prep_contour_fourier(const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, const Halcon::HTuple &TransMode, Halcon::HTuple *ParContour);
LIntExport Herror move_contour_orig(const Halcon::HTuple &Rows, const Halcon::HTuple &Columns, Halcon::HTuple *RowsMoved, Halcon::HTuple *ColumnsMoved);
LIntExport Herror texture_laws(const Halcon::Hobject &Image, Halcon::Hobject *ImageTexture, const Halcon::HTuple &FilterTypes, const Halcon::HTuple &Shift, const Halcon::HTuple &FilterSize);
LIntExport Herror texture_laws(const Halcon::Hobject &Image,Halcon::Hobject *ImageTexture, const char *FilterTypes, Hlong Shift, Hlong FilterSize);
LIntExport Herror deviation_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageDeviation, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror deviation_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageDeviation, Hlong Width, Hlong Height);
LIntExport Herror entropy_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageEntropy, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror entropy_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageEntropy, Hlong Width, Hlong Height);
LIntExport Herror isotropic_diffusion(const Halcon::Hobject &Image, Halcon::Hobject *SmoothedImage, const Halcon::HTuple &Sigma, const Halcon::HTuple &Iterations);
LIntExport Herror isotropic_diffusion(const Halcon::Hobject &Image,Halcon::Hobject *SmoothedImage, double Sigma, Hlong Iterations);
LIntExport Herror anisotropic_diffusion(const Halcon::Hobject &Image, Halcon::Hobject *ImageAniso, const Halcon::HTuple &Mode, const Halcon::HTuple &Contrast, const Halcon::HTuple &Theta, const Halcon::HTuple &Iterations);
LIntExport Herror anisotropic_diffusion(const Halcon::Hobject &Image,Halcon::Hobject *ImageAniso, const char *Mode, double Contrast, double Theta, Hlong Iterations);
LIntExport Herror smooth_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageSmooth, const Halcon::HTuple &Filter, const Halcon::HTuple &Alpha);
LIntExport Herror smooth_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageSmooth, const char *Filter, double Alpha);
LIntExport Herror sigma_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageSigma, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &Sigma);
LIntExport Herror sigma_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageSigma, Hlong MaskHeight, Hlong MaskWidth, Hlong Sigma);
LIntExport Herror midrange_image(const Halcon::Hobject &Image, const Halcon::Hobject &Mask, Halcon::Hobject *ImageMidrange, const Halcon::HTuple &Margin);
LIntExport Herror trimmed_mean(const Halcon::Hobject &Image, const Halcon::Hobject &Mask, Halcon::Hobject *ImageTMean, const Halcon::HTuple &Number, const Halcon::HTuple &Margin);
LIntExport Herror median_separate(const Halcon::Hobject &Image, Halcon::Hobject *ImageSMedian, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &Margin);
LIntExport Herror median_rect(const Halcon::Hobject &Image, Halcon::Hobject *ImageMedian, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight);
LIntExport Herror median_rect(const Halcon::Hobject &Image,Halcon::Hobject *ImageMedian, Hlong MaskWidth, Hlong MaskHeight);
LIntExport Herror median_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageMedian, const Halcon::HTuple &MaskType, const Halcon::HTuple &Radius, const Halcon::HTuple &Margin);
LIntExport Herror median_weighted(const Halcon::Hobject &Image, Halcon::Hobject *ImageWMedian, const Halcon::HTuple &MaskType, const Halcon::HTuple &MaskSize);
LIntExport Herror median_weighted(const Halcon::Hobject &Image,Halcon::Hobject *ImageWMedian, const char *MaskType, Hlong MaskSize);
LIntExport Herror rank_rect(const Halcon::Hobject &Image, Halcon::Hobject *ImageRank, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &Rank);
LIntExport Herror rank_rect(const Halcon::Hobject &Image,Halcon::Hobject *ImageRank, Hlong MaskWidth, Hlong MaskHeight, Hlong Rank);
LIntExport Herror rank_image(const Halcon::Hobject &Image, const Halcon::Hobject &Mask, Halcon::Hobject *ImageRank, const Halcon::HTuple &Rank, const Halcon::HTuple &Margin);
LIntExport Herror dual_rank(const Halcon::Hobject &Image, Halcon::Hobject *ImageRank, const Halcon::HTuple &MaskType, const Halcon::HTuple &Radius, const Halcon::HTuple &ModePercent, const Halcon::HTuple &Margin);
LIntExport Herror mean_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageMean, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight);
LIntExport Herror mean_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageMean, Hlong MaskWidth, Hlong MaskHeight);
LIntExport Herror info_smooth(const Halcon::HTuple &Filter, const Halcon::HTuple &Alpha, Halcon::HTuple *Size, Halcon::HTuple *Coeffs);
LIntExport Herror info_smooth(const char *Filter, double Alpha, Halcon::HTuple *Size, Halcon::HTuple *Coeffs);
LIntExport Herror binomial_filter(const Halcon::Hobject &Image, Halcon::Hobject *ImageBinomial, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight);
LIntExport Herror binomial_filter(const Halcon::Hobject &Image,Halcon::Hobject *ImageBinomial, Hlong MaskWidth, Hlong MaskHeight);
LIntExport Herror gauss_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageGauss, const Halcon::HTuple &Size);
LIntExport Herror gauss_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageGauss, Hlong Size);
LIntExport Herror gauss_filter(const Halcon::Hobject &Image, Halcon::Hobject *ImageGauss, const Halcon::HTuple &Size);
LIntExport Herror gauss_filter(const Halcon::Hobject &Image,Halcon::Hobject *ImageGauss, Hlong Size);
LIntExport Herror eliminate_min_max(const Halcon::Hobject &Image, Halcon::Hobject *FilteredImage, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &Gap, const Halcon::HTuple &Mode);
LIntExport Herror eliminate_min_max(const Halcon::Hobject &Image,Halcon::Hobject *FilteredImage, Hlong MaskWidth, Hlong MaskHeight, double Gap, Hlong Mode);
LIntExport Herror anisotrope_diff(const Halcon::Hobject &Image, Halcon::Hobject *ImageAniso, const Halcon::HTuple &Percent, const Halcon::HTuple &Mode, const Halcon::HTuple &Iteration, const Halcon::HTuple &NeighborhoodType);
LIntExport Herror anisotrope_diff(const Halcon::Hobject &Image,Halcon::Hobject *ImageAniso, Hlong Percent, Hlong Mode, Hlong Iteration, Hlong NeighborhoodType);
LIntExport Herror fill_interlace(const Halcon::Hobject &ImageCamera, Halcon::Hobject *ImageFilled, const Halcon::HTuple &Mode);
LIntExport Herror fill_interlace(const Halcon::Hobject &ImageCamera,Halcon::Hobject *ImageFilled, const char *Mode);
LIntExport Herror rank_n(const Halcon::Hobject &Image, Halcon::Hobject *RankImage, const Halcon::HTuple &RankIndex);
LIntExport Herror rank_n(const Halcon::Hobject &Image,Halcon::Hobject *RankImage, Hlong RankIndex);
LIntExport Herror mean_n(const Halcon::Hobject &Image, Halcon::Hobject *ImageMean);
LIntExport Herror eliminate_sp(const Halcon::Hobject &Image, Halcon::Hobject *ImageFillSP, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MinThresh, const Halcon::HTuple &MaxThresh);
LIntExport Herror eliminate_sp(const Halcon::Hobject &Image,Halcon::Hobject *ImageFillSP, Hlong MaskWidth, Hlong MaskHeight, Hlong MinThresh, Hlong MaxThresh);
LIntExport Herror mean_sp(const Halcon::Hobject &Image, Halcon::Hobject *ImageSPMean, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MinThresh, const Halcon::HTuple &MaxThresh);
LIntExport Herror mean_sp(const Halcon::Hobject &Image,Halcon::Hobject *ImageSPMean, Hlong MaskWidth, Hlong MaskHeight, Hlong MinThresh, Hlong MaxThresh);
LIntExport Herror points_sojka(const Halcon::Hobject &Image, const Halcon::HTuple &MaskSize, const Halcon::HTuple &SigmaW, const Halcon::HTuple &SigmaD, const Halcon::HTuple &MinGrad, const Halcon::HTuple &MinApparentness, const Halcon::HTuple &MinAngle, const Halcon::HTuple &Subpix, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror points_sojka(const Halcon::Hobject &Image, Hlong MaskSize, double SigmaW, double SigmaD, double MinGrad, double MinApparentness, double MinAngle, const char *Subpix, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror dots_image(const Halcon::Hobject &Image, Halcon::Hobject *DotImage, const Halcon::HTuple &Diameter, const Halcon::HTuple &FilterType, const Halcon::HTuple &PixelShift);
LIntExport Herror dots_image(const Halcon::Hobject &Image,Halcon::Hobject *DotImage, Hlong Diameter, const char *FilterType, Hlong PixelShift);
LIntExport Herror local_min_sub_pix(const Halcon::Hobject &Image, const Halcon::HTuple &Filter, const Halcon::HTuple &Sigma, const Halcon::HTuple &Threshold, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror local_min_sub_pix(const Halcon::Hobject &Image, const char *Filter, double Sigma, double Threshold, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror local_max_sub_pix(const Halcon::Hobject &Image, const Halcon::HTuple &Filter, const Halcon::HTuple &Sigma, const Halcon::HTuple &Threshold, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror local_max_sub_pix(const Halcon::Hobject &Image, const char *Filter, double Sigma, double Threshold, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror saddle_points_sub_pix(const Halcon::Hobject &Image, const Halcon::HTuple &Filter, const Halcon::HTuple &Sigma, const Halcon::HTuple &Threshold, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror saddle_points_sub_pix(const Halcon::Hobject &Image, const char *Filter, double Sigma, double Threshold, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror critical_points_sub_pix(const Halcon::Hobject &Image, const Halcon::HTuple &Filter, const Halcon::HTuple &Sigma, const Halcon::HTuple &Threshold, Halcon::HTuple *RowMin, Halcon::HTuple *ColumnMin, Halcon::HTuple *RowMax, Halcon::HTuple *ColumnMax, Halcon::HTuple *RowSaddle, Halcon::HTuple *ColumnSaddle);
LIntExport Herror critical_points_sub_pix(const Halcon::Hobject &Image, const char *Filter, double Sigma, double Threshold, Halcon::HTuple *RowMin, Halcon::HTuple *ColumnMin, Halcon::HTuple *RowMax, Halcon::HTuple *ColumnMax, Halcon::HTuple *RowSaddle, Halcon::HTuple *ColumnSaddle);
LIntExport Herror points_harris(const Halcon::Hobject &Image, const Halcon::HTuple &SigmaGrad, const Halcon::HTuple &SigmaSmooth, const Halcon::HTuple &Alpha, const Halcon::HTuple &Threshold, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror points_harris(const Halcon::Hobject &Image, double SigmaGrad, double SigmaSmooth, double Alpha, double Threshold, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror points_harris_binomial(const Halcon::Hobject &Image, const Halcon::HTuple &MaskSizeGrad, const Halcon::HTuple &MaskSizeSmooth, const Halcon::HTuple &Alpha, const Halcon::HTuple &Threshold, const Halcon::HTuple &Subpix, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror points_harris_binomial(const Halcon::Hobject &Image, Hlong MaskSizeGrad, Hlong MaskSizeSmooth, double Alpha, double Threshold, const char *Subpix, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror points_lepetit(const Halcon::Hobject &Image, const Halcon::HTuple &Radius, const Halcon::HTuple &CheckNeighbor, const Halcon::HTuple &MinCheckNeighborDiff, const Halcon::HTuple &MinScore, const Halcon::HTuple &Subpix, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror points_lepetit(const Halcon::Hobject &Image, Hlong Radius, Hlong CheckNeighbor, Hlong MinCheckNeighborDiff, Hlong MinScore, const char *Subpix, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror points_foerstner(const Halcon::Hobject &Image, const Halcon::HTuple &SigmaGrad, const Halcon::HTuple &SigmaInt, const Halcon::HTuple &SigmaPoints, const Halcon::HTuple &ThreshInhom, const Halcon::HTuple &ThreshShape, const Halcon::HTuple &Smoothing, const Halcon::HTuple &EliminateDoublets, Halcon::HTuple *RowJunctions, Halcon::HTuple *ColumnJunctions, Halcon::HTuple *CoRRJunctions, Halcon::HTuple *CoRCJunctions, Halcon::HTuple *CoCCJunctions, Halcon::HTuple *RowArea, Halcon::HTuple *ColumnArea, Halcon::HTuple *CoRRArea, Halcon::HTuple *CoRCArea, Halcon::HTuple *CoCCArea);
LIntExport Herror points_foerstner(const Halcon::Hobject &Image, double SigmaGrad, double SigmaInt, double SigmaPoints, double ThreshInhom, double ThreshShape, const char *Smoothing, const char *EliminateDoublets, Halcon::HTuple *RowJunctions, Halcon::HTuple *ColumnJunctions, Halcon::HTuple *CoRRJunctions, Halcon::HTuple *CoRCJunctions, Halcon::HTuple *CoCCJunctions, Halcon::HTuple *RowArea, Halcon::HTuple *ColumnArea, Halcon::HTuple *CoRRArea, Halcon::HTuple *CoRCArea, Halcon::HTuple *CoCCArea);
LIntExport Herror estimate_noise(const Halcon::Hobject &Image, const Halcon::HTuple &Method, const Halcon::HTuple &Percent, Halcon::HTuple *Sigma);
LIntExport Herror estimate_noise(const Halcon::Hobject &Image, const Halcon::HTuple &Method, const Halcon::HTuple &Percent, double *Sigma);
LIntExport Herror estimate_noise(const Halcon::Hobject &Image, const char *Method, double Percent, Halcon::HTuple *Sigma);
LIntExport Herror estimate_noise(const Halcon::Hobject &Image, const char *Method, double Percent, double *Sigma);
LIntExport Herror noise_distribution_mean(const Halcon::Hobject &ConstRegion, const Halcon::Hobject &Image, const Halcon::HTuple &FilterSize, Halcon::HTuple *Distribution);
LIntExport Herror noise_distribution_mean(const Halcon::Hobject &ConstRegion, const Halcon::Hobject &Image, Hlong FilterSize, Halcon::HTuple *Distribution);
LIntExport Herror add_noise_white(const Halcon::Hobject &Image, Halcon::Hobject *ImageNoise, const Halcon::HTuple &Amp);
LIntExport Herror add_noise_white(const Halcon::Hobject &Image,Halcon::Hobject *ImageNoise, double Amp);
LIntExport Herror add_noise_distribution(const Halcon::Hobject &Image, Halcon::Hobject *ImageNoise, const Halcon::HTuple &Distribution);
LIntExport Herror gauss_distribution(const Halcon::HTuple &Sigma, Halcon::HTuple *Distribution);
LIntExport Herror gauss_distribution(double Sigma, Halcon::HTuple *Distribution);
LIntExport Herror sp_distribution(const Halcon::HTuple &PercentSalt, const Halcon::HTuple &PercentPepper, Halcon::HTuple *Distribution);
LIntExport Herror sp_distribution(double PercentSalt, double PercentPepper, Halcon::HTuple *Distribution);
LIntExport Herror deviation_n(const Halcon::Hobject &Image, Halcon::Hobject *ImageDeviation);
LIntExport Herror inpainting_texture(const Halcon::Hobject &Image, const Halcon::Hobject &Region, Halcon::Hobject *InpaintedImage, const Halcon::HTuple &MaskSize, const Halcon::HTuple &SearchSize, const Halcon::HTuple &Anisotropy, const Halcon::HTuple &PostIteration, const Halcon::HTuple &Smoothness);
LIntExport Herror inpainting_texture(const Halcon::Hobject &Image, const Halcon::Hobject &Region,Halcon::Hobject *InpaintedImage, Hlong MaskSize, Hlong SearchSize, double Anisotropy, const char *PostIteration, double Smoothness);
LIntExport Herror inpainting_ct(const Halcon::Hobject &Image, const Halcon::Hobject &Region, Halcon::Hobject *InpaintedImage, const Halcon::HTuple &Epsilon, const Halcon::HTuple &Kappa, const Halcon::HTuple &Sigma, const Halcon::HTuple &Rho, const Halcon::HTuple &ChannelCoefficients);
LIntExport Herror inpainting_ct(const Halcon::Hobject &Image, const Halcon::Hobject &Region,Halcon::Hobject *InpaintedImage, double Epsilon, double Kappa, double Sigma, double Rho, double ChannelCoefficients);
LIntExport Herror inpainting_mcf(const Halcon::Hobject &Image, const Halcon::Hobject &Region, Halcon::Hobject *InpaintedImage, const Halcon::HTuple &Sigma, const Halcon::HTuple &Theta, const Halcon::HTuple &Iterations);
LIntExport Herror inpainting_mcf(const Halcon::Hobject &Image, const Halcon::Hobject &Region,Halcon::Hobject *InpaintedImage, double Sigma, double Theta, Hlong Iterations);
LIntExport Herror inpainting_ced(const Halcon::Hobject &Image, const Halcon::Hobject &Region, Halcon::Hobject *InpaintedImage, const Halcon::HTuple &Sigma, const Halcon::HTuple &Rho, const Halcon::HTuple &Theta, const Halcon::HTuple &Iterations);
LIntExport Herror inpainting_ced(const Halcon::Hobject &Image, const Halcon::Hobject &Region,Halcon::Hobject *InpaintedImage, double Sigma, double Rho, double Theta, Hlong Iterations);
LIntExport Herror inpainting_aniso(const Halcon::Hobject &Image, const Halcon::Hobject &Region, Halcon::Hobject *InpaintedImage, const Halcon::HTuple &Mode, const Halcon::HTuple &Contrast, const Halcon::HTuple &Theta, const Halcon::HTuple &Iterations, const Halcon::HTuple &Rho);
LIntExport Herror inpainting_aniso(const Halcon::Hobject &Image, const Halcon::Hobject &Region,Halcon::Hobject *InpaintedImage, const char *Mode, double Contrast, double Theta, Hlong Iterations, double Rho);
LIntExport Herror harmonic_interpolation(const Halcon::Hobject &Image, const Halcon::Hobject &Region, Halcon::Hobject *InpaintedImage, const Halcon::HTuple &Precision);
LIntExport Herror harmonic_interpolation(const Halcon::Hobject &Image, const Halcon::Hobject &Region,Halcon::Hobject *InpaintedImage, double Precision);
LIntExport Herror expand_domain_gray(const Halcon::Hobject &InputImage, Halcon::Hobject *ExpandedImage, const Halcon::HTuple &ExpansionRange);
LIntExport Herror expand_domain_gray(const Halcon::Hobject &InputImage,Halcon::Hobject *ExpandedImage, Hlong ExpansionRange);
LIntExport Herror topographic_sketch(const Halcon::Hobject &Image, Halcon::Hobject *Sketch);
LIntExport Herror linear_trans_color(const Halcon::Hobject &Image, Halcon::Hobject *ImageTrans, const Halcon::HTuple &TransMat);
LIntExport Herror gen_principal_comp_trans(const Halcon::Hobject &MultichannelImage, Halcon::HTuple *Trans, Halcon::HTuple *TransInv, Halcon::HTuple *Mean, Halcon::HTuple *Cov, Halcon::HTuple *InfoPerComp);
LIntExport Herror principal_comp(const Halcon::Hobject &MultichannelImage, Halcon::Hobject *PCAImage, Halcon::HTuple *InfoPerComp);
LIntExport Herror fuzzy_entropy(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Apar, const Halcon::HTuple &Cpar, Halcon::HTuple *Entropy);
LIntExport Herror fuzzy_entropy(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Apar, const Halcon::HTuple &Cpar, double *Entropy);
LIntExport Herror fuzzy_entropy(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Hlong Apar, Hlong Cpar, Halcon::HTuple *Entropy);
LIntExport Herror fuzzy_entropy(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Hlong Apar, Hlong Cpar, double *Entropy);
LIntExport Herror fuzzy_perimeter(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Apar, const Halcon::HTuple &Cpar, Halcon::HTuple *Perimeter);
LIntExport Herror fuzzy_perimeter(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Apar, const Halcon::HTuple &Cpar, double *Perimeter);
LIntExport Herror fuzzy_perimeter(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Hlong Apar, Hlong Cpar, Halcon::HTuple *Perimeter);
LIntExport Herror fuzzy_perimeter(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Hlong Apar, Hlong Cpar, double *Perimeter);
LIntExport Herror gray_closing_shape(const Halcon::Hobject &Image, Halcon::Hobject *ImageClosing, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskShape);
LIntExport Herror gray_closing_shape(const Halcon::Hobject &Image,Halcon::Hobject *ImageClosing, double MaskHeight, double MaskWidth, const char *MaskShape);
LIntExport Herror gray_opening_shape(const Halcon::Hobject &Image, Halcon::Hobject *ImageOpening, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskShape);
LIntExport Herror gray_opening_shape(const Halcon::Hobject &Image,Halcon::Hobject *ImageOpening, double MaskHeight, double MaskWidth, const char *MaskShape);
LIntExport Herror gray_erosion_shape(const Halcon::Hobject &Image, Halcon::Hobject *ImageMin, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskShape);
LIntExport Herror gray_erosion_shape(const Halcon::Hobject &Image,Halcon::Hobject *ImageMin, double MaskHeight, double MaskWidth, const char *MaskShape);
LIntExport Herror gray_dilation_shape(const Halcon::Hobject &Image, Halcon::Hobject *ImageMax, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskShape);
LIntExport Herror gray_dilation_shape(const Halcon::Hobject &Image,Halcon::Hobject *ImageMax, double MaskHeight, double MaskWidth, const char *MaskShape);
LIntExport Herror gray_range_rect(const Halcon::Hobject &Image, Halcon::Hobject *ImageResult, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth);
LIntExport Herror gray_range_rect(const Halcon::Hobject &Image,Halcon::Hobject *ImageResult, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror gray_closing_rect(const Halcon::Hobject &Image, Halcon::Hobject *ImageClosing, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth);
LIntExport Herror gray_closing_rect(const Halcon::Hobject &Image,Halcon::Hobject *ImageClosing, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror gray_opening_rect(const Halcon::Hobject &Image, Halcon::Hobject *ImageOpening, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth);
LIntExport Herror gray_opening_rect(const Halcon::Hobject &Image,Halcon::Hobject *ImageOpening, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror gray_erosion_rect(const Halcon::Hobject &Image, Halcon::Hobject *ImageMin, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth);
LIntExport Herror gray_erosion_rect(const Halcon::Hobject &Image,Halcon::Hobject *ImageMin, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror gray_dilation_rect(const Halcon::Hobject &Image, Halcon::Hobject *ImageMax, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &MaskWidth);
LIntExport Herror gray_dilation_rect(const Halcon::Hobject &Image,Halcon::Hobject *ImageMax, Hlong MaskHeight, Hlong MaskWidth);
LIntExport Herror gray_skeleton(const Halcon::Hobject &Image, Halcon::Hobject *GraySkeleton);
LIntExport Herror lut_trans(const Halcon::Hobject &Image, Halcon::Hobject *ImageResult, const Halcon::HTuple &Lut);
LIntExport Herror convol_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageResult, const Halcon::HTuple &FilterMask, const Halcon::HTuple &Margin);
LIntExport Herror convert_image_type(const Halcon::Hobject &Image, Halcon::Hobject *ImageConverted, const Halcon::HTuple &NewType);
LIntExport Herror convert_image_type(const Halcon::Hobject &Image,Halcon::Hobject *ImageConverted, const char *NewType);
LIntExport Herror real_to_vector_field(const Halcon::Hobject &Row, const Halcon::Hobject &Col, Halcon::Hobject *VectorField, const Halcon::HTuple &Type);
LIntExport Herror real_to_vector_field(const Halcon::Hobject &Row, const Halcon::Hobject &Col,Halcon::Hobject *VectorField, const char *Type);
LIntExport Herror vector_field_to_real(const Halcon::Hobject &VectorField, Halcon::Hobject *Row, Halcon::Hobject *Col);
LIntExport Herror real_to_complex(const Halcon::Hobject &ImageReal, const Halcon::Hobject &ImageImaginary, Halcon::Hobject *ImageComplex);
LIntExport Herror complex_to_real(const Halcon::Hobject &ImageComplex, Halcon::Hobject *ImageReal, Halcon::Hobject *ImageImaginary);
LIntExport Herror region_to_mean(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::Hobject *ImageMean);
LIntExport Herror gray_inside(const Halcon::Hobject &Image, Halcon::Hobject *ImageDist);
LIntExport Herror symmetry(const Halcon::Hobject &Image, Halcon::Hobject *ImageSymmetry, const Halcon::HTuple &MaskSize, const Halcon::HTuple &Direction, const Halcon::HTuple &Exponent);
LIntExport Herror symmetry(const Halcon::Hobject &Image,Halcon::Hobject *ImageSymmetry, Hlong MaskSize, double Direction, double Exponent);
LIntExport Herror select_grayvalues_from_channels(const Halcon::Hobject &MultichannelImage, const Halcon::Hobject &IndexImage, Halcon::Hobject *Selected);
LIntExport Herror depth_from_focus(const Halcon::Hobject &MultiFocusImage, Halcon::Hobject *Depth, Halcon::Hobject *Confidence, const Halcon::HTuple &Filter, const Halcon::HTuple &Selection);
LIntExport Herror scene_flow_calib(const Halcon::Hobject &ImageRect1T1, const Halcon::Hobject &ImageRect2T1, const Halcon::Hobject &ImageRect1T2, const Halcon::Hobject &ImageRect2T2, const Halcon::Hobject &Disparity, const Halcon::HTuple &SmoothingFlow, const Halcon::HTuple &SmoothingDisparity, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, Halcon::HTuple *ObjectModel3D);
LIntExport Herror scene_flow_calib(const Halcon::Hobject &ImageRect1T1, const Halcon::Hobject &ImageRect2T1, const Halcon::Hobject &ImageRect1T2, const Halcon::Hobject &ImageRect2T2, const Halcon::Hobject &Disparity, const Halcon::HTuple &SmoothingFlow, const Halcon::HTuple &SmoothingDisparity, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, const Halcon::HTuple &CamParamRect1, const Halcon::HTuple &CamParamRect2, const Halcon::HTuple &RelPoseRect, Hlong *ObjectModel3D);
LIntExport Herror scene_flow_uncalib(const Halcon::Hobject &ImageRect1T1, const Halcon::Hobject &ImageRect2T1, const Halcon::Hobject &ImageRect1T2, const Halcon::Hobject &ImageRect2T2, const Halcon::Hobject &Disparity, Halcon::Hobject *OpticalFlow, Halcon::Hobject *DisparityChange, const Halcon::HTuple &SmoothingFlow, const Halcon::HTuple &SmoothingDisparity, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror unwarp_image_vector_field(const Halcon::Hobject &Image, const Halcon::Hobject &VectorField, Halcon::Hobject *ImageUnwarped);
LIntExport Herror derivate_vector_field(const Halcon::Hobject &VectorField, Halcon::Hobject *Result, const Halcon::HTuple &Sigma, const Halcon::HTuple &Component);
LIntExport Herror derivate_vector_field(const Halcon::Hobject &VectorField,Halcon::Hobject *Result, double Sigma, const char *Component);
LIntExport Herror vector_field_length(const Halcon::Hobject &VectorField, Halcon::Hobject *Length, const Halcon::HTuple &Mode);
LIntExport Herror vector_field_length(const Halcon::Hobject &VectorField,Halcon::Hobject *Length, const char *Mode);
LIntExport Herror optical_flow_mg(const Halcon::Hobject &ImageT1, const Halcon::Hobject &ImageT2, Halcon::Hobject *VectorField, const Halcon::HTuple &Algorithm, const Halcon::HTuple &SmoothingSigma, const Halcon::HTuple &IntegrationSigma, const Halcon::HTuple &FlowSmoothness, const Halcon::HTuple &GradientConstancy, const Halcon::HTuple &MGParamName, const Halcon::HTuple &MGParamValue);
LIntExport Herror exhaustive_match_mg(const Halcon::Hobject &Image, const Halcon::Hobject &ImageTemplate, Halcon::Hobject *ImageMatch, const Halcon::HTuple &Mode, const Halcon::HTuple &Level, const Halcon::HTuple &Threshold);
LIntExport Herror exhaustive_match_mg(const Halcon::Hobject &Image, const Halcon::Hobject &ImageTemplate,Halcon::Hobject *ImageMatch, const char *Mode, Hlong Level, Hlong Threshold);
LIntExport Herror create_template_rot(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevel, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtend, const Halcon::HTuple &AngleStep, const Halcon::HTuple &Optimize, const Halcon::HTuple &GrayValues, Halcon::HTuple *TemplateID);
LIntExport Herror create_template_rot(const Halcon::Hobject &Template, const Halcon::HTuple &NumLevel, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtend, const Halcon::HTuple &AngleStep, const Halcon::HTuple &Optimize, const Halcon::HTuple &GrayValues, Hlong *TemplateID);
LIntExport Herror create_template_rot(const Halcon::Hobject &Template, Hlong NumLevel, double AngleStart, double AngleExtend, double AngleStep, const char *Optimize, const char *GrayValues, Halcon::HTuple *TemplateID);
LIntExport Herror create_template_rot(const Halcon::Hobject &Template, Hlong NumLevel, double AngleStart, double AngleExtend, double AngleStep, const char *Optimize, const char *GrayValues, Hlong *TemplateID);
LIntExport Herror create_template(const Halcon::Hobject &Template, const Halcon::HTuple &FirstError, const Halcon::HTuple &NumLevel, const Halcon::HTuple &Optimize, const Halcon::HTuple &GrayValues, Halcon::HTuple *TemplateID);
LIntExport Herror create_template(const Halcon::Hobject &Template, const Halcon::HTuple &FirstError, const Halcon::HTuple &NumLevel, const Halcon::HTuple &Optimize, const Halcon::HTuple &GrayValues, Hlong *TemplateID);
LIntExport Herror create_template(const Halcon::Hobject &Template, Hlong FirstError, Hlong NumLevel, const char *Optimize, const char *GrayValues, Halcon::HTuple *TemplateID);
LIntExport Herror create_template(const Halcon::Hobject &Template, Hlong FirstError, Hlong NumLevel, const char *Optimize, const char *GrayValues, Hlong *TemplateID);
LIntExport Herror serialize_template(const Halcon::HTuple &TemplateID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_template(const Halcon::HTuple &TemplateID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_template(Hlong TemplateID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_template(Hlong TemplateID, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_template(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *TemplateID);
LIntExport Herror deserialize_template(const Halcon::HTuple &SerializedItemHandle, Hlong *TemplateID);
LIntExport Herror deserialize_template(Hlong SerializedItemHandle, Halcon::HTuple *TemplateID);
LIntExport Herror deserialize_template(Hlong SerializedItemHandle, Hlong *TemplateID);
LIntExport Herror write_template(const Halcon::HTuple &TemplateID, const Halcon::HTuple &FileName);
LIntExport Herror write_template(Hlong TemplateID, const char *FileName);
LIntExport Herror read_template(const Halcon::HTuple &FileName, Halcon::HTuple *TemplateID);
LIntExport Herror read_template(const Halcon::HTuple &FileName, Hlong *TemplateID);
LIntExport Herror read_template(const char *FileName, Halcon::HTuple *TemplateID);
LIntExport Herror read_template(const char *FileName, Hlong *TemplateID);
LIntExport Herror clear_all_templates(void);
LIntExport Herror clear_template(const Halcon::HTuple &TemplateID);
LIntExport Herror clear_template(Hlong TemplateID);
LIntExport Herror set_offset_template(const Halcon::HTuple &TemplateID, const Halcon::HTuple &GrayOffset);
LIntExport Herror set_offset_template(Hlong TemplateID, Hlong GrayOffset);
LIntExport Herror set_reference_template(const Halcon::HTuple &TemplateID, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror set_reference_template(Hlong TemplateID, double Row, double Column);
LIntExport Herror adapt_template(const Halcon::Hobject &Image, const Halcon::HTuple &TemplateID);
LIntExport Herror adapt_template(const Halcon::Hobject &Image, Hlong TemplateID);
LIntExport Herror fast_match_mg(const Halcon::Hobject &Image, Halcon::Hobject *Matches, const Halcon::HTuple &TemplateID, const Halcon::HTuple &MaxError, const Halcon::HTuple &NumLevel);
LIntExport Herror fast_match_mg(const Halcon::Hobject &Image,Halcon::Hobject *Matches, Hlong TemplateID, double MaxError, Hlong NumLevel);
LIntExport Herror best_match_pre_mg(const Halcon::Hobject &ImagePyramid, const Halcon::HTuple &TemplateID, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &WhichLevels, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Error);
LIntExport Herror best_match_pre_mg(const Halcon::Hobject &ImagePyramid, const Halcon::HTuple &TemplateID, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &WhichLevels, double *Row, double *Column, double *Error);
LIntExport Herror best_match_pre_mg(const Halcon::Hobject &ImagePyramid, Hlong TemplateID, double MaxError, const char *SubPixel, Hlong NumLevels, Hlong WhichLevels, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Error);
LIntExport Herror best_match_pre_mg(const Halcon::Hobject &ImagePyramid, Hlong TemplateID, double MaxError, const char *SubPixel, Hlong NumLevels, Hlong WhichLevels, double *Row, double *Column, double *Error);
LIntExport Herror best_match_mg(const Halcon::Hobject &Image, const Halcon::HTuple &TemplateID, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &WhichLevels, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Error);
LIntExport Herror best_match_mg(const Halcon::Hobject &Image, const Halcon::HTuple &TemplateID, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, const Halcon::HTuple &WhichLevels, double *Row, double *Column, double *Error);
LIntExport Herror best_match_mg(const Halcon::Hobject &Image, Hlong TemplateID, double MaxError, const char *SubPixel, Hlong NumLevels, Hlong WhichLevels, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Error);
LIntExport Herror best_match_mg(const Halcon::Hobject &Image, Hlong TemplateID, double MaxError, const char *SubPixel, Hlong NumLevels, Hlong WhichLevels, double *Row, double *Column, double *Error);
LIntExport Herror fast_match(const Halcon::Hobject &Image, Halcon::Hobject *Matches, const Halcon::HTuple &TemplateID, const Halcon::HTuple &MaxError);
LIntExport Herror fast_match(const Halcon::Hobject &Image,Halcon::Hobject *Matches, Hlong TemplateID, double MaxError);
LIntExport Herror best_match_rot_mg(const Halcon::Hobject &Image, const Halcon::HTuple &TemplateID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtend, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Error);
LIntExport Herror best_match_rot_mg(const Halcon::Hobject &Image, const Halcon::HTuple &TemplateID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtend, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, const Halcon::HTuple &NumLevels, double *Row, double *Column, double *Angle, double *Error);
LIntExport Herror best_match_rot_mg(const Halcon::Hobject &Image, Hlong TemplateID, double AngleStart, double AngleExtend, double MaxError, const char *SubPixel, Hlong NumLevels, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Error);
LIntExport Herror best_match_rot_mg(const Halcon::Hobject &Image, Hlong TemplateID, double AngleStart, double AngleExtend, double MaxError, const char *SubPixel, Hlong NumLevels, double *Row, double *Column, double *Angle, double *Error);
LIntExport Herror best_match_rot(const Halcon::Hobject &Image, const Halcon::HTuple &TemplateID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtend, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Error);
LIntExport Herror best_match_rot(const Halcon::Hobject &Image, const Halcon::HTuple &TemplateID, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleExtend, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, double *Row, double *Column, double *Angle, double *Error);
LIntExport Herror best_match_rot(const Halcon::Hobject &Image, Hlong TemplateID, double AngleStart, double AngleExtend, double MaxError, const char *SubPixel, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Angle, Halcon::HTuple *Error);
LIntExport Herror best_match_rot(const Halcon::Hobject &Image, Hlong TemplateID, double AngleStart, double AngleExtend, double MaxError, const char *SubPixel, double *Row, double *Column, double *Angle, double *Error);
LIntExport Herror best_match(const Halcon::Hobject &Image, const Halcon::HTuple &TemplateID, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Error);
LIntExport Herror best_match(const Halcon::Hobject &Image, const Halcon::HTuple &TemplateID, const Halcon::HTuple &MaxError, const Halcon::HTuple &SubPixel, double *Row, double *Column, double *Error);
LIntExport Herror best_match(const Halcon::Hobject &Image, Hlong TemplateID, double MaxError, const char *SubPixel, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Error);
LIntExport Herror best_match(const Halcon::Hobject &Image, Hlong TemplateID, double MaxError, const char *SubPixel, double *Row, double *Column, double *Error);
LIntExport Herror exhaustive_match(const Halcon::Hobject &Image, const Halcon::Hobject &RegionOfInterest, const Halcon::Hobject &ImageTemplate, Halcon::Hobject *ImageMatch, const Halcon::HTuple &Mode);
LIntExport Herror exhaustive_match(const Halcon::Hobject &Image, const Halcon::Hobject &RegionOfInterest, const Halcon::Hobject &ImageTemplate,Halcon::Hobject *ImageMatch, const char *Mode);
LIntExport Herror corner_response(const Halcon::Hobject &Image, Halcon::Hobject *ImageCorner, const Halcon::HTuple &Size, const Halcon::HTuple &Weight);
LIntExport Herror corner_response(const Halcon::Hobject &Image,Halcon::Hobject *ImageCorner, Hlong Size, double Weight);
LIntExport Herror gen_gauss_pyramid(const Halcon::Hobject &Image, Halcon::Hobject *ImagePyramid, const Halcon::HTuple &Mode, const Halcon::HTuple &Scale);
LIntExport Herror gen_gauss_pyramid(const Halcon::Hobject &Image,Halcon::Hobject *ImagePyramid, const char *Mode, double Scale);
LIntExport Herror monotony(const Halcon::Hobject &Image, Halcon::Hobject *ImageMonotony);
LIntExport Herror bandpass_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageBandpass, const Halcon::HTuple &FilterType);
LIntExport Herror bandpass_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageBandpass, const char *FilterType);
LIntExport Herror lines_color(const Halcon::Hobject &Image, Halcon::Hobject *Lines, const Halcon::HTuple &Sigma, const Halcon::HTuple &Low, const Halcon::HTuple &High, const Halcon::HTuple &ExtractWidth, const Halcon::HTuple &CompleteJunctions);
LIntExport Herror lines_color(const Halcon::Hobject &Image,Halcon::Hobject *Lines, double Sigma, double Low, double High, const char *ExtractWidth, const char *CompleteJunctions);
LIntExport Herror lines_gauss(const Halcon::Hobject &Image, Halcon::Hobject *Lines, const Halcon::HTuple &Sigma, const Halcon::HTuple &Low, const Halcon::HTuple &High, const Halcon::HTuple &LightDark, const Halcon::HTuple &ExtractWidth, const Halcon::HTuple &LineModel, const Halcon::HTuple &CompleteJunctions);
LIntExport Herror lines_gauss(const Halcon::Hobject &Image,Halcon::Hobject *Lines, double Sigma, double Low, double High, const char *LightDark, const char *ExtractWidth, const char *LineModel, const char *CompleteJunctions);
LIntExport Herror lines_facet(const Halcon::Hobject &Image, Halcon::Hobject *Lines, const Halcon::HTuple &MaskSize, const Halcon::HTuple &Low, const Halcon::HTuple &High, const Halcon::HTuple &LightDark);
LIntExport Herror lines_facet(const Halcon::Hobject &Image,Halcon::Hobject *Lines, Hlong MaskSize, double Low, double High, const char *LightDark);
LIntExport Herror gen_filter_mask(Halcon::Hobject *ImageFilter, const Halcon::HTuple &FilterMask, const Halcon::HTuple &Scale, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_mean_filter(Halcon::Hobject *ImageMean, const Halcon::HTuple &MaskShape, const Halcon::HTuple &Diameter1, const Halcon::HTuple &Diameter2, const Halcon::HTuple &Phi, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_mean_filter(Halcon::Hobject *ImageMean, const char *MaskShape, double Diameter1, double Diameter2, double Phi, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror gen_gauss_filter(Halcon::Hobject *ImageGauss, const Halcon::HTuple &Sigma1, const Halcon::HTuple &Sigma2, const Halcon::HTuple &Phi, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_gauss_filter(Halcon::Hobject *ImageGauss, double Sigma1, double Sigma2, double Phi, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror gen_derivative_filter(Halcon::Hobject *ImageDerivative, const Halcon::HTuple &Derivative, const Halcon::HTuple &Exponent, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_derivative_filter(Halcon::Hobject *ImageDerivative, const char *Derivative, Hlong Exponent, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror gen_std_bandpass(Halcon::Hobject *ImageFilter, const Halcon::HTuple &Frequency, const Halcon::HTuple &Sigma, const Halcon::HTuple &Type, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_std_bandpass(Halcon::Hobject *ImageFilter, double Frequency, double Sigma, const char *Type, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror gen_sin_bandpass(Halcon::Hobject *ImageFilter, const Halcon::HTuple &Frequency, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_sin_bandpass(Halcon::Hobject *ImageFilter, double Frequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror gen_bandfilter(Halcon::Hobject *ImageFilter, const Halcon::HTuple &MinFrequency, const Halcon::HTuple &MaxFrequency, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_bandfilter(Halcon::Hobject *ImageFilter, double MinFrequency, double MaxFrequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror gen_bandpass(Halcon::Hobject *ImageBandpass, const Halcon::HTuple &MinFrequency, const Halcon::HTuple &MaxFrequency, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_bandpass(Halcon::Hobject *ImageBandpass, double MinFrequency, double MaxFrequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror gen_lowpass(Halcon::Hobject *ImageLowpass, const Halcon::HTuple &Frequency, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_lowpass(Halcon::Hobject *ImageLowpass, double Frequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror gen_highpass(Halcon::Hobject *ImageHighpass, const Halcon::HTuple &Frequency, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_highpass(Halcon::Hobject *ImageHighpass, double Frequency, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror power_ln(const Halcon::Hobject &Image, Halcon::Hobject *ImageResult);
LIntExport Herror power_real(const Halcon::Hobject &Image, Halcon::Hobject *ImageResult);
LIntExport Herror power_byte(const Halcon::Hobject &Image, Halcon::Hobject *PowerByte);
LIntExport Herror phase_deg(const Halcon::Hobject &ImageComplex, Halcon::Hobject *ImagePhase);
LIntExport Herror phase_rad(const Halcon::Hobject &ImageComplex, Halcon::Hobject *ImagePhase);
LIntExport Herror energy_gabor(const Halcon::Hobject &ImageGabor, const Halcon::Hobject &ImageHilbert, Halcon::Hobject *Energy);
LIntExport Herror convol_gabor(const Halcon::Hobject &ImageFFT, const Halcon::Hobject &GaborFilter, Halcon::Hobject *ImageResultGabor, Halcon::Hobject *ImageResultHilbert);
LIntExport Herror gen_gabor(Halcon::Hobject *ImageFilter, const Halcon::HTuple &Angle, const Halcon::HTuple &Frequency, const Halcon::HTuple &Bandwidth, const Halcon::HTuple &Orientation, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_gabor(Halcon::Hobject *ImageFilter, double Angle, double Frequency, double Bandwidth, double Orientation, const char *Norm, const char *Mode, Hlong Width, Hlong Height);
LIntExport Herror phase_correlation_fft(const Halcon::Hobject &ImageFFT1, const Halcon::Hobject &ImageFFT2, Halcon::Hobject *ImagePhaseCorrelation);
LIntExport Herror correlation_fft(const Halcon::Hobject &ImageFFT1, const Halcon::Hobject &ImageFFT2, Halcon::Hobject *ImageCorrelation);
LIntExport Herror convol_fft(const Halcon::Hobject &ImageFFT, const Halcon::Hobject &ImageFilter, Halcon::Hobject *ImageConvol);
LIntExport Herror deserialize_fft_optimization_data(const Halcon::HTuple &SerializedItemHandle);
LIntExport Herror deserialize_fft_optimization_data(Hlong SerializedItemHandle);
LIntExport Herror serialize_fft_optimization_data(Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_fft_optimization_data(Hlong *SerializedItemHandle);
LIntExport Herror read_fft_optimization_data(const Halcon::HTuple &FileName);
LIntExport Herror read_fft_optimization_data(const char *FileName);
LIntExport Herror write_fft_optimization_data(const Halcon::HTuple &FileName);
LIntExport Herror write_fft_optimization_data(const char *FileName);
LIntExport Herror optimize_rft_speed(const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Mode);
LIntExport Herror optimize_rft_speed(Hlong Width, Hlong Height, const char *Mode);
LIntExport Herror optimize_fft_speed(const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Mode);
LIntExport Herror optimize_fft_speed(Hlong Width, Hlong Height, const char *Mode);
LIntExport Herror rft_generic(const Halcon::Hobject &Image, Halcon::Hobject *ImageFFT, const Halcon::HTuple &Direction, const Halcon::HTuple &Norm, const Halcon::HTuple &ResultType, const Halcon::HTuple &Width);
LIntExport Herror rft_generic(const Halcon::Hobject &Image,Halcon::Hobject *ImageFFT, const char *Direction, const char *Norm, const char *ResultType, Hlong Width);
LIntExport Herror fft_image_inv(const Halcon::Hobject &Image, Halcon::Hobject *ImageFFTInv);
LIntExport Herror fft_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageFFT);
LIntExport Herror fft_generic(const Halcon::Hobject &Image, Halcon::Hobject *ImageFFT, const Halcon::HTuple &Direction, const Halcon::HTuple &Exponent, const Halcon::HTuple &Norm, const Halcon::HTuple &Mode, const Halcon::HTuple &ResultType);
LIntExport Herror fft_generic(const Halcon::Hobject &Image,Halcon::Hobject *ImageFFT, const char *Direction, Hlong Exponent, const char *Norm, const char *Mode, const char *ResultType);
LIntExport Herror shock_filter(const Halcon::Hobject &Image, Halcon::Hobject *SharpenedImage, const Halcon::HTuple &Theta, const Halcon::HTuple &Iterations, const Halcon::HTuple &Mode, const Halcon::HTuple &Sigma);
LIntExport Herror shock_filter(const Halcon::Hobject &Image,Halcon::Hobject *SharpenedImage, double Theta, Hlong Iterations, const char *Mode, double Sigma);
LIntExport Herror mean_curvature_flow(const Halcon::Hobject &Image, Halcon::Hobject *ImageMCF, const Halcon::HTuple &Sigma, const Halcon::HTuple &Theta, const Halcon::HTuple &Iterations);
LIntExport Herror mean_curvature_flow(const Halcon::Hobject &Image,Halcon::Hobject *ImageMCF, double Sigma, double Theta, Hlong Iterations);
LIntExport Herror coherence_enhancing_diff(const Halcon::Hobject &Image, Halcon::Hobject *ImageCED, const Halcon::HTuple &Sigma, const Halcon::HTuple &Rho, const Halcon::HTuple &Theta, const Halcon::HTuple &Iterations);
LIntExport Herror coherence_enhancing_diff(const Halcon::Hobject &Image,Halcon::Hobject *ImageCED, double Sigma, double Rho, double Theta, Hlong Iterations);
LIntExport Herror equ_histo_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageEquHisto);
LIntExport Herror illuminate(const Halcon::Hobject &Image, Halcon::Hobject *ImageIlluminate, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &Factor);
LIntExport Herror illuminate(const Halcon::Hobject &Image,Halcon::Hobject *ImageIlluminate, Hlong MaskWidth, Hlong MaskHeight, double Factor);
LIntExport Herror emphasize(const Halcon::Hobject &Image, Halcon::Hobject *ImageEmphasize, const Halcon::HTuple &MaskWidth, const Halcon::HTuple &MaskHeight, const Halcon::HTuple &Factor);
LIntExport Herror emphasize(const Halcon::Hobject &Image,Halcon::Hobject *ImageEmphasize, Hlong MaskWidth, Hlong MaskHeight, double Factor);
LIntExport Herror scale_image_max(const Halcon::Hobject &Image, Halcon::Hobject *ImageScaleMax);
LIntExport Herror robinson_dir(const Halcon::Hobject &Image, Halcon::Hobject *ImageEdgeAmp, Halcon::Hobject *ImageEdgeDir);
LIntExport Herror robinson_amp(const Halcon::Hobject &Image, Halcon::Hobject *ImageEdgeAmp);
LIntExport Herror kirsch_dir(const Halcon::Hobject &Image, Halcon::Hobject *ImageEdgeAmp, Halcon::Hobject *ImageEdgeDir);
LIntExport Herror kirsch_amp(const Halcon::Hobject &Image, Halcon::Hobject *ImageEdgeAmp);
LIntExport Herror frei_dir(const Halcon::Hobject &Image, Halcon::Hobject *ImageEdgeAmp, Halcon::Hobject *ImageEdgeDir);
LIntExport Herror frei_amp(const Halcon::Hobject &Image, Halcon::Hobject *ImageEdgeAmp);
LIntExport Herror prewitt_dir(const Halcon::Hobject &Image, Halcon::Hobject *ImageEdgeAmp, Halcon::Hobject *ImageEdgeDir);
LIntExport Herror prewitt_amp(const Halcon::Hobject &Image, Halcon::Hobject *ImageEdgeAmp);
LIntExport Herror sobel_amp(const Halcon::Hobject &Image, Halcon::Hobject *EdgeAmplitude, const Halcon::HTuple &FilterType, const Halcon::HTuple &Size);
LIntExport Herror sobel_amp(const Halcon::Hobject &Image,Halcon::Hobject *EdgeAmplitude, const char *FilterType, Hlong Size);
LIntExport Herror sobel_dir(const Halcon::Hobject &Image, Halcon::Hobject *EdgeAmplitude, Halcon::Hobject *EdgeDirection, const Halcon::HTuple &FilterType, const Halcon::HTuple &Size);
LIntExport Herror sobel_dir(const Halcon::Hobject &Image,Halcon::Hobject *EdgeAmplitude,Halcon::Hobject *EdgeDirection, const char *FilterType, Hlong Size);
LIntExport Herror roberts(const Halcon::Hobject &Image, Halcon::Hobject *ImageRoberts, const Halcon::HTuple &FilterType);
LIntExport Herror roberts(const Halcon::Hobject &Image,Halcon::Hobject *ImageRoberts, const char *FilterType);
LIntExport Herror laplace(const Halcon::Hobject &Image, Halcon::Hobject *ImageLaplace, const Halcon::HTuple &ResultType, const Halcon::HTuple &MaskSize, const Halcon::HTuple &FilterMask);
LIntExport Herror laplace(const Halcon::Hobject &Image,Halcon::Hobject *ImageLaplace, const char *ResultType, Hlong MaskSize, const char *FilterMask);
LIntExport Herror highpass_image(const Halcon::Hobject &Image, Halcon::Hobject *Highpass, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror highpass_image(const Halcon::Hobject &Image,Halcon::Hobject *Highpass, Hlong Width, Hlong Height);
LIntExport Herror info_edges(const Halcon::HTuple &Filter, const Halcon::HTuple &Mode, const Halcon::HTuple &Alpha, Halcon::HTuple *Size, Halcon::HTuple *Coeffs);
LIntExport Herror info_edges(const char *Filter, const char *Mode, double Alpha, Halcon::HTuple *Size, Halcon::HTuple *Coeffs);
LIntExport Herror edges_color_sub_pix(const Halcon::Hobject &Image, Halcon::Hobject *Edges, const Halcon::HTuple &Filter, const Halcon::HTuple &Alpha, const Halcon::HTuple &Low, const Halcon::HTuple &High);
LIntExport Herror edges_color_sub_pix(const Halcon::Hobject &Image,Halcon::Hobject *Edges, const char *Filter, double Alpha, double Low, double High);
LIntExport Herror edges_color(const Halcon::Hobject &Image, Halcon::Hobject *ImaAmp, Halcon::Hobject *ImaDir, const Halcon::HTuple &Filter, const Halcon::HTuple &Alpha, const Halcon::HTuple &NMS, const Halcon::HTuple &Low, const Halcon::HTuple &High);
LIntExport Herror edges_color(const Halcon::Hobject &Image,Halcon::Hobject *ImaAmp,Halcon::Hobject *ImaDir, const char *Filter, double Alpha, const char *NMS, Hlong Low, Hlong High);
LIntExport Herror edges_sub_pix(const Halcon::Hobject &Image, Halcon::Hobject *Edges, const Halcon::HTuple &Filter, const Halcon::HTuple &Alpha, const Halcon::HTuple &Low, const Halcon::HTuple &High);
LIntExport Herror edges_sub_pix(const Halcon::Hobject &Image,Halcon::Hobject *Edges, const char *Filter, double Alpha, Hlong Low, Hlong High);
LIntExport Herror edges_image(const Halcon::Hobject &Image, Halcon::Hobject *ImaAmp, Halcon::Hobject *ImaDir, const Halcon::HTuple &Filter, const Halcon::HTuple &Alpha, const Halcon::HTuple &NMS, const Halcon::HTuple &Low, const Halcon::HTuple &High);
LIntExport Herror edges_image(const Halcon::Hobject &Image,Halcon::Hobject *ImaAmp,Halcon::Hobject *ImaDir, const char *Filter, double Alpha, const char *NMS, Hlong Low, Hlong High);
LIntExport Herror derivate_gauss(const Halcon::Hobject &Image, Halcon::Hobject *DerivGauss, const Halcon::HTuple &Sigma, const Halcon::HTuple &Component);
LIntExport Herror derivate_gauss(const Halcon::Hobject &Image,Halcon::Hobject *DerivGauss, double Sigma, const char *Component);
LIntExport Herror laplace_of_gauss(const Halcon::Hobject &Image, Halcon::Hobject *ImageLaplace, const Halcon::HTuple &Sigma);
LIntExport Herror laplace_of_gauss(const Halcon::Hobject &Image,Halcon::Hobject *ImageLaplace, double Sigma);
LIntExport Herror diff_of_gauss(const Halcon::Hobject &Image, Halcon::Hobject *DiffOfGauss, const Halcon::HTuple &Sigma, const Halcon::HTuple &SigFactor);
LIntExport Herror diff_of_gauss(const Halcon::Hobject &Image,Halcon::Hobject *DiffOfGauss, double Sigma, double SigFactor);
LIntExport Herror close_edges_length(const Halcon::Hobject &Edges, const Halcon::Hobject &Gradient, Halcon::Hobject *ClosedEdges, const Halcon::HTuple &MinAmplitude, const Halcon::HTuple &MaxGapLength);
LIntExport Herror close_edges_length(const Halcon::Hobject &Edges, const Halcon::Hobject &Gradient,Halcon::Hobject *ClosedEdges, Hlong MinAmplitude, Hlong MaxGapLength);
LIntExport Herror close_edges(const Halcon::Hobject &Edges, const Halcon::Hobject &EdgeImage, Halcon::Hobject *RegionResult, const Halcon::HTuple &MinAmplitude);
LIntExport Herror close_edges(const Halcon::Hobject &Edges, const Halcon::Hobject &EdgeImage,Halcon::Hobject *RegionResult, Hlong MinAmplitude);
LIntExport Herror detect_edge_segments(const Halcon::Hobject &Image, const Halcon::HTuple &SobelSize, const Halcon::HTuple &MinAmplitude, const Halcon::HTuple &MaxDistance, const Halcon::HTuple &MinLength, Halcon::HTuple *BeginRow, Halcon::HTuple *BeginCol, Halcon::HTuple *EndRow, Halcon::HTuple *EndCol);
LIntExport Herror detect_edge_segments(const Halcon::Hobject &Image, Hlong SobelSize, Hlong MinAmplitude, Hlong MaxDistance, Hlong MinLength, Halcon::HTuple *BeginRow, Halcon::HTuple *BeginCol, Halcon::HTuple *EndRow, Halcon::HTuple *EndCol);
LIntExport Herror clear_all_color_trans_luts(void);
LIntExport Herror clear_color_trans_lut(const Halcon::HTuple &ColorTransLUTHandle);
LIntExport Herror clear_color_trans_lut(Hlong ColorTransLUTHandle);
LIntExport Herror apply_color_trans_lut(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::Hobject &Image3, Halcon::Hobject *ImageResult1, Halcon::Hobject *ImageResult2, Halcon::Hobject *ImageResult3, const Halcon::HTuple &ColorTransLUTHandle);
LIntExport Herror apply_color_trans_lut(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, const Halcon::Hobject &Image3,Halcon::Hobject *ImageResult1,Halcon::Hobject *ImageResult2,Halcon::Hobject *ImageResult3, Hlong ColorTransLUTHandle);
LIntExport Herror create_color_trans_lut(const Halcon::HTuple &ColorSpace, const Halcon::HTuple &TransDirection, const Halcon::HTuple &NumBits, Halcon::HTuple *ColorTransLUTHandle);
LIntExport Herror create_color_trans_lut(const Halcon::HTuple &ColorSpace, const Halcon::HTuple &TransDirection, const Halcon::HTuple &NumBits, Hlong *ColorTransLUTHandle);
LIntExport Herror create_color_trans_lut(const char *ColorSpace, const char *TransDirection, Hlong NumBits, Halcon::HTuple *ColorTransLUTHandle);
LIntExport Herror create_color_trans_lut(const char *ColorSpace, const char *TransDirection, Hlong NumBits, Hlong *ColorTransLUTHandle);
LIntExport Herror cfa_to_rgb(const Halcon::Hobject &CFAImage, Halcon::Hobject *RGBImage, const Halcon::HTuple &CFAType, const Halcon::HTuple &Interpolation);
LIntExport Herror cfa_to_rgb(const Halcon::Hobject &CFAImage,Halcon::Hobject *RGBImage, const char *CFAType, const char *Interpolation);
LIntExport Herror rgb1_to_gray(const Halcon::Hobject &RGBImage, Halcon::Hobject *GrayImage);
LIntExport Herror rgb3_to_gray(const Halcon::Hobject &ImageRed, const Halcon::Hobject &ImageGreen, const Halcon::Hobject &ImageBlue, Halcon::Hobject *ImageGray);
LIntExport Herror trans_from_rgb(const Halcon::Hobject &ImageRed, const Halcon::Hobject &ImageGreen, const Halcon::Hobject &ImageBlue, Halcon::Hobject *ImageResult1, Halcon::Hobject *ImageResult2, Halcon::Hobject *ImageResult3, const Halcon::HTuple &ColorSpace);
LIntExport Herror trans_from_rgb(const Halcon::Hobject &ImageRed, const Halcon::Hobject &ImageGreen, const Halcon::Hobject &ImageBlue,Halcon::Hobject *ImageResult1,Halcon::Hobject *ImageResult2,Halcon::Hobject *ImageResult3, const char *ColorSpace);
LIntExport Herror trans_to_rgb(const Halcon::Hobject &ImageInput1, const Halcon::Hobject &ImageInput2, const Halcon::Hobject &ImageInput3, Halcon::Hobject *ImageRed, Halcon::Hobject *ImageGreen, Halcon::Hobject *ImageBlue, const Halcon::HTuple &ColorSpace);
LIntExport Herror trans_to_rgb(const Halcon::Hobject &ImageInput1, const Halcon::Hobject &ImageInput2, const Halcon::Hobject &ImageInput3,Halcon::Hobject *ImageRed,Halcon::Hobject *ImageGreen,Halcon::Hobject *ImageBlue, const char *ColorSpace);
LIntExport Herror bit_mask(const Halcon::Hobject &Image, Halcon::Hobject *ImageMask, const Halcon::HTuple &BitMask);
LIntExport Herror bit_mask(const Halcon::Hobject &Image,Halcon::Hobject *ImageMask, Hlong BitMask);
LIntExport Herror bit_slice(const Halcon::Hobject &Image, Halcon::Hobject *ImageSlice, const Halcon::HTuple &Bit);
LIntExport Herror bit_slice(const Halcon::Hobject &Image,Halcon::Hobject *ImageSlice, Hlong Bit);
LIntExport Herror bit_rshift(const Halcon::Hobject &Image, Halcon::Hobject *ImageRShift, const Halcon::HTuple &Shift);
LIntExport Herror bit_rshift(const Halcon::Hobject &Image,Halcon::Hobject *ImageRShift, Hlong Shift);
LIntExport Herror bit_lshift(const Halcon::Hobject &Image, Halcon::Hobject *ImageLShift, const Halcon::HTuple &Shift);
LIntExport Herror bit_lshift(const Halcon::Hobject &Image,Halcon::Hobject *ImageLShift, Hlong Shift);
LIntExport Herror bit_not(const Halcon::Hobject &Image, Halcon::Hobject *ImageNot);
LIntExport Herror bit_xor(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *ImageXor);
LIntExport Herror bit_or(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *ImageOr);
LIntExport Herror bit_and(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *ImageAnd);
LIntExport Herror gamma_image(const Halcon::Hobject &Image, Halcon::Hobject *GammaImage, const Halcon::HTuple &Gamma, const Halcon::HTuple &Offset, const Halcon::HTuple &Threshold, const Halcon::HTuple &MaxGray, const Halcon::HTuple &Encode);
LIntExport Herror gamma_image(const Halcon::Hobject &Image,Halcon::Hobject *GammaImage, double Gamma, double Offset, double Threshold, double MaxGray, const char *Encode);
LIntExport Herror pow_image(const Halcon::Hobject &Image, Halcon::Hobject *PowImage, const Halcon::HTuple &Exponent);
LIntExport Herror pow_image(const Halcon::Hobject &Image,Halcon::Hobject *PowImage, double Exponent);
LIntExport Herror exp_image(const Halcon::Hobject &Image, Halcon::Hobject *ExpImage, const Halcon::HTuple &Base);
LIntExport Herror log_image(const Halcon::Hobject &Image, Halcon::Hobject *LogImage, const Halcon::HTuple &Base);
LIntExport Herror atan2_image(const Halcon::Hobject &ImageY, const Halcon::Hobject &ImageX, Halcon::Hobject *ArctanImage);
LIntExport Herror atan_image(const Halcon::Hobject &Image, Halcon::Hobject *ArctanImage);
LIntExport Herror acos_image(const Halcon::Hobject &Image, Halcon::Hobject *ArccosImage);
LIntExport Herror asin_image(const Halcon::Hobject &Image, Halcon::Hobject *ArcsinImage);
LIntExport Herror tan_image(const Halcon::Hobject &Image, Halcon::Hobject *TanImage);
LIntExport Herror cos_image(const Halcon::Hobject &Image, Halcon::Hobject *CosImage);
LIntExport Herror sin_image(const Halcon::Hobject &Image, Halcon::Hobject *SinImage);
LIntExport Herror abs_diff_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *ImageAbsDiff, const Halcon::HTuple &Mult);
LIntExport Herror abs_diff_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2,Halcon::Hobject *ImageAbsDiff, double Mult);
LIntExport Herror sqrt_image(const Halcon::Hobject &Image, Halcon::Hobject *SqrtImage);
LIntExport Herror sub_image(const Halcon::Hobject &ImageMinuend, const Halcon::Hobject &ImageSubtrahend, Halcon::Hobject *ImageSub, const Halcon::HTuple &Mult, const Halcon::HTuple &Add);
LIntExport Herror sub_image(const Halcon::Hobject &ImageMinuend, const Halcon::Hobject &ImageSubtrahend,Halcon::Hobject *ImageSub, double Mult, double Add);
LIntExport Herror scale_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageScaled, const Halcon::HTuple &Mult, const Halcon::HTuple &Add);
LIntExport Herror scale_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageScaled, double Mult, double Add);
LIntExport Herror div_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *ImageResult, const Halcon::HTuple &Mult, const Halcon::HTuple &Add);
LIntExport Herror div_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2,Halcon::Hobject *ImageResult, double Mult, double Add);
LIntExport Herror mult_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *ImageResult, const Halcon::HTuple &Mult, const Halcon::HTuple &Add);
LIntExport Herror mult_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2,Halcon::Hobject *ImageResult, double Mult, double Add);
LIntExport Herror add_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *ImageResult, const Halcon::HTuple &Mult, const Halcon::HTuple &Add);
LIntExport Herror add_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2,Halcon::Hobject *ImageResult, double Mult, double Add);
LIntExport Herror abs_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageAbs);
LIntExport Herror min_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *ImageMin);
LIntExport Herror max_image(const Halcon::Hobject &Image1, const Halcon::Hobject &Image2, Halcon::Hobject *ImageMax);
LIntExport Herror invert_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageInvert);
LIntExport Herror adjust_mosaic_images(const Halcon::Hobject &Images, Halcon::Hobject *CorrectedImages, const Halcon::HTuple &From, const Halcon::HTuple &To, const Halcon::HTuple &ReferenceImage, const Halcon::HTuple &HomMatrices2D, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &EstimateParameters, const Halcon::HTuple &OECFModel);
LIntExport Herror gen_cube_map_mosaic(const Halcon::Hobject &Images, Halcon::Hobject *Front, Halcon::Hobject *Rear, Halcon::Hobject *Left, Halcon::Hobject *Right, Halcon::Hobject *Top, Halcon::Hobject *Bottom, const Halcon::HTuple &CameraMatrices, const Halcon::HTuple &RotationMatrices, const Halcon::HTuple &CubeMapDimension, const Halcon::HTuple &StackingOrder, const Halcon::HTuple &Interpolation);
LIntExport Herror gen_spherical_mosaic(const Halcon::Hobject &Images, Halcon::Hobject *MosaicImage, const Halcon::HTuple &CameraMatrices, const Halcon::HTuple &RotationMatrices, const Halcon::HTuple &LatMin, const Halcon::HTuple &LatMax, const Halcon::HTuple &LongMin, const Halcon::HTuple &LongMax, const Halcon::HTuple &LatLongStep, const Halcon::HTuple &StackingOrder, const Halcon::HTuple &Interpolation);
LIntExport Herror gen_bundle_adjusted_mosaic(const Halcon::Hobject &Images, Halcon::Hobject *MosaicImage, const Halcon::HTuple &HomMatrices2D, const Halcon::HTuple &StackingOrder, const Halcon::HTuple &TransformDomain, Halcon::HTuple *TransMat2D);
LIntExport Herror gen_projective_mosaic(const Halcon::Hobject &Images, Halcon::Hobject *MosaicImage, const Halcon::HTuple &StartImage, const Halcon::HTuple &MappingSource, const Halcon::HTuple &MappingDest, const Halcon::HTuple &HomMatrices2D, const Halcon::HTuple &StackingOrder, const Halcon::HTuple &TransformDomain, Halcon::HTuple *MosaicMatrices2D);
LIntExport Herror projective_trans_image_size(const Halcon::Hobject &Image, Halcon::Hobject *TransImage, const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &TransformDomain);
LIntExport Herror projective_trans_image(const Halcon::Hobject &Image, Halcon::Hobject *TransImage, const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Interpolation, const Halcon::HTuple &AdaptImageSize, const Halcon::HTuple &TransformDomain);
LIntExport Herror affine_trans_image_size(const Halcon::Hobject &Image, Halcon::Hobject *ImageAffineTrans, const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Interpolation, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror affine_trans_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageAffineTrans, const Halcon::HTuple &HomMat2D, const Halcon::HTuple &Interpolation, const Halcon::HTuple &AdaptImageSize);
LIntExport Herror zoom_image_factor(const Halcon::Hobject &Image, Halcon::Hobject *ImageZoomed, const Halcon::HTuple &ScaleWidth, const Halcon::HTuple &ScaleHeight, const Halcon::HTuple &Interpolation);
LIntExport Herror zoom_image_factor(const Halcon::Hobject &Image,Halcon::Hobject *ImageZoomed, double ScaleWidth, double ScaleHeight, const char *Interpolation);
LIntExport Herror zoom_image_size(const Halcon::Hobject &Image, Halcon::Hobject *ImageZoom, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Interpolation);
LIntExport Herror zoom_image_size(const Halcon::Hobject &Image,Halcon::Hobject *ImageZoom, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror mirror_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageMirror, const Halcon::HTuple &Mode);
LIntExport Herror mirror_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageMirror, const char *Mode);
LIntExport Herror rotate_image(const Halcon::Hobject &Image, Halcon::Hobject *ImageRotate, const Halcon::HTuple &Phi, const Halcon::HTuple &Interpolation);
LIntExport Herror rotate_image(const Halcon::Hobject &Image,Halcon::Hobject *ImageRotate, double Phi, const char *Interpolation);
LIntExport Herror polar_trans_image_inv(const Halcon::Hobject &PolarImage, Halcon::Hobject *XYTransImage, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleEnd, const Halcon::HTuple &RadiusStart, const Halcon::HTuple &RadiusEnd, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Interpolation);
LIntExport Herror polar_trans_image_inv(const Halcon::Hobject &PolarImage,Halcon::Hobject *XYTransImage, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror polar_trans_image_ext(const Halcon::Hobject &Image, Halcon::Hobject *PolarTransImage, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &AngleStart, const Halcon::HTuple &AngleEnd, const Halcon::HTuple &RadiusStart, const Halcon::HTuple &RadiusEnd, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Interpolation);
LIntExport Herror polar_trans_image_ext(const Halcon::Hobject &Image,Halcon::Hobject *PolarTransImage, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, Hlong Width, Hlong Height, const char *Interpolation);
LIntExport Herror polar_trans_image(const Halcon::Hobject &ImageXY, Halcon::Hobject *ImagePolar, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror polar_trans_image(const Halcon::Hobject &ImageXY,Halcon::Hobject *ImagePolar, Hlong Row, Hlong Column, Hlong Width, Hlong Height);
LIntExport Herror vector_field_to_hom_mat2d(const Halcon::Hobject &VectorField, Halcon::HTuple *HomMat2D);
LIntExport Herror deserialize_xld(Halcon::Hobject *XLD, const Halcon::HTuple &SerializedItemHandle);
LIntExport Herror deserialize_xld(Halcon::Hobject *XLD, Hlong SerializedItemHandle);
LIntExport Herror serialize_xld(const Halcon::Hobject &XLD, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_xld(const Halcon::Hobject &XLD, Hlong *SerializedItemHandle);
LIntExport Herror read_polygon_xld_dxf(Halcon::Hobject *Polygons, const Halcon::HTuple &FileName, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *DxfStatus);
LIntExport Herror read_polygon_xld_dxf(Halcon::Hobject *Polygons, const Halcon::HTuple &FileName, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, char *DxfStatus);
LIntExport Herror read_polygon_xld_dxf(Halcon::Hobject *Polygons, const char *FileName, const char *GenParamNames, double GenParamValues, Halcon::HTuple *DxfStatus);
LIntExport Herror read_polygon_xld_dxf(Halcon::Hobject *Polygons, const char *FileName, const char *GenParamNames, double GenParamValues, char *DxfStatus);
LIntExport Herror write_polygon_xld_dxf(const Halcon::Hobject &Polygons, const Halcon::HTuple &FileName);
LIntExport Herror write_polygon_xld_dxf(const Halcon::Hobject &Polygons, const char *FileName);
LIntExport Herror read_contour_xld_dxf(Halcon::Hobject *Contours, const Halcon::HTuple &FileName, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *DxfStatus);
LIntExport Herror read_contour_xld_dxf(Halcon::Hobject *Contours, const Halcon::HTuple &FileName, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, char *DxfStatus);
LIntExport Herror read_contour_xld_dxf(Halcon::Hobject *Contours, const char *FileName, const char *GenParamNames, double GenParamValues, Halcon::HTuple *DxfStatus);
LIntExport Herror read_contour_xld_dxf(Halcon::Hobject *Contours, const char *FileName, const char *GenParamNames, double GenParamValues, char *DxfStatus);
LIntExport Herror write_contour_xld_dxf(const Halcon::Hobject &Contours, const Halcon::HTuple &FileName);
LIntExport Herror write_contour_xld_dxf(const Halcon::Hobject &Contours, const char *FileName);
LIntExport Herror copy_file(const Halcon::HTuple &SourceFile, const Halcon::HTuple &DestinationFile);
LIntExport Herror copy_file(const char *SourceFile, const char *DestinationFile);
LIntExport Herror set_current_dir(const Halcon::HTuple &DirName);
LIntExport Herror set_current_dir(const char *DirName);
LIntExport Herror get_current_dir(Halcon::HTuple *DirName);
LIntExport Herror get_current_dir(char *DirName);
LIntExport Herror remove_dir(const Halcon::HTuple &DirName);
LIntExport Herror remove_dir(const char *DirName);
LIntExport Herror make_dir(const Halcon::HTuple &DirName);
LIntExport Herror make_dir(const char *DirName);
LIntExport Herror list_files(const Halcon::HTuple &Directory, const Halcon::HTuple &Options, Halcon::HTuple *Files);
LIntExport Herror list_files(const char *Directory, const char *Options, Halcon::HTuple *Files);
LIntExport Herror delete_file(const Halcon::HTuple &FileName);
LIntExport Herror delete_file(const char *FileName);
LIntExport Herror file_exists(const Halcon::HTuple &FileName, Halcon::HTuple *FileExists);
LIntExport Herror file_exists(const Halcon::HTuple &FileName, Hlong *FileExists);
LIntExport Herror file_exists(const char *FileName, Halcon::HTuple *FileExists);
LIntExport Herror file_exists(const char *FileName, Hlong *FileExists);
LIntExport Herror read_object(Halcon::Hobject *Object, const Halcon::HTuple &FileName);
LIntExport Herror read_object(Halcon::Hobject *Object, const char *FileName);
LIntExport Herror write_object(const Halcon::Hobject &Object, const Halcon::HTuple &FileName);
LIntExport Herror write_object(const Halcon::Hobject &Object, const char *FileName);
LIntExport Herror deserialize_object(Halcon::Hobject *Object, const Halcon::HTuple &SerializedItemHandle);
LIntExport Herror deserialize_object(Halcon::Hobject *Object, Hlong SerializedItemHandle);
LIntExport Herror serialize_object(const Halcon::Hobject &Object, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_object(const Halcon::Hobject &Object, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_image(Halcon::Hobject *Image, const Halcon::HTuple &SerializedItemHandle);
LIntExport Herror deserialize_image(Halcon::Hobject *Image, Hlong SerializedItemHandle);
LIntExport Herror serialize_image(const Halcon::Hobject &Image, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_image(const Halcon::Hobject &Image, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_region(Halcon::Hobject *Region, const Halcon::HTuple &SerializedItemHandle);
LIntExport Herror deserialize_region(Halcon::Hobject *Region, Hlong SerializedItemHandle);
LIntExport Herror serialize_region(const Halcon::Hobject &Region, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_region(const Halcon::Hobject &Region, Hlong *SerializedItemHandle);
LIntExport Herror write_region(const Halcon::Hobject &Region, const Halcon::HTuple &FileName);
LIntExport Herror write_region(const Halcon::Hobject &Region, const char *FileName);
LIntExport Herror write_image(const Halcon::Hobject &Image, const Halcon::HTuple &Format, const Halcon::HTuple &FillColor, const Halcon::HTuple &FileName);
LIntExport Herror write_image(const Halcon::Hobject &Image, const char *Format, Hlong FillColor, const char *FileName);
LIntExport Herror read_sequence(Halcon::Hobject *Image, const Halcon::HTuple &HeaderSize, const Halcon::HTuple &SourceWidth, const Halcon::HTuple &SourceHeight, const Halcon::HTuple &StartRow, const Halcon::HTuple &StartColumn, const Halcon::HTuple &DestWidth, const Halcon::HTuple &DestHeight, const Halcon::HTuple &PixelType, const Halcon::HTuple &BitOrder, const Halcon::HTuple &ByteOrder, const Halcon::HTuple &Pad, const Halcon::HTuple &Index, const Halcon::HTuple &FileName);
LIntExport Herror read_sequence(Halcon::Hobject *Image, Hlong HeaderSize, Hlong SourceWidth, Hlong SourceHeight, Hlong StartRow, Hlong StartColumn, Hlong DestWidth, Hlong DestHeight, const char *PixelType, const char *BitOrder, const char *ByteOrder, const char *Pad, Hlong Index, const char *FileName);
LIntExport Herror read_region(Halcon::Hobject *Region, const Halcon::HTuple &FileName);
LIntExport Herror read_region(Halcon::Hobject *Region, const char *FileName);
LIntExport Herror read_image(Halcon::Hobject *Image, const Halcon::HTuple &FileName);
LIntExport Herror read_image(Halcon::Hobject *Image, const char *FileName);
LIntExport Herror open_file(const Halcon::HTuple &FileName, const Halcon::HTuple &FileType, Halcon::HTuple *FileHandle);
LIntExport Herror open_file(const Halcon::HTuple &FileName, const Halcon::HTuple &FileType, Hlong *FileHandle);
LIntExport Herror open_file(const char *FileName, const char *FileType, Halcon::HTuple *FileHandle);
LIntExport Herror open_file(const char *FileName, const char *FileType, Hlong *FileHandle);
LIntExport Herror fwrite_string(const Halcon::HTuple &FileHandle, const Halcon::HTuple &String);
LIntExport Herror fread_line(const Halcon::HTuple &FileHandle, Halcon::HTuple *OutLine, Halcon::HTuple *IsEOF);
LIntExport Herror fread_line(const Halcon::HTuple &FileHandle, char *OutLine, Hlong *IsEOF);
LIntExport Herror fread_line(Hlong FileHandle, Halcon::HTuple *OutLine, Halcon::HTuple *IsEOF);
LIntExport Herror fread_line(Hlong FileHandle, char *OutLine, Hlong *IsEOF);
LIntExport Herror fread_string(const Halcon::HTuple &FileHandle, Halcon::HTuple *OutString, Halcon::HTuple *IsEOF);
LIntExport Herror fread_string(const Halcon::HTuple &FileHandle, char *OutString, Hlong *IsEOF);
LIntExport Herror fread_string(Hlong FileHandle, Halcon::HTuple *OutString, Halcon::HTuple *IsEOF);
LIntExport Herror fread_string(Hlong FileHandle, char *OutString, Hlong *IsEOF);
LIntExport Herror fread_char(const Halcon::HTuple &FileHandle, Halcon::HTuple *Char);
LIntExport Herror fread_char(const Halcon::HTuple &FileHandle, char *Char);
LIntExport Herror fread_char(Hlong FileHandle, Halcon::HTuple *Char);
LIntExport Herror fread_char(Hlong FileHandle, char *Char);
LIntExport Herror fnew_line(const Halcon::HTuple &FileHandle);
LIntExport Herror fnew_line(Hlong FileHandle);
LIntExport Herror close_file(const Halcon::HTuple &FileHandle);
LIntExport Herror close_file(Hlong FileHandle);
LIntExport Herror close_all_files(void);
LIntExport Herror test_closed_xld(const Halcon::Hobject &XLD, Halcon::HTuple *IsClosed);
LIntExport Herror test_closed_xld(const Halcon::Hobject &XLD, Hlong *IsClosed);
LIntExport Herror get_grayval_contour_xld(const Halcon::Hobject &Image, const Halcon::Hobject &Contour, const Halcon::HTuple &Interpolation, Halcon::HTuple *Grayval);
LIntExport Herror get_grayval_contour_xld(const Halcon::Hobject &Image, const Halcon::Hobject &Contour, const Halcon::HTuple &Interpolation, double *Grayval);
LIntExport Herror get_grayval_contour_xld(const Halcon::Hobject &Image, const Halcon::Hobject &Contour, const char *Interpolation, Halcon::HTuple *Grayval);
LIntExport Herror get_grayval_contour_xld(const Halcon::Hobject &Image, const Halcon::Hobject &Contour, const char *Interpolation, double *Grayval);
LIntExport Herror moments_any_points_xld(const Halcon::Hobject &XLD, const Halcon::HTuple &Mode, const Halcon::HTuple &Area, const Halcon::HTuple &CenterRow, const Halcon::HTuple &CenterCol, const Halcon::HTuple &P, const Halcon::HTuple &Q, Halcon::HTuple *M);
LIntExport Herror moments_any_points_xld(const Halcon::Hobject &XLD, const Halcon::HTuple &Mode, const Halcon::HTuple &Area, const Halcon::HTuple &CenterRow, const Halcon::HTuple &CenterCol, const Halcon::HTuple &P, const Halcon::HTuple &Q, double *M);
LIntExport Herror moments_any_points_xld(const Halcon::Hobject &XLD, const char *Mode, double Area, double CenterRow, double CenterCol, Hlong P, Hlong Q, Halcon::HTuple *M);
LIntExport Herror moments_any_points_xld(const Halcon::Hobject &XLD, const char *Mode, double Area, double CenterRow, double CenterCol, Hlong P, Hlong Q, double *M);
LIntExport Herror eccentricity_points_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Anisometry);
LIntExport Herror eccentricity_points_xld(const Halcon::Hobject &XLD, double *Anisometry);
LIntExport Herror elliptic_axis_points_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Ra, Halcon::HTuple *Rb, Halcon::HTuple *Phi);
LIntExport Herror elliptic_axis_points_xld(const Halcon::Hobject &XLD, double *Ra, double *Rb, double *Phi);
LIntExport Herror orientation_points_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Phi);
LIntExport Herror orientation_points_xld(const Halcon::Hobject &XLD, double *Phi);
LIntExport Herror moments_points_xld(const Halcon::Hobject &XLD, Halcon::HTuple *M11, Halcon::HTuple *M20, Halcon::HTuple *M02);
LIntExport Herror moments_points_xld(const Halcon::Hobject &XLD, double *M11, double *M20, double *M02);
LIntExport Herror area_center_points_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Area, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror area_center_points_xld(const Halcon::Hobject &XLD, double *Area, double *Row, double *Column);
LIntExport Herror test_self_intersection_xld(const Halcon::Hobject &XLD, const Halcon::HTuple &CloseXLD, Halcon::HTuple *DoesIntersect);
LIntExport Herror test_self_intersection_xld(const Halcon::Hobject &XLD, const Halcon::HTuple &CloseXLD, Hlong *DoesIntersect);
LIntExport Herror test_self_intersection_xld(const Halcon::Hobject &XLD, const char *CloseXLD, Halcon::HTuple *DoesIntersect);
LIntExport Herror test_self_intersection_xld(const Halcon::Hobject &XLD, const char *CloseXLD, Hlong *DoesIntersect);
LIntExport Herror select_xld_point(const Halcon::Hobject &XLDs, Halcon::Hobject *DestXLDs, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror select_xld_point(const Halcon::Hobject &XLDs,Halcon::Hobject *DestXLDs, double Row, double Column);
LIntExport Herror test_xld_point(const Halcon::Hobject &XLD, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *IsInside);
LIntExport Herror test_xld_point(const Halcon::Hobject &XLD, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Hlong *IsInside);
LIntExport Herror test_xld_point(const Halcon::Hobject &XLD, double Row, double Column, Halcon::HTuple *IsInside);
LIntExport Herror test_xld_point(const Halcon::Hobject &XLD, double Row, double Column, Hlong *IsInside);
LIntExport Herror select_shape_xld(const Halcon::Hobject &XLD, Halcon::Hobject *SelectedXLD, const Halcon::HTuple &Features, const Halcon::HTuple &Operation, const Halcon::HTuple &Min, const Halcon::HTuple &Max);
LIntExport Herror select_shape_xld(const Halcon::Hobject &XLD,Halcon::Hobject *SelectedXLD, const char *Features, const char *Operation, double Min, double Max);
LIntExport Herror orientation_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Phi);
LIntExport Herror orientation_xld(const Halcon::Hobject &XLD, double *Phi);
LIntExport Herror eccentricity_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Anisometry, Halcon::HTuple *Bulkiness, Halcon::HTuple *StructureFactor);
LIntExport Herror eccentricity_xld(const Halcon::Hobject &XLD, double *Anisometry, double *Bulkiness, double *StructureFactor);
LIntExport Herror compactness_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Compactness);
LIntExport Herror compactness_xld(const Halcon::Hobject &XLD, double *Compactness);
LIntExport Herror diameter_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2, Halcon::HTuple *Diameter);
LIntExport Herror diameter_xld(const Halcon::Hobject &XLD, double *Row1, double *Column1, double *Row2, double *Column2, double *Diameter);
LIntExport Herror convexity_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Convexity);
LIntExport Herror convexity_xld(const Halcon::Hobject &XLD, double *Convexity);
LIntExport Herror circularity_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Circularity);
LIntExport Herror circularity_xld(const Halcon::Hobject &XLD, double *Circularity);
LIntExport Herror elliptic_axis_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Ra, Halcon::HTuple *Rb, Halcon::HTuple *Phi);
LIntExport Herror elliptic_axis_xld(const Halcon::Hobject &XLD, double *Ra, double *Rb, double *Phi);
LIntExport Herror smallest_rectangle2_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2);
LIntExport Herror smallest_rectangle2_xld(const Halcon::Hobject &XLD, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror smallest_rectangle1_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror smallest_rectangle1_xld(const Halcon::Hobject &XLD, double *Row1, double *Column1, double *Row2, double *Column2);
LIntExport Herror smallest_circle_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Radius);
LIntExport Herror smallest_circle_xld(const Halcon::Hobject &XLD, double *Row, double *Column, double *Radius);
LIntExport Herror shape_trans_xld(const Halcon::Hobject &XLD, Halcon::Hobject *XLDTrans, const Halcon::HTuple &Type);
LIntExport Herror shape_trans_xld(const Halcon::Hobject &XLD,Halcon::Hobject *XLDTrans, const char *Type);
LIntExport Herror length_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Length);
LIntExport Herror length_xld(const Halcon::Hobject &XLD, double *Length);
LIntExport Herror moments_any_xld(const Halcon::Hobject &XLD, const Halcon::HTuple &Mode, const Halcon::HTuple &PointOrder, const Halcon::HTuple &Area, const Halcon::HTuple &CenterRow, const Halcon::HTuple &CenterCol, const Halcon::HTuple &P, const Halcon::HTuple &Q, Halcon::HTuple *M);
LIntExport Herror moments_any_xld(const Halcon::Hobject &XLD, const Halcon::HTuple &Mode, const Halcon::HTuple &PointOrder, const Halcon::HTuple &Area, const Halcon::HTuple &CenterRow, const Halcon::HTuple &CenterCol, const Halcon::HTuple &P, const Halcon::HTuple &Q, double *M);
LIntExport Herror moments_any_xld(const Halcon::Hobject &XLD, const char *Mode, const char *PointOrder, double Area, double CenterRow, double CenterCol, Hlong P, Hlong Q, Halcon::HTuple *M);
LIntExport Herror moments_any_xld(const Halcon::Hobject &XLD, const char *Mode, const char *PointOrder, double Area, double CenterRow, double CenterCol, Hlong P, Hlong Q, double *M);
LIntExport Herror moments_xld(const Halcon::Hobject &XLD, Halcon::HTuple *M11, Halcon::HTuple *M20, Halcon::HTuple *M02);
LIntExport Herror moments_xld(const Halcon::Hobject &XLD, double *M11, double *M20, double *M02);
LIntExport Herror area_center_xld(const Halcon::Hobject &XLD, Halcon::HTuple *Area, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *PointOrder);
LIntExport Herror area_center_xld(const Halcon::Hobject &XLD, double *Area, double *Row, double *Column, char *PointOrder);
LIntExport Herror moments_region_central_invar(const Halcon::Hobject &Regions, Halcon::HTuple *PSI1, Halcon::HTuple *PSI2, Halcon::HTuple *PSI3, Halcon::HTuple *PSI4);
LIntExport Herror moments_region_central_invar(const Halcon::Hobject &Regions, double *PSI1, double *PSI2, double *PSI3, double *PSI4);
LIntExport Herror moments_region_central(const Halcon::Hobject &Regions, Halcon::HTuple *I1, Halcon::HTuple *I2, Halcon::HTuple *I3, Halcon::HTuple *I4);
LIntExport Herror moments_region_central(const Halcon::Hobject &Regions, double *I1, double *I2, double *I3, double *I4);
LIntExport Herror moments_region_3rd_invar(const Halcon::Hobject &Regions, Halcon::HTuple *M21, Halcon::HTuple *M12, Halcon::HTuple *M03, Halcon::HTuple *M30);
LIntExport Herror moments_region_3rd_invar(const Halcon::Hobject &Regions, double *M21, double *M12, double *M03, double *M30);
LIntExport Herror moments_region_3rd(const Halcon::Hobject &Regions, Halcon::HTuple *M21, Halcon::HTuple *M12, Halcon::HTuple *M03, Halcon::HTuple *M30);
LIntExport Herror moments_region_3rd(const Halcon::Hobject &Regions, double *M21, double *M12, double *M03, double *M30);
LIntExport Herror smallest_rectangle2(const Halcon::Hobject &Regions, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Phi, Halcon::HTuple *Length1, Halcon::HTuple *Length2);
LIntExport Herror smallest_rectangle2(const Halcon::Hobject &Regions, double *Row, double *Column, double *Phi, double *Length1, double *Length2);
LIntExport Herror smallest_rectangle1(const Halcon::Hobject &Regions, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror smallest_rectangle1(const Halcon::Hobject &Regions, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2);
LIntExport Herror smallest_circle(const Halcon::Hobject &Regions, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Radius);
LIntExport Herror smallest_circle(const Halcon::Hobject &Regions, double *Row, double *Column, double *Radius);
LIntExport Herror select_shape_proto(const Halcon::Hobject &Regions, const Halcon::Hobject &Pattern, Halcon::Hobject *SelectedRegions, const Halcon::HTuple &Feature, const Halcon::HTuple &Min, const Halcon::HTuple &Max);
LIntExport Herror select_shape_proto(const Halcon::Hobject &Regions, const Halcon::Hobject &Pattern,Halcon::Hobject *SelectedRegions, const char *Feature, double Min, double Max);
LIntExport Herror region_features(const Halcon::Hobject &Regions, const Halcon::HTuple &Features, Halcon::HTuple *Value);
LIntExport Herror region_features(const Halcon::Hobject &Regions, const Halcon::HTuple &Features, double *Value);
LIntExport Herror region_features(const Halcon::Hobject &Regions, const char *Features, Halcon::HTuple *Value);
LIntExport Herror region_features(const Halcon::Hobject &Regions, const char *Features, double *Value);
LIntExport Herror select_shape(const Halcon::Hobject &Regions, Halcon::Hobject *SelectedRegions, const Halcon::HTuple &Features, const Halcon::HTuple &Operation, const Halcon::HTuple &Min, const Halcon::HTuple &Max);
LIntExport Herror select_shape(const Halcon::Hobject &Regions,Halcon::Hobject *SelectedRegions, const char *Features, const char *Operation, double Min, double Max);
LIntExport Herror runlength_features(const Halcon::Hobject &Regions, Halcon::HTuple *NumRuns, Halcon::HTuple *KFactor, Halcon::HTuple *LFactor, Halcon::HTuple *MeanLength, Halcon::HTuple *Bytes);
LIntExport Herror runlength_features(const Halcon::Hobject &Regions, Hlong *NumRuns, double *KFactor, double *LFactor, double *MeanLength, Hlong *Bytes);
LIntExport Herror find_neighbors(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, const Halcon::HTuple &MaxDistance, Halcon::HTuple *RegionIndex1, Halcon::HTuple *RegionIndex2);
LIntExport Herror find_neighbors(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, Hlong MaxDistance, Halcon::HTuple *RegionIndex1, Halcon::HTuple *RegionIndex2);
LIntExport Herror moments_region_2nd_rel_invar(const Halcon::Hobject &Regions, Halcon::HTuple *PHI1, Halcon::HTuple *PHI2);
LIntExport Herror moments_region_2nd_rel_invar(const Halcon::Hobject &Regions, double *PHI1, double *PHI2);
LIntExport Herror moments_region_2nd_invar(const Halcon::Hobject &Regions, Halcon::HTuple *M11, Halcon::HTuple *M20, Halcon::HTuple *M02);
LIntExport Herror moments_region_2nd_invar(const Halcon::Hobject &Regions, double *M11, double *M20, double *M02);
LIntExport Herror moments_region_2nd(const Halcon::Hobject &Regions, Halcon::HTuple *M11, Halcon::HTuple *M20, Halcon::HTuple *M02, Halcon::HTuple *Ia, Halcon::HTuple *Ib);
LIntExport Herror moments_region_2nd(const Halcon::Hobject &Regions, double *M11, double *M20, double *M02, double *Ia, double *Ib);
LIntExport Herror distance_rr_min(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, Halcon::HTuple *MinDistance, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror distance_rr_min(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, double *MinDistance, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2);
LIntExport Herror distance_rr_min_dil(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, Halcon::HTuple *MinDistance);
LIntExport Herror distance_rr_min_dil(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, Hlong *MinDistance);
LIntExport Herror diameter_region(const Halcon::Hobject &Regions, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2, Halcon::HTuple *Diameter);
LIntExport Herror diameter_region(const Halcon::Hobject &Regions, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2, double *Diameter);
LIntExport Herror test_region_point(const Halcon::Hobject &Regions, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *IsInside);
LIntExport Herror test_region_point(const Halcon::Hobject &Regions, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Hlong *IsInside);
LIntExport Herror test_region_point(const Halcon::Hobject &Regions, Hlong Row, Hlong Column, Halcon::HTuple *IsInside);
LIntExport Herror test_region_point(const Halcon::Hobject &Regions, Hlong Row, Hlong Column, Hlong *IsInside);
LIntExport Herror get_region_index(const Halcon::Hobject &Regions, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *Index);
LIntExport Herror get_region_index(const Halcon::Hobject &Regions, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Hlong *Index);
LIntExport Herror get_region_index(const Halcon::Hobject &Regions, Hlong Row, Hlong Column, Halcon::HTuple *Index);
LIntExport Herror get_region_index(const Halcon::Hobject &Regions, Hlong Row, Hlong Column, Hlong *Index);
LIntExport Herror select_region_point(const Halcon::Hobject &Regions, Halcon::Hobject *DestRegions, const Halcon::HTuple &Row, const Halcon::HTuple &Column);
LIntExport Herror select_region_point(const Halcon::Hobject &Regions,Halcon::Hobject *DestRegions, Hlong Row, Hlong Column);
LIntExport Herror select_shape_std(const Halcon::Hobject &Regions, Halcon::Hobject *SelectedRegions, const Halcon::HTuple &Shape, const Halcon::HTuple &Percent);
LIntExport Herror select_shape_std(const Halcon::Hobject &Regions,Halcon::Hobject *SelectedRegions, const char *Shape, double Percent);
LIntExport Herror hamming_distance_norm(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, const Halcon::HTuple &Norm, Halcon::HTuple *Distance, Halcon::HTuple *Similarity);
LIntExport Herror hamming_distance_norm(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, const Halcon::HTuple &Norm, Hlong *Distance, double *Similarity);
LIntExport Herror hamming_distance_norm(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, const char *Norm, Halcon::HTuple *Distance, Halcon::HTuple *Similarity);
LIntExport Herror hamming_distance_norm(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, const char *Norm, Hlong *Distance, double *Similarity);
LIntExport Herror hamming_distance(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, Halcon::HTuple *Distance, Halcon::HTuple *Similarity);
LIntExport Herror hamming_distance(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, Hlong *Distance, double *Similarity);
LIntExport Herror eccentricity(const Halcon::Hobject &Regions, Halcon::HTuple *Anisometry, Halcon::HTuple *Bulkiness, Halcon::HTuple *StructureFactor);
LIntExport Herror eccentricity(const Halcon::Hobject &Regions, double *Anisometry, double *Bulkiness, double *StructureFactor);
LIntExport Herror euler_number(const Halcon::Hobject &Regions, Halcon::HTuple *EulerNumber);
LIntExport Herror euler_number(const Halcon::Hobject &Regions, Hlong *EulerNumber);
LIntExport Herror orientation_region(const Halcon::Hobject &Regions, Halcon::HTuple *Phi);
LIntExport Herror orientation_region(const Halcon::Hobject &Regions, double *Phi);
LIntExport Herror elliptic_axis(const Halcon::Hobject &Regions, Halcon::HTuple *Ra, Halcon::HTuple *Rb, Halcon::HTuple *Phi);
LIntExport Herror elliptic_axis(const Halcon::Hobject &Regions, double *Ra, double *Rb, double *Phi);
LIntExport Herror select_region_spatial(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, const Halcon::HTuple &Direction, Halcon::HTuple *RegionIndex1, Halcon::HTuple *RegionIndex2);
LIntExport Herror select_region_spatial(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, const char *Direction, Halcon::HTuple *RegionIndex1, Halcon::HTuple *RegionIndex2);
LIntExport Herror spatial_relation(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, const Halcon::HTuple &Percent, Halcon::HTuple *RegionIndex1, Halcon::HTuple *RegionIndex2, Halcon::HTuple *Relation1, Halcon::HTuple *Relation2);
LIntExport Herror spatial_relation(const Halcon::Hobject &Regions1, const Halcon::Hobject &Regions2, Hlong Percent, Halcon::HTuple *RegionIndex1, Halcon::HTuple *RegionIndex2, Halcon::HTuple *Relation1, Halcon::HTuple *Relation2);
LIntExport Herror convexity(const Halcon::Hobject &Regions, Halcon::HTuple *Convexity);
LIntExport Herror convexity(const Halcon::Hobject &Regions, double *Convexity);
LIntExport Herror contlength(const Halcon::Hobject &Regions, Halcon::HTuple *ContLength);
LIntExport Herror contlength(const Halcon::Hobject &Regions, double *ContLength);
LIntExport Herror connect_and_holes(const Halcon::Hobject &Regions, Halcon::HTuple *NumConnected, Halcon::HTuple *NumHoles);
LIntExport Herror connect_and_holes(const Halcon::Hobject &Regions, Hlong *NumConnected, Hlong *NumHoles);
LIntExport Herror rectangularity(const Halcon::Hobject &Regions, Halcon::HTuple *Rectangularity);
LIntExport Herror rectangularity(const Halcon::Hobject &Regions, double *Rectangularity);
LIntExport Herror compactness(const Halcon::Hobject &Regions, Halcon::HTuple *Compactness);
LIntExport Herror compactness(const Halcon::Hobject &Regions, double *Compactness);
LIntExport Herror circularity(const Halcon::Hobject &Regions, Halcon::HTuple *Circularity);
LIntExport Herror circularity(const Halcon::Hobject &Regions, double *Circularity);
LIntExport Herror area_holes(const Halcon::Hobject &Regions, Halcon::HTuple *Area);
LIntExport Herror area_holes(const Halcon::Hobject &Regions, Hlong *Area);
LIntExport Herror area_center(const Halcon::Hobject &Regions, Halcon::HTuple *Area, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror area_center(const Halcon::Hobject &Regions, Hlong *Area, double *Row, double *Column);
LIntExport Herror runlength_distribution(const Halcon::Hobject &Region, Halcon::HTuple *Foreground, Halcon::HTuple *Background);
LIntExport Herror roundness(const Halcon::Hobject &Regions, Halcon::HTuple *Distance, Halcon::HTuple *Sigma, Halcon::HTuple *Roundness, Halcon::HTuple *Sides);
LIntExport Herror roundness(const Halcon::Hobject &Regions, double *Distance, double *Sigma, double *Roundness, double *Sides);
LIntExport Herror inner_rectangle1(const Halcon::Hobject &Regions, Halcon::HTuple *Row1, Halcon::HTuple *Column1, Halcon::HTuple *Row2, Halcon::HTuple *Column2);
LIntExport Herror inner_rectangle1(const Halcon::Hobject &Regions, Hlong *Row1, Hlong *Column1, Hlong *Row2, Hlong *Column2);
LIntExport Herror inner_circle(const Halcon::Hobject &Regions, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Radius);
LIntExport Herror inner_circle(const Halcon::Hobject &Regions, double *Row, double *Column, double *Radius);
LIntExport Herror select_lines_longest(const Halcon::HTuple &RowBeginIn, const Halcon::HTuple &ColBeginIn, const Halcon::HTuple &RowEndIn, const Halcon::HTuple &ColEndIn, const Halcon::HTuple &Num, Halcon::HTuple *RowBeginOut, Halcon::HTuple *ColBeginOut, Halcon::HTuple *RowEndOut, Halcon::HTuple *ColEndOut);
LIntExport Herror partition_lines(const Halcon::HTuple &RowBeginIn, const Halcon::HTuple &ColBeginIn, const Halcon::HTuple &RowEndIn, const Halcon::HTuple &ColEndIn, const Halcon::HTuple &Feature, const Halcon::HTuple &Operation, const Halcon::HTuple &Min, const Halcon::HTuple &Max, Halcon::HTuple *RowBeginOut, Halcon::HTuple *ColBeginOut, Halcon::HTuple *RowEndOut, Halcon::HTuple *ColEndOut, Halcon::HTuple *FailRowBOut, Halcon::HTuple *FailColBOut, Halcon::HTuple *FailRowEOut, Halcon::HTuple *FailColEOut);
LIntExport Herror select_lines(const Halcon::HTuple &RowBeginIn, const Halcon::HTuple &ColBeginIn, const Halcon::HTuple &RowEndIn, const Halcon::HTuple &ColEndIn, const Halcon::HTuple &Feature, const Halcon::HTuple &Operation, const Halcon::HTuple &Min, const Halcon::HTuple &Max, Halcon::HTuple *RowBeginOut, Halcon::HTuple *ColBeginOut, Halcon::HTuple *RowEndOut, Halcon::HTuple *ColEndOut);
LIntExport Herror line_position(const Halcon::HTuple &RowBegin, const Halcon::HTuple &ColBegin, const Halcon::HTuple &RowEnd, const Halcon::HTuple &ColEnd, Halcon::HTuple *RowCenter, Halcon::HTuple *ColCenter, Halcon::HTuple *Length, Halcon::HTuple *Phi);
LIntExport Herror line_position(const Halcon::HTuple &RowBegin, const Halcon::HTuple &ColBegin, const Halcon::HTuple &RowEnd, const Halcon::HTuple &ColEnd, double *RowCenter, double *ColCenter, double *Length, double *Phi);
LIntExport Herror line_position(Hlong RowBegin, Hlong ColBegin, Hlong RowEnd, Hlong ColEnd, Halcon::HTuple *RowCenter, Halcon::HTuple *ColCenter, Halcon::HTuple *Length, Halcon::HTuple *Phi);
LIntExport Herror line_position(Hlong RowBegin, Hlong ColBegin, Hlong RowEnd, Hlong ColEnd, double *RowCenter, double *ColCenter, double *Length, double *Phi);
LIntExport Herror line_orientation(const Halcon::HTuple &RowBegin, const Halcon::HTuple &ColBegin, const Halcon::HTuple &RowEnd, const Halcon::HTuple &ColEnd, Halcon::HTuple *Phi);
LIntExport Herror line_orientation(const Halcon::HTuple &RowBegin, const Halcon::HTuple &ColBegin, const Halcon::HTuple &RowEnd, const Halcon::HTuple &ColEnd, double *Phi);
LIntExport Herror line_orientation(double RowBegin, double ColBegin, double RowEnd, double ColEnd, Halcon::HTuple *Phi);
LIntExport Herror line_orientation(double RowBegin, double ColBegin, double RowEnd, double ColEnd, double *Phi);
LIntExport Herror approx_chain_simple(const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *ArcCenterRow, Halcon::HTuple *ArcCenterCol, Halcon::HTuple *ArcAngle, Halcon::HTuple *ArcBeginRow, Halcon::HTuple *ArcBeginCol, Halcon::HTuple *LineBeginRow, Halcon::HTuple *LineBeginCol, Halcon::HTuple *LineEndRow, Halcon::HTuple *LineEndCol, Halcon::HTuple *Order);
LIntExport Herror approx_chain(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &MinWidthCoord, const Halcon::HTuple &MaxWidthCoord, const Halcon::HTuple &ThreshStart, const Halcon::HTuple &ThreshEnd, const Halcon::HTuple &ThreshStep, const Halcon::HTuple &MinWidthSmooth, const Halcon::HTuple &MaxWidthSmooth, const Halcon::HTuple &MinWidthCurve, const Halcon::HTuple &MaxWidthCurve, const Halcon::HTuple &Weight1, const Halcon::HTuple &Weight2, const Halcon::HTuple &Weight3, Halcon::HTuple *ArcCenterRow, Halcon::HTuple *ArcCenterCol, Halcon::HTuple *ArcAngle, Halcon::HTuple *ArcBeginRow, Halcon::HTuple *ArcBeginCol, Halcon::HTuple *LineBeginRow, Halcon::HTuple *LineBeginCol, Halcon::HTuple *LineEndRow, Halcon::HTuple *LineEndCol, Halcon::HTuple *Order);
LIntExport Herror fit_surface_first_order(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Algorithm, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, Halcon::HTuple *Alpha, Halcon::HTuple *Beta, Halcon::HTuple *Gamma);
LIntExport Herror fit_surface_first_order(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Algorithm, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, double *Alpha, double *Beta, double *Gamma);
LIntExport Herror fit_surface_first_order(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const char *Algorithm, Hlong Iterations, double ClippingFactor, Halcon::HTuple *Alpha, Halcon::HTuple *Beta, Halcon::HTuple *Gamma);
LIntExport Herror fit_surface_first_order(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const char *Algorithm, Hlong Iterations, double ClippingFactor, double *Alpha, double *Beta, double *Gamma);
LIntExport Herror fit_surface_second_order(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Algorithm, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, Halcon::HTuple *Alpha, Halcon::HTuple *Beta, Halcon::HTuple *Gamma, Halcon::HTuple *Delta, Halcon::HTuple *Epsilon, Halcon::HTuple *Zeta);
LIntExport Herror fit_surface_second_order(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Algorithm, const Halcon::HTuple &Iterations, const Halcon::HTuple &ClippingFactor, double *Alpha, double *Beta, double *Gamma, double *Delta, double *Epsilon, double *Zeta);
LIntExport Herror fit_surface_second_order(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const char *Algorithm, Hlong Iterations, double ClippingFactor, Halcon::HTuple *Alpha, Halcon::HTuple *Beta, Halcon::HTuple *Gamma, Halcon::HTuple *Delta, Halcon::HTuple *Epsilon, Halcon::HTuple *Zeta);
LIntExport Herror fit_surface_second_order(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const char *Algorithm, Hlong Iterations, double ClippingFactor, double *Alpha, double *Beta, double *Gamma, double *Delta, double *Epsilon, double *Zeta);
LIntExport Herror gen_image_surface_second_order(Halcon::Hobject *ImageSurface, const Halcon::HTuple &Type, const Halcon::HTuple &Alpha, const Halcon::HTuple &Beta, const Halcon::HTuple &Gamma, const Halcon::HTuple &Delta, const Halcon::HTuple &Epsilon, const Halcon::HTuple &Zeta, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_image_surface_second_order(Halcon::Hobject *ImageSurface, const char *Type, double Alpha, double Beta, double Gamma, double Delta, double Epsilon, double Zeta, double Row, double Column, Hlong Width, Hlong Height);
LIntExport Herror gen_image_surface_first_order(Halcon::Hobject *ImageSurface, const Halcon::HTuple &Type, const Halcon::HTuple &Alpha, const Halcon::HTuple &Beta, const Halcon::HTuple &Gamma, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Width, const Halcon::HTuple &Height);
LIntExport Herror gen_image_surface_first_order(Halcon::Hobject *ImageSurface, const char *Type, double Alpha, double Beta, double Gamma, double Row, double Column, Hlong Width, Hlong Height);
LIntExport Herror shape_histo_point(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const Halcon::HTuple &Feature, const Halcon::HTuple &Row, const Halcon::HTuple &Column, Halcon::HTuple *AbsoluteHisto, Halcon::HTuple *RelativeHisto);
LIntExport Herror shape_histo_point(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const char *Feature, Hlong Row, Hlong Column, Halcon::HTuple *AbsoluteHisto, Halcon::HTuple *RelativeHisto);
LIntExport Herror shape_histo_all(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const Halcon::HTuple &Feature, Halcon::HTuple *AbsoluteHisto, Halcon::HTuple *RelativeHisto);
LIntExport Herror shape_histo_all(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const char *Feature, Halcon::HTuple *AbsoluteHisto, Halcon::HTuple *RelativeHisto);
LIntExport Herror gray_features(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Features, Halcon::HTuple *Value);
LIntExport Herror gray_features(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Features, double *Value);
LIntExport Herror gray_features(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const char *Features, Halcon::HTuple *Value);
LIntExport Herror gray_features(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const char *Features, double *Value);
LIntExport Herror select_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::Hobject *SelectedRegions, const Halcon::HTuple &Features, const Halcon::HTuple &Operation, const Halcon::HTuple &Min, const Halcon::HTuple &Max);
LIntExport Herror select_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image,Halcon::Hobject *SelectedRegions, const char *Features, const char *Operation, double Min, double Max);
LIntExport Herror min_max_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Percent, Halcon::HTuple *Min, Halcon::HTuple *Max, Halcon::HTuple *Range);
LIntExport Herror min_max_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Percent, double *Min, double *Max, double *Range);
LIntExport Herror min_max_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double Percent, Halcon::HTuple *Min, Halcon::HTuple *Max, Halcon::HTuple *Range);
LIntExport Herror min_max_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double Percent, double *Min, double *Max, double *Range);
LIntExport Herror intensity(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::HTuple *Mean, Halcon::HTuple *Deviation);
LIntExport Herror intensity(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double *Mean, double *Deviation);
LIntExport Herror gray_histo_range(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Min, const Halcon::HTuple &Max, const Halcon::HTuple &NumBins, Halcon::HTuple *Histo, Halcon::HTuple *BinSize);
LIntExport Herror gray_histo_range(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Min, const Halcon::HTuple &Max, const Halcon::HTuple &NumBins, Hlong *Histo, double *BinSize);
LIntExport Herror gray_histo_range(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double Min, double Max, Hlong NumBins, Halcon::HTuple *Histo, Halcon::HTuple *BinSize);
LIntExport Herror gray_histo_range(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double Min, double Max, Hlong NumBins, Hlong *Histo, double *BinSize);
LIntExport Herror histo_2dim(const Halcon::Hobject &Regions, const Halcon::Hobject &ImageCol, const Halcon::Hobject &ImageRow, Halcon::Hobject *Histo2Dim);
LIntExport Herror gray_histo_abs(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &Quantization, Halcon::HTuple *AbsoluteHisto);
LIntExport Herror gray_histo_abs(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double Quantization, Halcon::HTuple *AbsoluteHisto);
LIntExport Herror gray_histo(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::HTuple *AbsoluteHisto, Halcon::HTuple *RelativeHisto);
LIntExport Herror entropy_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::HTuple *Entropy, Halcon::HTuple *Anisotropy);
LIntExport Herror entropy_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double *Entropy, double *Anisotropy);
LIntExport Herror cooc_feature_matrix(const Halcon::Hobject &CoocMatrix, Halcon::HTuple *Energy, Halcon::HTuple *Correlation, Halcon::HTuple *Homogeneity, Halcon::HTuple *Contrast);
LIntExport Herror cooc_feature_matrix(const Halcon::Hobject &CoocMatrix, double *Energy, double *Correlation, double *Homogeneity, double *Contrast);
LIntExport Herror cooc_feature_image(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &LdGray, const Halcon::HTuple &Direction, Halcon::HTuple *Energy, Halcon::HTuple *Correlation, Halcon::HTuple *Homogeneity, Halcon::HTuple *Contrast);
LIntExport Herror cooc_feature_image(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, const Halcon::HTuple &LdGray, const Halcon::HTuple &Direction, double *Energy, double *Correlation, double *Homogeneity, double *Contrast);
LIntExport Herror cooc_feature_image(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Hlong LdGray, Hlong Direction, Halcon::HTuple *Energy, Halcon::HTuple *Correlation, Halcon::HTuple *Homogeneity, Halcon::HTuple *Contrast);
LIntExport Herror cooc_feature_image(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Hlong LdGray, Hlong Direction, double *Energy, double *Correlation, double *Homogeneity, double *Contrast);
LIntExport Herror gen_cooc_matrix(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::Hobject *Matrix, const Halcon::HTuple &LdGray, const Halcon::HTuple &Direction);
LIntExport Herror gen_cooc_matrix(const Halcon::Hobject &Regions, const Halcon::Hobject &Image,Halcon::Hobject *Matrix, Hlong LdGray, Hlong Direction);
LIntExport Herror moments_gray_plane(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::HTuple *MRow, Halcon::HTuple *MCol, Halcon::HTuple *Alpha, Halcon::HTuple *Beta, Halcon::HTuple *Mean);
LIntExport Herror moments_gray_plane(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double *MRow, double *MCol, double *Alpha, double *Beta, double *Mean);
LIntExport Herror plane_deviation(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::HTuple *Deviation);
LIntExport Herror plane_deviation(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double *Deviation);
LIntExport Herror elliptic_axis_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::HTuple *Ra, Halcon::HTuple *Rb, Halcon::HTuple *Phi);
LIntExport Herror elliptic_axis_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double *Ra, double *Rb, double *Phi);
LIntExport Herror area_center_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, Halcon::HTuple *Area, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror area_center_gray(const Halcon::Hobject &Regions, const Halcon::Hobject &Image, double *Area, double *Row, double *Column);
LIntExport Herror gray_projections(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const Halcon::HTuple &Mode, Halcon::HTuple *HorProjection, Halcon::HTuple *VertProjection);
LIntExport Herror gray_projections(const Halcon::Hobject &Region, const Halcon::Hobject &Image, const char *Mode, Halcon::HTuple *HorProjection, Halcon::HTuple *VertProjection);
LIntExport Herror get_data_code_2d_objects(Halcon::Hobject *DataCodeObjects, const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &CandidateHandle, const Halcon::HTuple &ObjectName);
LIntExport Herror get_data_code_2d_objects(Halcon::Hobject *DataCodeObjects, Hlong DataCodeHandle, Hlong CandidateHandle, const char *ObjectName);
LIntExport Herror get_data_code_2d_results(const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &CandidateHandle, const Halcon::HTuple &ResultNames, Halcon::HTuple *ResultValues);
LIntExport Herror get_data_code_2d_results(const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &CandidateHandle, const Halcon::HTuple &ResultNames, char *ResultValues);
LIntExport Herror find_data_code_2d(const Halcon::Hobject &Image, Halcon::Hobject *SymbolXLDs, const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *ResultHandles, Halcon::HTuple *DecodedDataStrings);
LIntExport Herror find_data_code_2d(const Halcon::Hobject &Image, Halcon::Hobject *SymbolXLDs, const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *ResultHandles, char *DecodedDataStrings);
LIntExport Herror find_data_code_2d(const Halcon::Hobject &Image,Halcon::Hobject *SymbolXLDs, Hlong DataCodeHandle, const char *GenParamNames, Hlong GenParamValues, Halcon::HTuple *ResultHandles, Halcon::HTuple *DecodedDataStrings);
LIntExport Herror find_data_code_2d(const Halcon::Hobject &Image, Halcon::Hobject *SymbolXLDs, Hlong DataCodeHandle, const char *GenParamNames, Hlong GenParamValues, Hlong *ResultHandles, char *DecodedDataStrings);
LIntExport Herror set_data_code_2d_param(const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror get_data_code_2d_param(const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_data_code_2d_param(const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &GenParamNames, char *GenParamValues);
LIntExport Herror get_data_code_2d_param(Hlong DataCodeHandle, const char *GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_data_code_2d_param(Hlong DataCodeHandle, const char *GenParamNames, char *GenParamValues);
LIntExport Herror query_data_code_2d_params(const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &QueryName, Halcon::HTuple *GenParamNames);
LIntExport Herror query_data_code_2d_params(Hlong DataCodeHandle, const char *QueryName, Halcon::HTuple *GenParamNames);
LIntExport Herror deserialize_data_code_2d_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *DataCodeHandle);
LIntExport Herror deserialize_data_code_2d_model(const Halcon::HTuple &SerializedItemHandle, Hlong *DataCodeHandle);
LIntExport Herror deserialize_data_code_2d_model(Hlong SerializedItemHandle, Halcon::HTuple *DataCodeHandle);
LIntExport Herror deserialize_data_code_2d_model(Hlong SerializedItemHandle, Hlong *DataCodeHandle);
LIntExport Herror serialize_data_code_2d_model(const Halcon::HTuple &DataCodeHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_data_code_2d_model(const Halcon::HTuple &DataCodeHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_data_code_2d_model(Hlong DataCodeHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_data_code_2d_model(Hlong DataCodeHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_data_code_2d_model(const Halcon::HTuple &FileName, Halcon::HTuple *DataCodeHandle);
LIntExport Herror read_data_code_2d_model(const Halcon::HTuple &FileName, Hlong *DataCodeHandle);
LIntExport Herror read_data_code_2d_model(const char *FileName, Halcon::HTuple *DataCodeHandle);
LIntExport Herror read_data_code_2d_model(const char *FileName, Hlong *DataCodeHandle);
LIntExport Herror write_data_code_2d_model(const Halcon::HTuple &DataCodeHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_data_code_2d_model(Hlong DataCodeHandle, const char *FileName);
LIntExport Herror clear_all_data_code_2d_models(void);
LIntExport Herror clear_data_code_2d_model(const Halcon::HTuple &DataCodeHandle);
LIntExport Herror clear_data_code_2d_model(Hlong DataCodeHandle);
LIntExport Herror create_data_code_2d_model(const Halcon::HTuple &SymbolType, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *DataCodeHandle);
LIntExport Herror create_data_code_2d_model(const Halcon::HTuple &SymbolType, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *DataCodeHandle);
LIntExport Herror deserialize_class_train_data(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror deserialize_class_train_data(const Halcon::HTuple &SerializedItemHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror deserialize_class_train_data(Hlong SerializedItemHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror deserialize_class_train_data(Hlong SerializedItemHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror serialize_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_class_train_data(Hlong ClassTrainDataHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_train_data(Hlong ClassTrainDataHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_class_train_data(const Halcon::HTuple &FileName, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror read_class_train_data(const Halcon::HTuple &FileName, Hlong *ClassTrainDataHandle);
LIntExport Herror read_class_train_data(const char *FileName, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror read_class_train_data(const char *FileName, Hlong *ClassTrainDataHandle);
LIntExport Herror write_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_class_train_data(Hlong ClassTrainDataHandle, const char *FileName);
LIntExport Herror select_sub_feature_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &SubFeatureIndices, Halcon::HTuple *SelectedClassTrainDataHandle);
LIntExport Herror select_sub_feature_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &SubFeatureIndices, Hlong *SelectedClassTrainDataHandle);
LIntExport Herror set_feature_lengths_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &SubFeatureLength, const Halcon::HTuple &Names);
LIntExport Herror get_class_train_data_gmm(const Halcon::HTuple &GMMHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_gmm(const Halcon::HTuple &GMMHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_gmm(Hlong GMMHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_gmm(Hlong GMMHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror add_class_train_data_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &ClassTrainDataHandle);
LIntExport Herror add_class_train_data_gmm(Hlong GMMHandle, Hlong ClassTrainDataHandle);
LIntExport Herror get_class_train_data_mlp(const Halcon::HTuple &MLPHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_mlp(const Halcon::HTuple &MLPHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_mlp(Hlong MLPHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_mlp(Hlong MLPHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror add_class_train_data_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &ClassTrainDataHandle);
LIntExport Herror add_class_train_data_mlp(Hlong MLPHandle, Hlong ClassTrainDataHandle);
LIntExport Herror get_class_train_data_knn(const Halcon::HTuple &KNNHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_knn(const Halcon::HTuple &KNNHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_knn(Hlong KNNHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_knn(Hlong KNNHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror add_class_train_data_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &ClassTrainDataHandle);
LIntExport Herror add_class_train_data_knn(Hlong KNNHandle, Hlong ClassTrainDataHandle);
LIntExport Herror get_class_train_data_svm(const Halcon::HTuple &SVMHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_svm(const Halcon::HTuple &SVMHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_svm(Hlong SVMHandle, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror get_class_train_data_svm(Hlong SVMHandle, Hlong *ClassTrainDataHandle);
LIntExport Herror add_class_train_data_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &ClassTrainDataHandle);
LIntExport Herror add_class_train_data_svm(Hlong SVMHandle, Hlong ClassTrainDataHandle);
LIntExport Herror get_sample_num_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, Hlong *NumSamples);
LIntExport Herror get_sample_num_class_train_data(Hlong ClassTrainDataHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_train_data(Hlong ClassTrainDataHandle, Hlong *NumSamples);
LIntExport Herror get_sample_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &IndexSample, Halcon::HTuple *Features, Halcon::HTuple *ClassID);
LIntExport Herror get_sample_class_train_data(Hlong ClassTrainDataHandle, Hlong IndexSample, Halcon::HTuple *Features, Halcon::HTuple *ClassID);
LIntExport Herror clear_all_class_train_data(void);
LIntExport Herror clear_class_train_data(const Halcon::HTuple &ClassTrainDataHandle);
LIntExport Herror clear_class_train_data(Hlong ClassTrainDataHandle);
LIntExport Herror add_sample_class_train_data(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &Order, const Halcon::HTuple &Features, const Halcon::HTuple &ClassID);
LIntExport Herror create_class_train_data(const Halcon::HTuple &NumDim, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror create_class_train_data(const Halcon::HTuple &NumDim, Hlong *ClassTrainDataHandle);
LIntExport Herror create_class_train_data(Hlong NumDim, Halcon::HTuple *ClassTrainDataHandle);
LIntExport Herror create_class_train_data(Hlong NumDim, Hlong *ClassTrainDataHandle);
LIntExport Herror select_feature_set_mlp(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &SelectionMethod, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *MLPHandle, Halcon::HTuple *SelectedFeatureIndices, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_mlp(Hlong ClassTrainDataHandle, const char *SelectionMethod, const char *GenParamNames, double GenParamValues, Halcon::HTuple *MLPHandle, Halcon::HTuple *SelectedFeatureIndices, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_svm(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &SelectionMethod, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *SVMHandle, Halcon::HTuple *SelectedFeatureIndices, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_svm(Hlong ClassTrainDataHandle, const char *SelectionMethod, const char *GenParamNames, double GenParamValues, Halcon::HTuple *SVMHandle, Halcon::HTuple *SelectedFeatureIndices, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_gmm(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &SelectionMethod, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *GMMHandle, Halcon::HTuple *SelectedFeatureIndices, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_gmm(Hlong ClassTrainDataHandle, const char *SelectionMethod, const char *GenParamNames, double GenParamValues, Halcon::HTuple *GMMHandle, Halcon::HTuple *SelectedFeatureIndices, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_knn(const Halcon::HTuple &ClassTrainDataHandle, const Halcon::HTuple &SelectionMethod, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *KNNHandle, Halcon::HTuple *SelectedFeatureIndices, Halcon::HTuple *Score);
LIntExport Herror select_feature_set_knn(Hlong ClassTrainDataHandle, const char *SelectionMethod, const char *GenParamNames, double GenParamValues, Halcon::HTuple *KNNHandle, Halcon::HTuple *SelectedFeatureIndices, Halcon::HTuple *Score);
LIntExport Herror clear_all_class_knn(void);
LIntExport Herror clear_class_knn(const Halcon::HTuple &KNNHandle);
LIntExport Herror clear_class_knn(Hlong KNNHandle);
LIntExport Herror get_sample_num_class_knn(const Halcon::HTuple &KNNHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_knn(const Halcon::HTuple &KNNHandle, Hlong *NumSamples);
LIntExport Herror get_sample_num_class_knn(Hlong KNNHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_knn(Hlong KNNHandle, Hlong *NumSamples);
LIntExport Herror get_sample_class_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &IndexSample, Halcon::HTuple *Features, Halcon::HTuple *ClassID);
LIntExport Herror get_sample_class_knn(Hlong KNNHandle, Hlong IndexSample, Halcon::HTuple *Features, Halcon::HTuple *ClassID);
LIntExport Herror deserialize_class_knn(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *KNNHandle);
LIntExport Herror deserialize_class_knn(const Halcon::HTuple &SerializedItemHandle, Hlong *KNNHandle);
LIntExport Herror deserialize_class_knn(Hlong SerializedItemHandle, Halcon::HTuple *KNNHandle);
LIntExport Herror deserialize_class_knn(Hlong SerializedItemHandle, Hlong *KNNHandle);
LIntExport Herror serialize_class_knn(const Halcon::HTuple &KNNHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_knn(const Halcon::HTuple &KNNHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_class_knn(Hlong KNNHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_knn(Hlong KNNHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_class_knn(const Halcon::HTuple &FileName, Halcon::HTuple *KNNHandle);
LIntExport Herror read_class_knn(const Halcon::HTuple &FileName, Hlong *KNNHandle);
LIntExport Herror read_class_knn(const char *FileName, Halcon::HTuple *KNNHandle);
LIntExport Herror read_class_knn(const char *FileName, Hlong *KNNHandle);
LIntExport Herror write_class_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_class_knn(Hlong KNNHandle, const char *FileName);
LIntExport Herror get_params_class_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror set_params_class_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror classify_class_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &Features, Halcon::HTuple *Result, Halcon::HTuple *Rating);
LIntExport Herror train_class_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror add_sample_class_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &Features, const Halcon::HTuple &ClassID);
LIntExport Herror add_sample_class_knn(Hlong KNNHandle, double Features, Hlong ClassID);
LIntExport Herror create_class_knn(const Halcon::HTuple &NumDim, Halcon::HTuple *KNNHandle);
LIntExport Herror create_class_knn(const Halcon::HTuple &NumDim, Hlong *KNNHandle);
LIntExport Herror clear_all_class_lut(void);
LIntExport Herror clear_class_lut(const Halcon::HTuple &ClassLUTHandle);
LIntExport Herror clear_class_lut(Hlong ClassLUTHandle);
LIntExport Herror create_class_lut_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *ClassLUTHandle);
LIntExport Herror create_class_lut_knn(const Halcon::HTuple &KNNHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *ClassLUTHandle);
LIntExport Herror create_class_lut_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *ClassLUTHandle);
LIntExport Herror create_class_lut_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *ClassLUTHandle);
LIntExport Herror create_class_lut_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *ClassLUTHandle);
LIntExport Herror create_class_lut_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *ClassLUTHandle);
LIntExport Herror create_class_lut_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *ClassLUTHandle);
LIntExport Herror create_class_lut_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *ClassLUTHandle);
LIntExport Herror clear_all_class_gmm(void);
LIntExport Herror clear_class_gmm(const Halcon::HTuple &GMMHandle);
LIntExport Herror clear_class_gmm(Hlong GMMHandle);
LIntExport Herror clear_samples_class_gmm(const Halcon::HTuple &GMMHandle);
LIntExport Herror clear_samples_class_gmm(Hlong GMMHandle);
LIntExport Herror deserialize_class_gmm(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *GMMHandle);
LIntExport Herror deserialize_class_gmm(const Halcon::HTuple &SerializedItemHandle, Hlong *GMMHandle);
LIntExport Herror deserialize_class_gmm(Hlong SerializedItemHandle, Halcon::HTuple *GMMHandle);
LIntExport Herror deserialize_class_gmm(Hlong SerializedItemHandle, Hlong *GMMHandle);
LIntExport Herror serialize_class_gmm(const Halcon::HTuple &GMMHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_gmm(const Halcon::HTuple &GMMHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_class_gmm(Hlong GMMHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_gmm(Hlong GMMHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_class_gmm(const Halcon::HTuple &FileName, Halcon::HTuple *GMMHandle);
LIntExport Herror read_class_gmm(const Halcon::HTuple &FileName, Hlong *GMMHandle);
LIntExport Herror read_class_gmm(const char *FileName, Halcon::HTuple *GMMHandle);
LIntExport Herror read_class_gmm(const char *FileName, Hlong *GMMHandle);
LIntExport Herror write_class_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_class_gmm(Hlong GMMHandle, const char *FileName);
LIntExport Herror read_samples_class_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &FileName);
LIntExport Herror read_samples_class_gmm(Hlong GMMHandle, const char *FileName);
LIntExport Herror write_samples_class_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_samples_class_gmm(Hlong GMMHandle, const char *FileName);
LIntExport Herror classify_class_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &Features, const Halcon::HTuple &Num, Halcon::HTuple *ClassID, Halcon::HTuple *ClassProb, Halcon::HTuple *Density, Halcon::HTuple *KSigmaProb);
LIntExport Herror evaluate_class_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &Features, Halcon::HTuple *ClassProb, Halcon::HTuple *Density, Halcon::HTuple *KSigmaProb);
LIntExport Herror train_class_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &MaxIter, const Halcon::HTuple &Threshold, const Halcon::HTuple &ClassPriors, const Halcon::HTuple &Regularize, Halcon::HTuple *Centers, Halcon::HTuple *Iter);
LIntExport Herror train_class_gmm(Hlong GMMHandle, Hlong MaxIter, double Threshold, const char *ClassPriors, double Regularize, Halcon::HTuple *Centers, Halcon::HTuple *Iter);
LIntExport Herror get_prep_info_class_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_prep_info_class_gmm(Hlong GMMHandle, const char *Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_sample_num_class_gmm(const Halcon::HTuple &GMMHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_gmm(const Halcon::HTuple &GMMHandle, Hlong *NumSamples);
LIntExport Herror get_sample_num_class_gmm(Hlong GMMHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_gmm(Hlong GMMHandle, Hlong *NumSamples);
LIntExport Herror get_sample_class_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &NumSample, Halcon::HTuple *Features, Halcon::HTuple *ClassID);
LIntExport Herror get_sample_class_gmm(Hlong GMMHandle, Hlong NumSample, Halcon::HTuple *Features, Halcon::HTuple *ClassID);
LIntExport Herror add_sample_class_gmm(const Halcon::HTuple &GMMHandle, const Halcon::HTuple &Features, const Halcon::HTuple &ClassID, const Halcon::HTuple &Randomize);
LIntExport Herror get_params_class_gmm(const Halcon::HTuple &GMMHandle, Halcon::HTuple *NumDim, Halcon::HTuple *NumClasses, Halcon::HTuple *MinCenters, Halcon::HTuple *MaxCenters, Halcon::HTuple *CovarType);
LIntExport Herror get_params_class_gmm(Hlong GMMHandle, Halcon::HTuple *NumDim, Halcon::HTuple *NumClasses, Halcon::HTuple *MinCenters, Halcon::HTuple *MaxCenters, Halcon::HTuple *CovarType);
LIntExport Herror create_class_gmm(const Halcon::HTuple &NumDim, const Halcon::HTuple &NumClasses, const Halcon::HTuple &NumCenters, const Halcon::HTuple &CovarType, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, const Halcon::HTuple &RandSeed, Halcon::HTuple *GMMHandle);
LIntExport Herror create_class_gmm(const Halcon::HTuple &NumDim, const Halcon::HTuple &NumClasses, const Halcon::HTuple &NumCenters, const Halcon::HTuple &CovarType, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, const Halcon::HTuple &RandSeed, Hlong *GMMHandle);
LIntExport Herror create_class_gmm(Hlong NumDim, Hlong NumClasses, Hlong NumCenters, const char *CovarType, const char *Preprocessing, Hlong NumComponents, Hlong RandSeed, Halcon::HTuple *GMMHandle);
LIntExport Herror create_class_gmm(Hlong NumDim, Hlong NumClasses, Hlong NumCenters, const char *CovarType, const char *Preprocessing, Hlong NumComponents, Hlong RandSeed, Hlong *GMMHandle);
LIntExport Herror clear_all_class_svm(void);
LIntExport Herror clear_class_svm(const Halcon::HTuple &SVMHandle);
LIntExport Herror clear_class_svm(Hlong SVMHandle);
LIntExport Herror clear_samples_class_svm(const Halcon::HTuple &SVMHandle);
LIntExport Herror clear_samples_class_svm(Hlong SVMHandle);
LIntExport Herror deserialize_class_svm(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *SVMHandle);
LIntExport Herror deserialize_class_svm(const Halcon::HTuple &SerializedItemHandle, Hlong *SVMHandle);
LIntExport Herror deserialize_class_svm(Hlong SerializedItemHandle, Halcon::HTuple *SVMHandle);
LIntExport Herror deserialize_class_svm(Hlong SerializedItemHandle, Hlong *SVMHandle);
LIntExport Herror serialize_class_svm(const Halcon::HTuple &SVMHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_svm(const Halcon::HTuple &SVMHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_class_svm(Hlong SVMHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_svm(Hlong SVMHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_class_svm(const Halcon::HTuple &FileName, Halcon::HTuple *SVMHandle);
LIntExport Herror read_class_svm(const Halcon::HTuple &FileName, Hlong *SVMHandle);
LIntExport Herror read_class_svm(const char *FileName, Halcon::HTuple *SVMHandle);
LIntExport Herror read_class_svm(const char *FileName, Hlong *SVMHandle);
LIntExport Herror write_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_class_svm(Hlong SVMHandle, const char *FileName);
LIntExport Herror read_samples_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &FileName);
LIntExport Herror read_samples_class_svm(Hlong SVMHandle, const char *FileName);
LIntExport Herror write_samples_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_samples_class_svm(Hlong SVMHandle, const char *FileName);
LIntExport Herror evaluate_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &Features, Halcon::HTuple *Result);
LIntExport Herror evaluate_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &Features, double *Result);
LIntExport Herror classify_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &Features, const Halcon::HTuple &Num, Halcon::HTuple *Class);
LIntExport Herror classify_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &Features, const Halcon::HTuple &Num, Hlong *Class);
LIntExport Herror reduce_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &Method, const Halcon::HTuple &MinRemainingSV, const Halcon::HTuple &MaxError, Halcon::HTuple *SVMHandleReduced);
LIntExport Herror reduce_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &Method, const Halcon::HTuple &MinRemainingSV, const Halcon::HTuple &MaxError, Hlong *SVMHandleReduced);
LIntExport Herror reduce_class_svm(Hlong SVMHandle, const char *Method, Hlong MinRemainingSV, double MaxError, Halcon::HTuple *SVMHandleReduced);
LIntExport Herror reduce_class_svm(Hlong SVMHandle, const char *Method, Hlong MinRemainingSV, double MaxError, Hlong *SVMHandleReduced);
LIntExport Herror train_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &Epsilon, const Halcon::HTuple &TrainMode);
LIntExport Herror get_prep_info_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_prep_info_class_svm(Hlong SVMHandle, const char *Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_support_vector_num_class_svm(const Halcon::HTuple &SVMHandle, Halcon::HTuple *NumSupportVectors, Halcon::HTuple *NumSVPerSVM);
LIntExport Herror get_support_vector_num_class_svm(Hlong SVMHandle, Halcon::HTuple *NumSupportVectors, Halcon::HTuple *NumSVPerSVM);
LIntExport Herror get_support_vector_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &IndexSupportVector, Halcon::HTuple *Index);
LIntExport Herror get_support_vector_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &IndexSupportVector, double *Index);
LIntExport Herror get_sample_num_class_svm(const Halcon::HTuple &SVMHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_svm(const Halcon::HTuple &SVMHandle, Hlong *NumSamples);
LIntExport Herror get_sample_num_class_svm(Hlong SVMHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_svm(Hlong SVMHandle, Hlong *NumSamples);
LIntExport Herror get_sample_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &IndexSample, Halcon::HTuple *Features, Halcon::HTuple *Target);
LIntExport Herror get_sample_class_svm(Hlong SVMHandle, Hlong IndexSample, Halcon::HTuple *Features, Halcon::HTuple *Target);
LIntExport Herror add_sample_class_svm(const Halcon::HTuple &SVMHandle, const Halcon::HTuple &Features, const Halcon::HTuple &Class);
LIntExport Herror get_params_class_svm(const Halcon::HTuple &SVMHandle, Halcon::HTuple *NumFeatures, Halcon::HTuple *KernelType, Halcon::HTuple *KernelParam, Halcon::HTuple *Nu, Halcon::HTuple *NumClasses, Halcon::HTuple *Mode, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumComponents);
LIntExport Herror get_params_class_svm(const Halcon::HTuple &SVMHandle, Hlong *NumFeatures, char *KernelType, double *KernelParam, double *Nu, Hlong *NumClasses, char *Mode, char *Preprocessing, Hlong *NumComponents);
LIntExport Herror get_params_class_svm(Hlong SVMHandle, Halcon::HTuple *NumFeatures, Halcon::HTuple *KernelType, Halcon::HTuple *KernelParam, Halcon::HTuple *Nu, Halcon::HTuple *NumClasses, Halcon::HTuple *Mode, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumComponents);
LIntExport Herror get_params_class_svm(Hlong SVMHandle, Hlong *NumFeatures, char *KernelType, double *KernelParam, double *Nu, Hlong *NumClasses, char *Mode, char *Preprocessing, Hlong *NumComponents);
LIntExport Herror create_class_svm(const Halcon::HTuple &NumFeatures, const Halcon::HTuple &KernelType, const Halcon::HTuple &KernelParam, const Halcon::HTuple &Nu, const Halcon::HTuple &NumClasses, const Halcon::HTuple &Mode, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, Halcon::HTuple *SVMHandle);
LIntExport Herror create_class_svm(const Halcon::HTuple &NumFeatures, const Halcon::HTuple &KernelType, const Halcon::HTuple &KernelParam, const Halcon::HTuple &Nu, const Halcon::HTuple &NumClasses, const Halcon::HTuple &Mode, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, Hlong *SVMHandle);
LIntExport Herror create_class_svm(Hlong NumFeatures, const char *KernelType, double KernelParam, double Nu, Hlong NumClasses, const char *Mode, const char *Preprocessing, Hlong NumComponents, Halcon::HTuple *SVMHandle);
LIntExport Herror create_class_svm(Hlong NumFeatures, const char *KernelType, double KernelParam, double Nu, Hlong NumClasses, const char *Mode, const char *Preprocessing, Hlong NumComponents, Hlong *SVMHandle);
LIntExport Herror clear_all_class_mlp(void);
LIntExport Herror clear_class_mlp(const Halcon::HTuple &MLPHandle);
LIntExport Herror clear_class_mlp(Hlong MLPHandle);
LIntExport Herror clear_samples_class_mlp(const Halcon::HTuple &MLPHandle);
LIntExport Herror clear_samples_class_mlp(Hlong MLPHandle);
LIntExport Herror deserialize_class_mlp(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *MLPHandle);
LIntExport Herror deserialize_class_mlp(const Halcon::HTuple &SerializedItemHandle, Hlong *MLPHandle);
LIntExport Herror deserialize_class_mlp(Hlong SerializedItemHandle, Halcon::HTuple *MLPHandle);
LIntExport Herror deserialize_class_mlp(Hlong SerializedItemHandle, Hlong *MLPHandle);
LIntExport Herror serialize_class_mlp(const Halcon::HTuple &MLPHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_mlp(const Halcon::HTuple &MLPHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_class_mlp(Hlong MLPHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_mlp(Hlong MLPHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_class_mlp(const Halcon::HTuple &FileName, Halcon::HTuple *MLPHandle);
LIntExport Herror read_class_mlp(const Halcon::HTuple &FileName, Hlong *MLPHandle);
LIntExport Herror read_class_mlp(const char *FileName, Halcon::HTuple *MLPHandle);
LIntExport Herror read_class_mlp(const char *FileName, Hlong *MLPHandle);
LIntExport Herror write_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_class_mlp(Hlong MLPHandle, const char *FileName);
LIntExport Herror read_samples_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &FileName);
LIntExport Herror read_samples_class_mlp(Hlong MLPHandle, const char *FileName);
LIntExport Herror write_samples_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_samples_class_mlp(Hlong MLPHandle, const char *FileName);
LIntExport Herror classify_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &Features, const Halcon::HTuple &Num, Halcon::HTuple *Class, Halcon::HTuple *Confidence);
LIntExport Herror classify_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &Features, const Halcon::HTuple &Num, Hlong *Class, double *Confidence);
LIntExport Herror evaluate_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &Features, Halcon::HTuple *Result);
LIntExport Herror train_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &MaxIterations, const Halcon::HTuple &WeightTolerance, const Halcon::HTuple &ErrorTolerance, Halcon::HTuple *Error, Halcon::HTuple *ErrorLog);
LIntExport Herror train_class_mlp(Hlong MLPHandle, Hlong MaxIterations, double WeightTolerance, double ErrorTolerance, Halcon::HTuple *Error, Halcon::HTuple *ErrorLog);
LIntExport Herror get_prep_info_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_prep_info_class_mlp(Hlong MLPHandle, const char *Preprocessing, Halcon::HTuple *InformationCont, Halcon::HTuple *CumInformationCont);
LIntExport Herror get_sample_num_class_mlp(const Halcon::HTuple &MLPHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_mlp(const Halcon::HTuple &MLPHandle, Hlong *NumSamples);
LIntExport Herror get_sample_num_class_mlp(Hlong MLPHandle, Halcon::HTuple *NumSamples);
LIntExport Herror get_sample_num_class_mlp(Hlong MLPHandle, Hlong *NumSamples);
LIntExport Herror get_sample_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &IndexSample, Halcon::HTuple *Features, Halcon::HTuple *Target);
LIntExport Herror get_sample_class_mlp(Hlong MLPHandle, Hlong IndexSample, Halcon::HTuple *Features, Halcon::HTuple *Target);
LIntExport Herror get_rejection_params_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_rejection_params_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &GenParamName, char *GenParamValue);
LIntExport Herror get_rejection_params_class_mlp(Hlong MLPHandle, const char *GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_rejection_params_class_mlp(Hlong MLPHandle, const char *GenParamName, char *GenParamValue);
LIntExport Herror set_rejection_params_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror add_sample_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &Features, const Halcon::HTuple &Target);
LIntExport Herror get_regularization_params_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_regularization_params_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &GenParamName, double *GenParamValue);
LIntExport Herror get_regularization_params_class_mlp(Hlong MLPHandle, const char *GenParamName, Halcon::HTuple *GenParamValue);
LIntExport Herror get_regularization_params_class_mlp(Hlong MLPHandle, const char *GenParamName, double *GenParamValue);
LIntExport Herror set_regularization_params_class_mlp(const Halcon::HTuple &MLPHandle, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror set_regularization_params_class_mlp(Hlong MLPHandle, const char *GenParamName, double GenParamValue);
LIntExport Herror get_params_class_mlp(const Halcon::HTuple &MLPHandle, Halcon::HTuple *NumInput, Halcon::HTuple *NumHidden, Halcon::HTuple *NumOutput, Halcon::HTuple *OutputFunction, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumComponents);
LIntExport Herror get_params_class_mlp(const Halcon::HTuple &MLPHandle, Hlong *NumInput, Hlong *NumHidden, Hlong *NumOutput, char *OutputFunction, char *Preprocessing, Hlong *NumComponents);
LIntExport Herror get_params_class_mlp(Hlong MLPHandle, Halcon::HTuple *NumInput, Halcon::HTuple *NumHidden, Halcon::HTuple *NumOutput, Halcon::HTuple *OutputFunction, Halcon::HTuple *Preprocessing, Halcon::HTuple *NumComponents);
LIntExport Herror get_params_class_mlp(Hlong MLPHandle, Hlong *NumInput, Hlong *NumHidden, Hlong *NumOutput, char *OutputFunction, char *Preprocessing, Hlong *NumComponents);
LIntExport Herror create_class_mlp(const Halcon::HTuple &NumInput, const Halcon::HTuple &NumHidden, const Halcon::HTuple &NumOutput, const Halcon::HTuple &OutputFunction, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, const Halcon::HTuple &RandSeed, Halcon::HTuple *MLPHandle);
LIntExport Herror create_class_mlp(const Halcon::HTuple &NumInput, const Halcon::HTuple &NumHidden, const Halcon::HTuple &NumOutput, const Halcon::HTuple &OutputFunction, const Halcon::HTuple &Preprocessing, const Halcon::HTuple &NumComponents, const Halcon::HTuple &RandSeed, Hlong *MLPHandle);
LIntExport Herror create_class_mlp(Hlong NumInput, Hlong NumHidden, Hlong NumOutput, const char *OutputFunction, const char *Preprocessing, Hlong NumComponents, Hlong RandSeed, Halcon::HTuple *MLPHandle);
LIntExport Herror create_class_mlp(Hlong NumInput, Hlong NumHidden, Hlong NumOutput, const char *OutputFunction, const char *Preprocessing, Hlong NumComponents, Hlong RandSeed, Hlong *MLPHandle);
LIntExport Herror deserialize_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &SerializedItemHandle);
LIntExport Herror deserialize_class_box(Hlong ClassifHandle, Hlong SerializedItemHandle);
LIntExport Herror serialize_class_box(const Halcon::HTuple &ClassifHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_box(const Halcon::HTuple &ClassifHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_class_box(Hlong ClassifHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_class_box(Hlong ClassifHandle, Hlong *SerializedItemHandle);
LIntExport Herror write_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_class_box(Hlong ClassifHandle, const char *FileName);
LIntExport Herror set_class_box_param(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &Flag, const Halcon::HTuple &Value);
LIntExport Herror set_class_box_param(Hlong ClassifHandle, const char *Flag, double Value);
LIntExport Herror read_sampset(const Halcon::HTuple &FileName, Halcon::HTuple *SampKey);
LIntExport Herror read_sampset(const Halcon::HTuple &FileName, Hlong *SampKey);
LIntExport Herror read_sampset(const char *FileName, Halcon::HTuple *SampKey);
LIntExport Herror read_sampset(const char *FileName, Hlong *SampKey);
LIntExport Herror read_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &FileName);
LIntExport Herror read_class_box(Hlong ClassifHandle, const char *FileName);
LIntExport Herror learn_sampset_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &SampKey, const Halcon::HTuple &Outfile, const Halcon::HTuple &NSamples, const Halcon::HTuple &StopError, const Halcon::HTuple &ErrorN);
LIntExport Herror learn_sampset_box(Hlong ClassifHandle, Hlong SampKey, const char *Outfile, Hlong NSamples, double StopError, Hlong ErrorN);
LIntExport Herror learn_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &Features, const Halcon::HTuple &Class);
LIntExport Herror get_class_box_param(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &Flag, Halcon::HTuple *Value);
LIntExport Herror get_class_box_param(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &Flag, double *Value);
LIntExport Herror get_class_box_param(Hlong ClassifHandle, const char *Flag, Halcon::HTuple *Value);
LIntExport Herror get_class_box_param(Hlong ClassifHandle, const char *Flag, double *Value);
LIntExport Herror clear_sampset(const Halcon::HTuple &SampKey);
LIntExport Herror clear_sampset(Hlong SampKey);
LIntExport Herror close_class_box(const Halcon::HTuple &ClassifHandle);
LIntExport Herror close_class_box(Hlong ClassifHandle);
LIntExport Herror create_class_box(Halcon::HTuple *ClassifHandle);
LIntExport Herror create_class_box(Hlong *ClassifHandle);
LIntExport Herror descript_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &Dimensions, Halcon::HTuple *ClassIdx, Halcon::HTuple *BoxIdx, Halcon::HTuple *BoxLowerBound, Halcon::HTuple *BoxHigherBound, Halcon::HTuple *BoxNumSamplesTrain, Halcon::HTuple *BoxNumSamplesWrong);
LIntExport Herror descript_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &Dimensions, Hlong *ClassIdx, Hlong *BoxIdx, Hlong *BoxLowerBound, Hlong *BoxHigherBound, Hlong *BoxNumSamplesTrain, Hlong *BoxNumSamplesWrong);
LIntExport Herror descript_class_box(Hlong ClassifHandle, Hlong Dimensions, Halcon::HTuple *ClassIdx, Halcon::HTuple *BoxIdx, Halcon::HTuple *BoxLowerBound, Halcon::HTuple *BoxHigherBound, Halcon::HTuple *BoxNumSamplesTrain, Halcon::HTuple *BoxNumSamplesWrong);
LIntExport Herror descript_class_box(Hlong ClassifHandle, Hlong Dimensions, Hlong *ClassIdx, Hlong *BoxIdx, Hlong *BoxLowerBound, Hlong *BoxHigherBound, Hlong *BoxNumSamplesTrain, Hlong *BoxNumSamplesWrong);
LIntExport Herror test_sampset_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &SampKey, Halcon::HTuple *Error);
LIntExport Herror test_sampset_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &SampKey, double *Error);
LIntExport Herror test_sampset_box(Hlong ClassifHandle, Hlong SampKey, Halcon::HTuple *Error);
LIntExport Herror test_sampset_box(Hlong ClassifHandle, Hlong SampKey, double *Error);
LIntExport Herror enquire_reject_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &FeatureList, Halcon::HTuple *Class);
LIntExport Herror enquire_reject_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &FeatureList, Hlong *Class);
LIntExport Herror enquire_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &FeatureList, Halcon::HTuple *Class);
LIntExport Herror enquire_class_box(const Halcon::HTuple &ClassifHandle, const Halcon::HTuple &FeatureList, Hlong *Class);
LIntExport Herror close_all_class_box(void);
LIntExport Herror convert_map_type(const Halcon::Hobject &Map, Halcon::Hobject *MapConverted, const Halcon::HTuple &NewType, const Halcon::HTuple &ImageWidth);
LIntExport Herror convert_map_type(const Halcon::Hobject &Map,Halcon::Hobject *MapConverted, const char *NewType, Hlong ImageWidth);
LIntExport Herror vector_to_pose(const Halcon::HTuple &WorldX, const Halcon::HTuple &WorldY, const Halcon::HTuple &WorldZ, const Halcon::HTuple &ImageRow, const Halcon::HTuple &ImageColumn, const Halcon::HTuple &CameraParam, const Halcon::HTuple &Method, const Halcon::HTuple &QualityType, Halcon::HTuple *Pose, Halcon::HTuple *Quality);
LIntExport Herror proj_hom_mat2d_to_pose(const Halcon::HTuple &Homography, const Halcon::HTuple &CameraMatrix, const Halcon::HTuple &Method, Halcon::HTuple *Pose);
LIntExport Herror radial_distortion_self_calibration(const Halcon::Hobject &Contours, Halcon::Hobject *SelectedContours, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &InlierThreshold, const Halcon::HTuple &RandSeed, const Halcon::HTuple &DistortionModel, const Halcon::HTuple &DistortionCenter, const Halcon::HTuple &PrincipalPointVar, Halcon::HTuple *CameraParam);
LIntExport Herror radial_distortion_self_calibration(const Halcon::Hobject &Contours,Halcon::Hobject *SelectedContours, Hlong Width, Hlong Height, double InlierThreshold, Hlong RandSeed, const char *DistortionModel, const char *DistortionCenter, double PrincipalPointVar, Halcon::HTuple *CameraParam);
LIntExport Herror cam_par_to_cam_mat(const Halcon::HTuple &CameraParam, Halcon::HTuple *CameraMatrix, Halcon::HTuple *ImageWidth, Halcon::HTuple *ImageHeight);
LIntExport Herror cam_mat_to_cam_par(const Halcon::HTuple &CameraMatrix, const Halcon::HTuple &Kappa, const Halcon::HTuple &ImageWidth, const Halcon::HTuple &ImageHeight, Halcon::HTuple *CameraParam);
LIntExport Herror stationary_camera_self_calibration(const Halcon::HTuple &NumImages, const Halcon::HTuple &ImageWidth, const Halcon::HTuple &ImageHeight, const Halcon::HTuple &ReferenceImage, const Halcon::HTuple &MappingSource, const Halcon::HTuple &MappingDest, const Halcon::HTuple &HomMatrices2D, const Halcon::HTuple &Rows1, const Halcon::HTuple &Cols1, const Halcon::HTuple &Rows2, const Halcon::HTuple &Cols2, const Halcon::HTuple &NumCorrespondences, const Halcon::HTuple &EstimationMethod, const Halcon::HTuple &CameraModel, const Halcon::HTuple &FixedCameraParams, Halcon::HTuple *CameraMatrices, Halcon::HTuple *Kappa, Halcon::HTuple *RotationMatrices, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z, Halcon::HTuple *Error);
LIntExport Herror get_rectangle_pose(const Halcon::Hobject &Contour, const Halcon::HTuple &CameraParam, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &WeightingMode, const Halcon::HTuple &ClippingFactor, Halcon::HTuple *Pose, Halcon::HTuple *CovPose, Halcon::HTuple *Error);
LIntExport Herror get_circle_pose(const Halcon::Hobject &Contour, const Halcon::HTuple &CameraParam, const Halcon::HTuple &Radius, const Halcon::HTuple &OutputType, Halcon::HTuple *Pose1, Halcon::HTuple *Pose2);
LIntExport Herror radiometric_self_calibration(const Halcon::Hobject &Images, const Halcon::HTuple &ExposureRatios, const Halcon::HTuple &Features, const Halcon::HTuple &FunctionType, const Halcon::HTuple &Smoothness, const Halcon::HTuple &PolynomialDegree, Halcon::HTuple *InverseResponse);
LIntExport Herror radiometric_self_calibration(const Halcon::Hobject &Images, double ExposureRatios, const char *Features, const char *FunctionType, double Smoothness, Hlong PolynomialDegree, Halcon::HTuple *InverseResponse);
LIntExport Herror map_image(const Halcon::Hobject &Image, const Halcon::Hobject &Map, Halcon::Hobject *ImageMapped);
LIntExport Herror gen_radial_distortion_map(Halcon::Hobject *Map, const Halcon::HTuple &CamParamIn, const Halcon::HTuple &CamParamOut, const Halcon::HTuple &MapType);
LIntExport Herror gen_image_to_world_plane_map(Halcon::Hobject *Map, const Halcon::HTuple &CameraParam, const Halcon::HTuple &WorldPose, const Halcon::HTuple &WidthIn, const Halcon::HTuple &HeightIn, const Halcon::HTuple &WidthMapped, const Halcon::HTuple &HeightMapped, const Halcon::HTuple &Scale, const Halcon::HTuple &MapType);
LIntExport Herror image_to_world_plane(const Halcon::Hobject &Image, Halcon::Hobject *ImageWorld, const Halcon::HTuple &CameraParam, const Halcon::HTuple &WorldPose, const Halcon::HTuple &Width, const Halcon::HTuple &Height, const Halcon::HTuple &Scale, const Halcon::HTuple &Interpolation);
LIntExport Herror contour_to_world_plane_xld(const Halcon::Hobject &Contours, Halcon::Hobject *ContoursTrans, const Halcon::HTuple &CameraParam, const Halcon::HTuple &WorldPose, const Halcon::HTuple &Scale);
LIntExport Herror image_points_to_world_plane(const Halcon::HTuple &CameraParam, const Halcon::HTuple &WorldPose, const Halcon::HTuple &Rows, const Halcon::HTuple &Cols, const Halcon::HTuple &Scale, Halcon::HTuple *X, Halcon::HTuple *Y);
LIntExport Herror set_origin_pose(const Halcon::HTuple &PoseIn, const Halcon::HTuple &DX, const Halcon::HTuple &DY, const Halcon::HTuple &DZ, Halcon::HTuple *PoseNewOrigin);
LIntExport Herror hand_eye_calibration(const Halcon::HTuple &X, const Halcon::HTuple &Y, const Halcon::HTuple &Z, const Halcon::HTuple &Row, const Halcon::HTuple &Col, const Halcon::HTuple &NumPoints, const Halcon::HTuple &RobotPoses, const Halcon::HTuple &CameraParam, const Halcon::HTuple &Method, const Halcon::HTuple &QualityType, Halcon::HTuple *CameraPose, Halcon::HTuple *CalibrationPose, Halcon::HTuple *Quality);
LIntExport Herror get_pose_type(const Halcon::HTuple &Pose, Halcon::HTuple *OrderOfTransform, Halcon::HTuple *OrderOfRotation, Halcon::HTuple *ViewOfTransform);
LIntExport Herror get_pose_type(const Halcon::HTuple &Pose, char *OrderOfTransform, char *OrderOfRotation, char *ViewOfTransform);
LIntExport Herror convert_pose_type(const Halcon::HTuple &PoseIn, const Halcon::HTuple &OrderOfTransform, const Halcon::HTuple &OrderOfRotation, const Halcon::HTuple &ViewOfTransform, Halcon::HTuple *PoseOut);
LIntExport Herror create_pose(const Halcon::HTuple &TransX, const Halcon::HTuple &TransY, const Halcon::HTuple &TransZ, const Halcon::HTuple &RotX, const Halcon::HTuple &RotY, const Halcon::HTuple &RotZ, const Halcon::HTuple &OrderOfTransform, const Halcon::HTuple &OrderOfRotation, const Halcon::HTuple &ViewOfTransform, Halcon::HTuple *Pose);
LIntExport Herror create_pose(double TransX, double TransY, double TransZ, double RotX, double RotY, double RotZ, const char *OrderOfTransform, const char *OrderOfRotation, const char *ViewOfTransform, Halcon::HTuple *Pose);
LIntExport Herror change_radial_distortion_contours_xld(const Halcon::Hobject &Contours, Halcon::Hobject *ContoursRectified, const Halcon::HTuple &CamParamIn, const Halcon::HTuple &CamParamOut);
LIntExport Herror change_radial_distortion_points(const Halcon::HTuple &Row, const Halcon::HTuple &Col, const Halcon::HTuple &CamParamIn, const Halcon::HTuple &CamParamOut, Halcon::HTuple *RowChanged, Halcon::HTuple *ColChanged);
LIntExport Herror change_radial_distortion_image(const Halcon::Hobject &Image, const Halcon::Hobject &Region, Halcon::Hobject *ImageRectified, const Halcon::HTuple &CamParamIn, const Halcon::HTuple &CamParamOut);
LIntExport Herror change_radial_distortion_cam_par(const Halcon::HTuple &Mode, const Halcon::HTuple &CamParamIn, const Halcon::HTuple &DistortionCoeffs, Halcon::HTuple *CamParamOut);
LIntExport Herror gen_caltab(const Halcon::HTuple &XNum, const Halcon::HTuple &YNum, const Halcon::HTuple &MarkDist, const Halcon::HTuple &DiameterRatio, const Halcon::HTuple &CalPlateDescr, const Halcon::HTuple &CalPlatePSFile);
LIntExport Herror gen_caltab(Hlong XNum, Hlong YNum, double MarkDist, double DiameterRatio, const char *CalPlateDescr, const char *CalPlatePSFile);
LIntExport Herror create_caltab(const Halcon::HTuple &NumRows, const Halcon::HTuple &MarksPerRow, const Halcon::HTuple &Diameter, const Halcon::HTuple &FinderRow, const Halcon::HTuple &FinderColumn, const Halcon::HTuple &Polarity, const Halcon::HTuple &CalPlateDescr, const Halcon::HTuple &CalPlatePSFile);
LIntExport Herror create_caltab(Hlong NumRows, Hlong MarksPerRow, double Diameter, Hlong FinderRow, Hlong FinderColumn, const char *Polarity, const char *CalPlateDescr, const char *CalPlatePSFile);
LIntExport Herror caltab_points(const Halcon::HTuple &CalPlateDescr, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z);
LIntExport Herror caltab_points(const char *CalPlateDescr, Halcon::HTuple *X, Halcon::HTuple *Y, Halcon::HTuple *Z);
LIntExport Herror get_line_of_sight(const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &CameraParam, Halcon::HTuple *PX, Halcon::HTuple *PY, Halcon::HTuple *PZ, Halcon::HTuple *QX, Halcon::HTuple *QY, Halcon::HTuple *QZ);
LIntExport Herror project_hom_point_hom_mat3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, const Halcon::HTuple &Pw, Halcon::HTuple *Qx, Halcon::HTuple *Qy, Halcon::HTuple *Qw);
LIntExport Herror project_hom_point_hom_mat3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, const Halcon::HTuple &Pw, double *Qx, double *Qy, double *Qw);
LIntExport Herror project_point_hom_mat3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, Halcon::HTuple *Qx, Halcon::HTuple *Qy);
LIntExport Herror project_point_hom_mat3d(const Halcon::HTuple &HomMat3D, const Halcon::HTuple &Px, const Halcon::HTuple &Py, const Halcon::HTuple &Pz, double *Qx, double *Qy);
LIntExport Herror project_3d_point(const Halcon::HTuple &X, const Halcon::HTuple &Y, const Halcon::HTuple &Z, const Halcon::HTuple &CameraParam, Halcon::HTuple *Row, Halcon::HTuple *Column);
LIntExport Herror cam_par_pose_to_hom_mat3d(const Halcon::HTuple &CameraParam, const Halcon::HTuple &Pose, Halcon::HTuple *HomMat3D);
LIntExport Herror hom_mat3d_to_pose(const Halcon::HTuple &HomMat3D, Halcon::HTuple *Pose);
LIntExport Herror pose_to_hom_mat3d(const Halcon::HTuple &Pose, Halcon::HTuple *HomMat3D);
LIntExport Herror deserialize_cam_par(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *CameraParam);
LIntExport Herror deserialize_cam_par(Hlong SerializedItemHandle, Halcon::HTuple *CameraParam);
LIntExport Herror serialize_cam_par(const Halcon::HTuple &CameraParam, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_cam_par(const Halcon::HTuple &CameraParam, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_pose(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *Pose);
LIntExport Herror deserialize_pose(Hlong SerializedItemHandle, Halcon::HTuple *Pose);
LIntExport Herror serialize_pose(const Halcon::HTuple &Pose, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_pose(const Halcon::HTuple &Pose, Hlong *SerializedItemHandle);
LIntExport Herror read_pose(const Halcon::HTuple &PoseFile, Halcon::HTuple *Pose);
LIntExport Herror read_pose(const char *PoseFile, Halcon::HTuple *Pose);
LIntExport Herror write_pose(const Halcon::HTuple &Pose, const Halcon::HTuple &PoseFile);
LIntExport Herror read_cam_par(const Halcon::HTuple &CamParFile, Halcon::HTuple *CameraParam);
LIntExport Herror read_cam_par(const char *CamParFile, Halcon::HTuple *CameraParam);
LIntExport Herror write_cam_par(const Halcon::HTuple &CameraParam, const Halcon::HTuple &CamParFile);
LIntExport Herror sim_caltab(Halcon::Hobject *SimImage, const Halcon::HTuple &CalPlateDescr, const Halcon::HTuple &CameraParam, const Halcon::HTuple &CalPlatePose, const Halcon::HTuple &GrayBackground, const Halcon::HTuple &GrayPlate, const Halcon::HTuple &GrayMarks, const Halcon::HTuple &ScaleFac);
LIntExport Herror disp_caltab(const Halcon::HTuple &WindowHandle, const Halcon::HTuple &CalPlateDescr, const Halcon::HTuple &CameraParam, const Halcon::HTuple &CalPlatePose, const Halcon::HTuple &ScaleFac);
LIntExport Herror camera_calibration(const Halcon::HTuple &NX, const Halcon::HTuple &NY, const Halcon::HTuple &NZ, const Halcon::HTuple &NRow, const Halcon::HTuple &NCol, const Halcon::HTuple &StartCamParam, const Halcon::HTuple &NStartPose, const Halcon::HTuple &EstimateParams, Halcon::HTuple *CameraParam, Halcon::HTuple *NFinalPose, Halcon::HTuple *Errors);
LIntExport Herror find_marks_and_pose(const Halcon::Hobject &Image, const Halcon::Hobject &CalPlateRegion, const Halcon::HTuple &CalPlateDescr, const Halcon::HTuple &StartCamParam, const Halcon::HTuple &StartThresh, const Halcon::HTuple &DeltaThresh, const Halcon::HTuple &MinThresh, const Halcon::HTuple &Alpha, const Halcon::HTuple &MinContLength, const Halcon::HTuple &MaxDiamMarks, Halcon::HTuple *RCoord, Halcon::HTuple *CCoord, Halcon::HTuple *StartPose);
LIntExport Herror find_caltab(const Halcon::Hobject &Image, Halcon::Hobject *CalPlate, const Halcon::HTuple &CalPlateDescr, const Halcon::HTuple &SizeGauss, const Halcon::HTuple &MarkThresh, const Halcon::HTuple &MinDiamMarks);
LIntExport Herror find_caltab(const Halcon::Hobject &Image,Halcon::Hobject *CalPlate, const char *CalPlateDescr, Hlong SizeGauss, Hlong MarkThresh, Hlong MinDiamMarks);
LIntExport Herror clear_all_camera_setup_models(void);
LIntExport Herror clear_camera_setup_model(const Halcon::HTuple &CameraSetupModelID);
LIntExport Herror clear_camera_setup_model(Hlong CameraSetupModelID);
LIntExport Herror serialize_camera_setup_model(const Halcon::HTuple &CameraSetupModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_camera_setup_model(const Halcon::HTuple &CameraSetupModelID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_camera_setup_model(Hlong CameraSetupModelID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_camera_setup_model(Hlong CameraSetupModelID, Hlong *SerializedItemHandle);
LIntExport Herror deserialize_camera_setup_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *CameraSetupModelID);
LIntExport Herror deserialize_camera_setup_model(const Halcon::HTuple &SerializedItemHandle, Hlong *CameraSetupModelID);
LIntExport Herror deserialize_camera_setup_model(Hlong SerializedItemHandle, Halcon::HTuple *CameraSetupModelID);
LIntExport Herror deserialize_camera_setup_model(Hlong SerializedItemHandle, Hlong *CameraSetupModelID);
LIntExport Herror write_camera_setup_model(const Halcon::HTuple &CameraSetupModelID, const Halcon::HTuple &FileName);
LIntExport Herror write_camera_setup_model(Hlong CameraSetupModelID, const char *FileName);
LIntExport Herror read_camera_setup_model(const Halcon::HTuple &FileName, Halcon::HTuple *CameraSetupModelID);
LIntExport Herror read_camera_setup_model(const Halcon::HTuple &FileName, Hlong *CameraSetupModelID);
LIntExport Herror read_camera_setup_model(const char *FileName, Halcon::HTuple *CameraSetupModelID);
LIntExport Herror read_camera_setup_model(const char *FileName, Hlong *CameraSetupModelID);
LIntExport Herror get_camera_setup_param(const Halcon::HTuple &CameraSetupModelID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_camera_setup_param(const Halcon::HTuple &CameraSetupModelID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &ParamName, double *ParamValue);
LIntExport Herror get_camera_setup_param(Hlong CameraSetupModelID, Hlong CameraIdx, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_camera_setup_param(Hlong CameraSetupModelID, Hlong CameraIdx, const char *ParamName, double *ParamValue);
LIntExport Herror set_camera_setup_param(const Halcon::HTuple &CameraSetupModelID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror set_camera_setup_param(Hlong CameraSetupModelID, Hlong CameraIdx, const char *ParamName, double ParamValue);
LIntExport Herror set_camera_setup_cam_param(const Halcon::HTuple &CameraSetupModelID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &CameraType, const Halcon::HTuple &CameraParam, const Halcon::HTuple &CameraPose);
LIntExport Herror create_camera_setup_model(const Halcon::HTuple &NumCameras, Halcon::HTuple *CameraSetupModelID);
LIntExport Herror create_camera_setup_model(const Halcon::HTuple &NumCameras, Hlong *CameraSetupModelID);
LIntExport Herror create_camera_setup_model(Hlong NumCameras, Halcon::HTuple *CameraSetupModelID);
LIntExport Herror create_camera_setup_model(Hlong NumCameras, Hlong *CameraSetupModelID);
LIntExport Herror clear_all_calib_data(void);
LIntExport Herror clear_calib_data(const Halcon::HTuple &CalibDataID);
LIntExport Herror clear_calib_data(Hlong CalibDataID);
LIntExport Herror deserialize_calib_data(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *CalibDataID);
LIntExport Herror deserialize_calib_data(const Halcon::HTuple &SerializedItemHandle, Hlong *CalibDataID);
LIntExport Herror deserialize_calib_data(Hlong SerializedItemHandle, Halcon::HTuple *CalibDataID);
LIntExport Herror deserialize_calib_data(Hlong SerializedItemHandle, Hlong *CalibDataID);
LIntExport Herror serialize_calib_data(const Halcon::HTuple &CalibDataID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_calib_data(const Halcon::HTuple &CalibDataID, Hlong *SerializedItemHandle);
LIntExport Herror serialize_calib_data(Hlong CalibDataID, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_calib_data(Hlong CalibDataID, Hlong *SerializedItemHandle);
LIntExport Herror read_calib_data(const Halcon::HTuple &FileName, Halcon::HTuple *CalibDataID);
LIntExport Herror read_calib_data(const Halcon::HTuple &FileName, Hlong *CalibDataID);
LIntExport Herror read_calib_data(const char *FileName, Halcon::HTuple *CalibDataID);
LIntExport Herror read_calib_data(const char *FileName, Hlong *CalibDataID);
LIntExport Herror write_calib_data(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &FileName);
LIntExport Herror write_calib_data(Hlong CalibDataID, const char *FileName);
LIntExport Herror calibrate_hand_eye(const Halcon::HTuple &CalibDataID, Halcon::HTuple *Errors);
LIntExport Herror calibrate_hand_eye(Hlong CalibDataID, Halcon::HTuple *Errors);
LIntExport Herror calibrate_cameras(const Halcon::HTuple &CalibDataID, Halcon::HTuple *Error);
LIntExport Herror calibrate_cameras(const Halcon::HTuple &CalibDataID, double *Error);
LIntExport Herror calibrate_cameras(Hlong CalibDataID, Halcon::HTuple *Error);
LIntExport Herror calibrate_cameras(Hlong CalibDataID, double *Error);
LIntExport Herror remove_calib_data(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &ItemType, const Halcon::HTuple &ItemIdx);
LIntExport Herror remove_calib_data(Hlong CalibDataID, const char *ItemType, Hlong ItemIdx);
LIntExport Herror set_calib_data(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &ItemType, const Halcon::HTuple &ItemIdx, const Halcon::HTuple &DataName, const Halcon::HTuple &DataValue);
LIntExport Herror find_calib_object(const Halcon::Hobject &Image, const Halcon::HTuple &CalibDataID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &CalibObjIdx, const Halcon::HTuple &CalibObjPoseIdx, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);
LIntExport Herror remove_calib_data_observ(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &CalibObjIdx, const Halcon::HTuple &CalibObjPoseIdx);
LIntExport Herror remove_calib_data_observ(Hlong CalibDataID, Hlong CameraIdx, Hlong CalibObjIdx, Hlong CalibObjPoseIdx);
LIntExport Herror get_calib_data_observ_contours(Halcon::Hobject *Contours, const Halcon::HTuple &CalibDataID, const Halcon::HTuple &ContourName, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &CalibObjIdx, const Halcon::HTuple &CalibObjPoseIdx);
LIntExport Herror get_calib_data_observ_contours(Halcon::Hobject *Contours, Hlong CalibDataID, const char *ContourName, Hlong CameraIdx, Hlong CalibObjIdx, Hlong CalibObjPoseIdx);
LIntExport Herror get_calib_data_observ_pose(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &CalibObjIdx, const Halcon::HTuple &CalibObjPoseIdx, Halcon::HTuple *ObjInCameraPose);
LIntExport Herror get_calib_data_observ_pose(Hlong CalibDataID, Hlong CameraIdx, Hlong CalibObjIdx, Hlong CalibObjPoseIdx, Halcon::HTuple *ObjInCameraPose);
LIntExport Herror set_calib_data_observ_pose(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &CalibObjIdx, const Halcon::HTuple &CalibObjPoseIdx, const Halcon::HTuple &ObjInCameraPose);
LIntExport Herror get_calib_data_observ_points(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &CalibObjIdx, const Halcon::HTuple &CalibObjPoseIdx, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Index, Halcon::HTuple *Pose);
LIntExport Herror get_calib_data_observ_points(Hlong CalibDataID, Hlong CameraIdx, Hlong CalibObjIdx, Hlong CalibObjPoseIdx, Halcon::HTuple *Row, Halcon::HTuple *Column, Halcon::HTuple *Index, Halcon::HTuple *Pose);
LIntExport Herror set_calib_data_observ_points(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &CalibObjIdx, const Halcon::HTuple &CalibObjPoseIdx, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Index, const Halcon::HTuple &Pose);
LIntExport Herror query_calib_data_observ_indices(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &ItemType, const Halcon::HTuple &ItemIdx, Halcon::HTuple *Index1, Halcon::HTuple *Index2);
LIntExport Herror query_calib_data_observ_indices(Hlong CalibDataID, const char *ItemType, Hlong ItemIdx, Halcon::HTuple *Index1, Halcon::HTuple *Index2);
LIntExport Herror get_calib_data(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &ItemType, const Halcon::HTuple &ItemIdx, const Halcon::HTuple &DataName, Halcon::HTuple *DataValue);
LIntExport Herror get_calib_data(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &ItemType, const Halcon::HTuple &ItemIdx, const Halcon::HTuple &DataName, double *DataValue);
LIntExport Herror get_calib_data(Hlong CalibDataID, const char *ItemType, Hlong ItemIdx, const char *DataName, Halcon::HTuple *DataValue);
LIntExport Herror get_calib_data(Hlong CalibDataID, const char *ItemType, Hlong ItemIdx, const char *DataName, double *DataValue);
LIntExport Herror set_calib_data_calib_object(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &CalibObjIdx, const Halcon::HTuple &CalibObjDescr);
LIntExport Herror set_calib_data_calib_object(Hlong CalibDataID, Hlong CalibObjIdx, double CalibObjDescr);
LIntExport Herror set_calib_data_cam_param(const Halcon::HTuple &CalibDataID, const Halcon::HTuple &CameraIdx, const Halcon::HTuple &CameraType, const Halcon::HTuple &CameraParam);
LIntExport Herror create_calib_data(const Halcon::HTuple &CalibSetup, const Halcon::HTuple &NumCameras, const Halcon::HTuple &NumCalibObjects, Halcon::HTuple *CalibDataID);
LIntExport Herror create_calib_data(const Halcon::HTuple &CalibSetup, const Halcon::HTuple &NumCameras, const Halcon::HTuple &NumCalibObjects, Hlong *CalibDataID);
LIntExport Herror create_calib_data(const char *CalibSetup, Hlong NumCameras, Hlong NumCalibObjects, Halcon::HTuple *CalibDataID);
LIntExport Herror create_calib_data(const char *CalibSetup, Hlong NumCameras, Hlong NumCalibObjects, Hlong *CalibDataID);
LIntExport Herror get_bead_inspection_param(const Halcon::HTuple &BeadInspectionModel, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_bead_inspection_param(const Halcon::HTuple &BeadInspectionModel, const Halcon::HTuple &ParamName, Hlong *ParamValue);
LIntExport Herror get_bead_inspection_param(Hlong BeadInspectionModel, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_bead_inspection_param(Hlong BeadInspectionModel, const char *ParamName, Hlong *ParamValue);
LIntExport Herror set_bead_inspection_param(const Halcon::HTuple &BeadInspectionModel, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror apply_bead_inspection_model(const Halcon::Hobject &Image, Halcon::Hobject *LeftContour, Halcon::Hobject *RightContour, Halcon::Hobject *ErrorSegment, const Halcon::HTuple &BeadInspectionModel, Halcon::HTuple *ErrorType);
LIntExport Herror apply_bead_inspection_model(const Halcon::Hobject &Image,Halcon::Hobject *LeftContour,Halcon::Hobject *RightContour,Halcon::Hobject *ErrorSegment, Hlong BeadInspectionModel, Halcon::HTuple *ErrorType);
LIntExport Herror clear_bead_inspection_model(const Halcon::HTuple &BeadInspectionModel);
LIntExport Herror clear_bead_inspection_model(Hlong BeadInspectionModel);
LIntExport Herror create_bead_inspection_model(const Halcon::Hobject &BeadContour, const Halcon::HTuple &TargetThickness, const Halcon::HTuple &ThicknessTolerance, const Halcon::HTuple &PositionTolerance, const Halcon::HTuple &Polarity, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *BeadInspectionModel);
LIntExport Herror create_bead_inspection_model(const Halcon::Hobject &BeadContour, const Halcon::HTuple &TargetThickness, const Halcon::HTuple &ThicknessTolerance, const Halcon::HTuple &PositionTolerance, const Halcon::HTuple &Polarity, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *BeadInspectionModel);
LIntExport Herror create_bead_inspection_model(const Halcon::Hobject &BeadContour, Hlong TargetThickness, Hlong ThicknessTolerance, Hlong PositionTolerance, const char *Polarity, const char *GenParamNames, Hlong GenParamValues, Halcon::HTuple *BeadInspectionModel);
LIntExport Herror create_bead_inspection_model(const Halcon::Hobject &BeadContour, Hlong TargetThickness, Hlong ThicknessTolerance, Hlong PositionTolerance, const char *Polarity, const char *GenParamNames, Hlong GenParamValues, Hlong *BeadInspectionModel);
LIntExport Herror deserialize_bar_code_model(const Halcon::HTuple &SerializedItemHandle, Halcon::HTuple *BarCodeHandle);
LIntExport Herror deserialize_bar_code_model(const Halcon::HTuple &SerializedItemHandle, Hlong *BarCodeHandle);
LIntExport Herror deserialize_bar_code_model(Hlong SerializedItemHandle, Halcon::HTuple *BarCodeHandle);
LIntExport Herror deserialize_bar_code_model(Hlong SerializedItemHandle, Hlong *BarCodeHandle);
LIntExport Herror serialize_bar_code_model(const Halcon::HTuple &BarCodeHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_bar_code_model(const Halcon::HTuple &BarCodeHandle, Hlong *SerializedItemHandle);
LIntExport Herror serialize_bar_code_model(Hlong BarCodeHandle, Halcon::HTuple *SerializedItemHandle);
LIntExport Herror serialize_bar_code_model(Hlong BarCodeHandle, Hlong *SerializedItemHandle);
LIntExport Herror read_bar_code_model(const Halcon::HTuple &FileName, Halcon::HTuple *BarCodeHandle);
LIntExport Herror read_bar_code_model(const Halcon::HTuple &FileName, Hlong *BarCodeHandle);
LIntExport Herror read_bar_code_model(const char *FileName, Halcon::HTuple *BarCodeHandle);
LIntExport Herror read_bar_code_model(const char *FileName, Hlong *BarCodeHandle);
LIntExport Herror write_bar_code_model(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &FileName);
LIntExport Herror write_bar_code_model(Hlong BarCodeHandle, const char *FileName);
LIntExport Herror get_bar_code_object(Halcon::Hobject *BarCodeObjects, const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CandidateHandle, const Halcon::HTuple &ObjectName);
LIntExport Herror get_bar_code_result(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CandidateHandle, const Halcon::HTuple &ResultName, Halcon::HTuple *BarCodeResults);
LIntExport Herror get_bar_code_result(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CandidateHandle, const Halcon::HTuple &ResultName, char *BarCodeResults);
LIntExport Herror decode_bar_code_rectangle2(const Halcon::Hobject &Image, const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CodeType, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2, Halcon::HTuple *DecodedDataStrings);
LIntExport Herror decode_bar_code_rectangle2(const Halcon::Hobject &Image, const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CodeType, const Halcon::HTuple &Row, const Halcon::HTuple &Column, const Halcon::HTuple &Phi, const Halcon::HTuple &Length1, const Halcon::HTuple &Length2, char *DecodedDataStrings);
LIntExport Herror decode_bar_code_rectangle2(const Halcon::Hobject &Image, Hlong BarCodeHandle, const char *CodeType, double Row, double Column, double Phi, double Length1, double Length2, Halcon::HTuple *DecodedDataStrings);
LIntExport Herror decode_bar_code_rectangle2(const Halcon::Hobject &Image, Hlong BarCodeHandle, const char *CodeType, double Row, double Column, double Phi, double Length1, double Length2, char *DecodedDataStrings);
LIntExport Herror find_bar_code(const Halcon::Hobject &Image, Halcon::Hobject *SymbolRegions, const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CodeType, Halcon::HTuple *DecodedDataStrings);
LIntExport Herror find_bar_code(const Halcon::Hobject &Image, Halcon::Hobject *SymbolRegions, const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CodeType, char *DecodedDataStrings);
LIntExport Herror find_bar_code(const Halcon::Hobject &Image,Halcon::Hobject *SymbolRegions, Hlong BarCodeHandle, const char *CodeType, Halcon::HTuple *DecodedDataStrings);
LIntExport Herror find_bar_code(const Halcon::Hobject &Image, Halcon::Hobject *SymbolRegions, Hlong BarCodeHandle, const char *CodeType, char *DecodedDataStrings);
LIntExport Herror query_bar_code_params(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &Properties, Halcon::HTuple *GenParamNames);
LIntExport Herror query_bar_code_params(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &Properties, char *GenParamNames);
LIntExport Herror query_bar_code_params(Hlong BarCodeHandle, const char *Properties, Halcon::HTuple *GenParamNames);
LIntExport Herror query_bar_code_params(Hlong BarCodeHandle, const char *Properties, char *GenParamNames);
LIntExport Herror get_bar_code_param_specific(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CodeTypes, const Halcon::HTuple &GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_bar_code_param_specific(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CodeTypes, const Halcon::HTuple &GenParamNames, double *GenParamValues);
LIntExport Herror get_bar_code_param_specific(Hlong BarCodeHandle, const char *CodeTypes, const char *GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_bar_code_param_specific(Hlong BarCodeHandle, const char *CodeTypes, const char *GenParamNames, double *GenParamValues);
LIntExport Herror get_bar_code_param(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_bar_code_param(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &GenParamNames, double *GenParamValues);
LIntExport Herror get_bar_code_param(Hlong BarCodeHandle, const char *GenParamNames, Halcon::HTuple *GenParamValues);
LIntExport Herror get_bar_code_param(Hlong BarCodeHandle, const char *GenParamNames, double *GenParamValues);
LIntExport Herror set_bar_code_param_specific(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &CodeTypes, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror set_bar_code_param_specific(Hlong BarCodeHandle, const char *CodeTypes, const char *GenParamNames, double GenParamValues);
LIntExport Herror set_bar_code_param(const Halcon::HTuple &BarCodeHandle, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues);
LIntExport Herror set_bar_code_param(Hlong BarCodeHandle, const char *GenParamNames, double GenParamValues);
LIntExport Herror clear_all_bar_code_models(void);
LIntExport Herror clear_bar_code_model(const Halcon::HTuple &BarCodeHandle);
LIntExport Herror clear_bar_code_model(Hlong BarCodeHandle);
LIntExport Herror create_bar_code_model(const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *BarCodeHandle);
LIntExport Herror create_bar_code_model(const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Hlong *BarCodeHandle);
LIntExport Herror create_bar_code_model(const char *GenParamNames, double GenParamValues, Halcon::HTuple *BarCodeHandle);
LIntExport Herror create_bar_code_model(const char *GenParamNames, double GenParamValues, Hlong *BarCodeHandle);
LIntExport Herror decode_2d_bar_code(const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &BarCodeDimension, const Halcon::HTuple &BarCodeData, Halcon::HTuple *SymbolCharacters, Halcon::HTuple *CorrSymbolData, Halcon::HTuple *DecodedData, Halcon::HTuple *DecodingError, Halcon::HTuple *StructuredAppend);
LIntExport Herror get_2d_bar_code_pos(const Halcon::Hobject &BarCodeRegion, const Halcon::Hobject &Image, const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &CodeRegDescr, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *BarCodeDimension, Halcon::HTuple *BarCodeData, Halcon::HTuple *DataElementRow, Halcon::HTuple *DataElementCol);
LIntExport Herror get_2d_bar_code(const Halcon::Hobject &BarCodeRegion, const Halcon::Hobject &Image, const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &CodeRegDescr, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *BarCodeDimension, Halcon::HTuple *BarCodeData);
LIntExport Herror find_2d_bar_code(const Halcon::Hobject &Image, Halcon::Hobject *CodeRegion, const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *CodeRegDescr);
LIntExport Herror gen_2d_bar_code_descr(const Halcon::HTuple &CodeType, const Halcon::HTuple &GenParamNames, const Halcon::HTuple &GenParamValues, Halcon::HTuple *BarCodeDescr);
LIntExport Herror discrete_1d_bar_code(const Halcon::HTuple &Elements, const Halcon::HTuple &BarCodeDescr, Halcon::HTuple *DiscreteBarCode);
LIntExport Herror decode_1d_bar_code(const Halcon::HTuple &BarCodeElements, const Halcon::HTuple &BarCodeDescr, Halcon::HTuple *Characters, Halcon::HTuple *Reference, Halcon::HTuple *IsCorrect);
LIntExport Herror get_1d_bar_code_scanline(const Halcon::Hobject &BarCodeRegion, const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &GenericName, const Halcon::HTuple &GenericValue, const Halcon::HTuple &Orientation, const Halcon::HTuple &StopIfFound, Halcon::HTuple *BarCodeElements, Halcon::HTuple *ScanlineNumPoints, Halcon::HTuple *ScanlineDecoded, Halcon::HTuple *ScanlinePointsRow, Halcon::HTuple *ScanlinePointsColumn);
LIntExport Herror get_1d_bar_code(const Halcon::Hobject &BarCodeRegion, const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &GenericName, const Halcon::HTuple &GenericValue, const Halcon::HTuple &Orientation, Halcon::HTuple *BarCodeElements);
LIntExport Herror find_1d_bar_code_region(const Halcon::Hobject &Image, Halcon::Hobject *CodeRegion, const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &GenericName, const Halcon::HTuple &GenericValue, Halcon::HTuple *Orientation);
LIntExport Herror find_1d_bar_code_region(const Halcon::Hobject &Image, Halcon::Hobject *CodeRegion, const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &GenericName, const Halcon::HTuple &GenericValue, double *Orientation);
LIntExport Herror find_1d_bar_code_scanline(const Halcon::Hobject &Image, Halcon::Hobject *CodeRegion, const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &GenericName, const Halcon::HTuple &GenericValue, const Halcon::HTuple &StopIfFound, Halcon::HTuple *BarcodeFound, Halcon::HTuple *BarCodeElements, Halcon::HTuple *Orientation, Halcon::HTuple *ScanlineNumPoints, Halcon::HTuple *ScanlineDecoded, Halcon::HTuple *ScanlinePointsRow, Halcon::HTuple *ScanlinePointsColumn);
LIntExport Herror find_1d_bar_code(const Halcon::Hobject &Image, Halcon::Hobject *CodeRegion, const Halcon::HTuple &BarCodeDescr, const Halcon::HTuple &GenericName, const Halcon::HTuple &GenericValue, Halcon::HTuple *BarcodeFound, Halcon::HTuple *BarCodeElements, Halcon::HTuple *Orientation);
LIntExport Herror gen_1d_bar_code_descr(const Halcon::HTuple &CodeName, const Halcon::HTuple &MinCharacters, const Halcon::HTuple &MaxCharacters, Halcon::HTuple *BarCodeDescr);
LIntExport Herror gen_1d_bar_code_descr(const char *CodeName, Hlong MinCharacters, Hlong MaxCharacters, Halcon::HTuple *BarCodeDescr);
LIntExport Herror gen_1d_bar_code_descr_gen(const Halcon::HTuple &MinCodeLength, const Halcon::HTuple &MaxCodeLength, const Halcon::HTuple &ElementSizes, const Halcon::HTuple &StartElement, const Halcon::HTuple &StopElement, const Halcon::HTuple &MaxSizeRatio, const Halcon::HTuple &DiscreteCode, Halcon::HTuple *BarCodeDescr);
LIntExport Herror gen_1d_bar_code_descr_gen(Hlong MinCodeLength, Hlong MaxCodeLength, Hlong ElementSizes, Hlong StartElement, Hlong StopElement, double MaxSizeRatio, const char *DiscreteCode, Halcon::HTuple *BarCodeDescr);
LIntExport Herror close_bg_esti(const Halcon::HTuple &BgEstiHandle);
LIntExport Herror close_bg_esti(Hlong BgEstiHandle);
LIntExport Herror give_bg_esti(Halcon::Hobject *BackgroundImage, const Halcon::HTuple &BgEstiHandle);
LIntExport Herror give_bg_esti(Halcon::Hobject *BackgroundImage, Hlong BgEstiHandle);
LIntExport Herror update_bg_esti(const Halcon::Hobject &PresentImage, const Halcon::Hobject &UpDateRegion, const Halcon::HTuple &BgEstiHandle);
LIntExport Herror update_bg_esti(const Halcon::Hobject &PresentImage, const Halcon::Hobject &UpDateRegion, Hlong BgEstiHandle);
LIntExport Herror run_bg_esti(const Halcon::Hobject &PresentImage, Halcon::Hobject *ForegroundRegion, const Halcon::HTuple &BgEstiHandle);
LIntExport Herror run_bg_esti(const Halcon::Hobject &PresentImage,Halcon::Hobject *ForegroundRegion, Hlong BgEstiHandle);
LIntExport Herror get_bg_esti_params(const Halcon::HTuple &BgEstiHandle, Halcon::HTuple *Syspar1, Halcon::HTuple *Syspar2, Halcon::HTuple *GainMode, Halcon::HTuple *Gain1, Halcon::HTuple *Gain2, Halcon::HTuple *AdaptMode, Halcon::HTuple *MinDiff, Halcon::HTuple *StatNum, Halcon::HTuple *ConfidenceC, Halcon::HTuple *TimeC);
LIntExport Herror get_bg_esti_params(const Halcon::HTuple &BgEstiHandle, double *Syspar1, double *Syspar2, char *GainMode, double *Gain1, double *Gain2, char *AdaptMode, double *MinDiff, Hlong *StatNum, double *ConfidenceC, double *TimeC);
LIntExport Herror get_bg_esti_params(Hlong BgEstiHandle, Halcon::HTuple *Syspar1, Halcon::HTuple *Syspar2, Halcon::HTuple *GainMode, Halcon::HTuple *Gain1, Halcon::HTuple *Gain2, Halcon::HTuple *AdaptMode, Halcon::HTuple *MinDiff, Halcon::HTuple *StatNum, Halcon::HTuple *ConfidenceC, Halcon::HTuple *TimeC);
LIntExport Herror get_bg_esti_params(Hlong BgEstiHandle, double *Syspar1, double *Syspar2, char *GainMode, double *Gain1, double *Gain2, char *AdaptMode, double *MinDiff, Hlong *StatNum, double *ConfidenceC, double *TimeC);
LIntExport Herror set_bg_esti_params(const Halcon::HTuple &BgEstiHandle, const Halcon::HTuple &Syspar1, const Halcon::HTuple &Syspar2, const Halcon::HTuple &GainMode, const Halcon::HTuple &Gain1, const Halcon::HTuple &Gain2, const Halcon::HTuple &AdaptMode, const Halcon::HTuple &MinDiff, const Halcon::HTuple &StatNum, const Halcon::HTuple &ConfidenceC, const Halcon::HTuple &TimeC);
LIntExport Herror set_bg_esti_params(Hlong BgEstiHandle, double Syspar1, double Syspar2, const char *GainMode, double Gain1, double Gain2, const char *AdaptMode, double MinDiff, Hlong StatNum, double ConfidenceC, double TimeC);
LIntExport Herror create_bg_esti(const Halcon::Hobject &InitializeImage, const Halcon::HTuple &Syspar1, const Halcon::HTuple &Syspar2, const Halcon::HTuple &GainMode, const Halcon::HTuple &Gain1, const Halcon::HTuple &Gain2, const Halcon::HTuple &AdaptMode, const Halcon::HTuple &MinDiff, const Halcon::HTuple &StatNum, const Halcon::HTuple &ConfidenceC, const Halcon::HTuple &TimeC, Halcon::HTuple *BgEstiHandle);
LIntExport Herror create_bg_esti(const Halcon::Hobject &InitializeImage, const Halcon::HTuple &Syspar1, const Halcon::HTuple &Syspar2, const Halcon::HTuple &GainMode, const Halcon::HTuple &Gain1, const Halcon::HTuple &Gain2, const Halcon::HTuple &AdaptMode, const Halcon::HTuple &MinDiff, const Halcon::HTuple &StatNum, const Halcon::HTuple &ConfidenceC, const Halcon::HTuple &TimeC, Hlong *BgEstiHandle);
LIntExport Herror create_bg_esti(const Halcon::Hobject &InitializeImage, double Syspar1, double Syspar2, const char *GainMode, double Gain1, double Gain2, const char *AdaptMode, double MinDiff, Hlong StatNum, double ConfidenceC, double TimeC, Halcon::HTuple *BgEstiHandle);
LIntExport Herror create_bg_esti(const Halcon::Hobject &InitializeImage, double Syspar1, double Syspar2, const char *GainMode, double Gain1, double Gain2, const char *AdaptMode, double MinDiff, Hlong StatNum, double ConfidenceC, double TimeC, Hlong *BgEstiHandle);
LIntExport Herror close_all_bg_esti(void);
LIntExport Herror control_io_channel(const Halcon::HTuple &IOChannelHandle, const Halcon::HTuple &ParamAction, const Halcon::HTuple &ParamArgument, Halcon::HTuple *ParamValue);
LIntExport Herror write_io_channel(const Halcon::HTuple &IOChannelHandle, const Halcon::HTuple &Value, Halcon::HTuple *Status);
LIntExport Herror read_io_channel(const Halcon::HTuple &IOChannelHandle, Halcon::HTuple *Value, Halcon::HTuple *Status);
LIntExport Herror read_io_channel(Hlong IOChannelHandle, Halcon::HTuple *Value, Halcon::HTuple *Status);
LIntExport Herror set_io_channel_param(const Halcon::HTuple &IOChannelHandle, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror get_io_channel_param(const Halcon::HTuple &IOChannelHandle, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_io_channel_param(Hlong IOChannelHandle, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror close_io_channel(const Halcon::HTuple &IOChannelHandle);
LIntExport Herror close_io_channel(Hlong IOChannelHandle);
LIntExport Herror open_io_channel(const Halcon::HTuple &IODeviceHandle, const Halcon::HTuple &IOChannelName, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *IOChannelHandle);
LIntExport Herror open_io_channel(const Halcon::HTuple &IODeviceHandle, const Halcon::HTuple &IOChannelName, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *IOChannelHandle);
LIntExport Herror query_io_device(const Halcon::HTuple &IODeviceHandle, const Halcon::HTuple &IOChannelName, const Halcon::HTuple &Query, Halcon::HTuple *Result);
LIntExport Herror control_io_device(const Halcon::HTuple &IODeviceHandle, const Halcon::HTuple &Action, const Halcon::HTuple &Argument, Halcon::HTuple *Result);
LIntExport Herror set_io_device_param(const Halcon::HTuple &IODeviceHandle, const Halcon::HTuple &ParamName, const Halcon::HTuple &ParamValue);
LIntExport Herror get_io_device_param(const Halcon::HTuple &IODeviceHandle, const Halcon::HTuple &ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_io_device_param(const Halcon::HTuple &IODeviceHandle, const Halcon::HTuple &ParamName, char *ParamValue);
LIntExport Herror get_io_device_param(Hlong IODeviceHandle, const char *ParamName, Halcon::HTuple *ParamValue);
LIntExport Herror get_io_device_param(Hlong IODeviceHandle, const char *ParamName, char *ParamValue);
LIntExport Herror close_io_device(const Halcon::HTuple &IODeviceHandle);
LIntExport Herror close_io_device(Hlong IODeviceHandle);
LIntExport Herror open_io_device(const Halcon::HTuple &IOInterfaceName, const Halcon::HTuple &IODeviceName, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Halcon::HTuple *IODeviceHandle);
LIntExport Herror open_io_device(const Halcon::HTuple &IOInterfaceName, const Halcon::HTuple &IODeviceName, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue, Hlong *IODeviceHandle);
LIntExport Herror control_io_interface(const Halcon::HTuple &IOInterfaceName, const Halcon::HTuple &Action, const Halcon::HTuple &Argument, Halcon::HTuple *Result);
LIntExport Herror query_io_interface(const Halcon::HTuple &IOInterfaceName, const Halcon::HTuple &Query, Halcon::HTuple *Result);
LIntExport Herror query_io_interface(const char *IOInterfaceName, const char *Query, Halcon::HTuple *Result);
LIntExport Herror get_framegrabber_param(const Halcon::HTuple &AcqHandle, const Halcon::HTuple &Param, Halcon::HTuple *Value);
LIntExport Herror get_framegrabber_param(const Halcon::HTuple &AcqHandle, const Halcon::HTuple &Param, char *Value);
LIntExport Herror get_framegrabber_param(Hlong AcqHandle, const char *Param, Halcon::HTuple *Value);
LIntExport Herror get_framegrabber_param(Hlong AcqHandle, const char *Param, char *Value);
LIntExport Herror set_framegrabber_param(const Halcon::HTuple &AcqHandle, const Halcon::HTuple &Param, const Halcon::HTuple &Value);
LIntExport Herror get_framegrabber_callback(const Halcon::HTuple &AcqHandle, const Halcon::HTuple &CallbackType, Halcon::HTuple *CallbackFunction, Halcon::HTuple *UserContext);
LIntExport Herror get_framegrabber_callback(const Halcon::HTuple &AcqHandle, const Halcon::HTuple &CallbackType, Hlong *CallbackFunction, Hlong *UserContext);
LIntExport Herror get_framegrabber_callback(Hlong AcqHandle, const char *CallbackType, Halcon::HTuple *CallbackFunction, Halcon::HTuple *UserContext);
LIntExport Herror get_framegrabber_callback(Hlong AcqHandle, const char *CallbackType, Hlong *CallbackFunction, Hlong *UserContext);
LIntExport Herror set_framegrabber_callback(const Halcon::HTuple &AcqHandle, const Halcon::HTuple &CallbackType, const Halcon::HTuple &CallbackFunction, const Halcon::HTuple &UserContext);
LIntExport Herror set_framegrabber_callback(Hlong AcqHandle, const char *CallbackType, Hlong CallbackFunction, Hlong UserContext);
LIntExport Herror grab_data_async(Halcon::Hobject *Image, Halcon::Hobject *Region, Halcon::Hobject *Contours, const Halcon::HTuple &AcqHandle, const Halcon::HTuple &MaxDelay, Halcon::HTuple *Data);
LIntExport Herror grab_data_async(Halcon::Hobject *Image, Halcon::Hobject *Region, Halcon::Hobject *Contours, const Halcon::HTuple &AcqHandle, const Halcon::HTuple &MaxDelay, char *Data);
LIntExport Herror grab_data_async(Halcon::Hobject *Image,Halcon::Hobject *Region,Halcon::Hobject *Contours, Hlong AcqHandle, double MaxDelay, Halcon::HTuple *Data);
LIntExport Herror grab_data_async(Halcon::Hobject *Image, Halcon::Hobject *Region, Halcon::Hobject *Contours, Hlong AcqHandle, double MaxDelay, char *Data);
LIntExport Herror grab_data(Halcon::Hobject *Image, Halcon::Hobject *Region, Halcon::Hobject *Contours, const Halcon::HTuple &AcqHandle, Halcon::HTuple *Data);
LIntExport Herror grab_data(Halcon::Hobject *Image, Halcon::Hobject *Region, Halcon::Hobject *Contours, const Halcon::HTuple &AcqHandle, char *Data);
LIntExport Herror grab_data(Halcon::Hobject *Image,Halcon::Hobject *Region,Halcon::Hobject *Contours, Hlong AcqHandle, Halcon::HTuple *Data);
LIntExport Herror grab_data(Halcon::Hobject *Image, Halcon::Hobject *Region, Halcon::Hobject *Contours, Hlong AcqHandle, char *Data);
LIntExport Herror grab_image_async(Halcon::Hobject *Image, const Halcon::HTuple &AcqHandle, const Halcon::HTuple &MaxDelay);
LIntExport Herror grab_image_async(Halcon::Hobject *Image, Hlong AcqHandle, double MaxDelay);
LIntExport Herror grab_image_start(const Halcon::HTuple &AcqHandle, const Halcon::HTuple &MaxDelay);
LIntExport Herror grab_image_start(Hlong AcqHandle, double MaxDelay);
LIntExport Herror grab_image(Halcon::Hobject *Image, const Halcon::HTuple &AcqHandle);
LIntExport Herror grab_image(Halcon::Hobject *Image, Hlong AcqHandle);
LIntExport Herror info_framegrabber(const Halcon::HTuple &Name, const Halcon::HTuple &Query, Halcon::HTuple *Information, Halcon::HTuple *ValueList);
LIntExport Herror info_framegrabber(const char *Name, const char *Query, Halcon::HTuple *Information, Halcon::HTuple *ValueList);
LIntExport Herror close_all_framegrabbers(void);
LIntExport Herror close_framegrabber(const Halcon::HTuple &AcqHandle);
LIntExport Herror close_framegrabber(Hlong AcqHandle);
LIntExport Herror open_framegrabber(const Halcon::HTuple &Name, const Halcon::HTuple &HorizontalResolution, const Halcon::HTuple &VerticalResolution, const Halcon::HTuple &ImageWidth, const Halcon::HTuple &ImageHeight, const Halcon::HTuple &StartRow, const Halcon::HTuple &StartColumn, const Halcon::HTuple &Field, const Halcon::HTuple &BitsPerChannel, const Halcon::HTuple &ColorSpace, const Halcon::HTuple &Generic, const Halcon::HTuple &ExternalTrigger, const Halcon::HTuple &CameraType, const Halcon::HTuple &Device, const Halcon::HTuple &Port, const Halcon::HTuple &LineIn, Halcon::HTuple *AcqHandle);
LIntExport Herror open_framegrabber(const Halcon::HTuple &Name, const Halcon::HTuple &HorizontalResolution, const Halcon::HTuple &VerticalResolution, const Halcon::HTuple &ImageWidth, const Halcon::HTuple &ImageHeight, const Halcon::HTuple &StartRow, const Halcon::HTuple &StartColumn, const Halcon::HTuple &Field, const Halcon::HTuple &BitsPerChannel, const Halcon::HTuple &ColorSpace, const Halcon::HTuple &Generic, const Halcon::HTuple &ExternalTrigger, const Halcon::HTuple &CameraType, const Halcon::HTuple &Device, const Halcon::HTuple &Port, const Halcon::HTuple &LineIn, Hlong *AcqHandle);
LIntExport Herror open_framegrabber(const char *Name, Hlong HorizontalResolution, Hlong VerticalResolution, Hlong ImageWidth, Hlong ImageHeight, Hlong StartRow, Hlong StartColumn, const char *Field, Hlong BitsPerChannel, const char *ColorSpace, double Generic, const char *ExternalTrigger, const char *CameraType, const char *Device, Hlong Port, Hlong LineIn, Halcon::HTuple *AcqHandle);
LIntExport Herror open_framegrabber(const char *Name, Hlong HorizontalResolution, Hlong VerticalResolution, Hlong ImageWidth, Hlong ImageHeight, Hlong StartRow, Hlong StartColumn, const char *Field, Hlong BitsPerChannel, const char *ColorSpace, double Generic, const char *ExternalTrigger, const char *CameraType, const char *Device, Hlong Port, Hlong LineIn, Hlong *AcqHandle);
LIntExport Herror get_framegrabber_lut(const Halcon::HTuple &AcqHandle, Halcon::HTuple *ImageRed, Halcon::HTuple *ImageGreen, Halcon::HTuple *ImageBlue);
LIntExport Herror get_framegrabber_lut(Hlong AcqHandle, Halcon::HTuple *ImageRed, Halcon::HTuple *ImageGreen, Halcon::HTuple *ImageBlue);
LIntExport Herror set_framegrabber_lut(const Halcon::HTuple &AcqHandle, const Halcon::HTuple &ImageRed, const Halcon::HTuple &ImageGreen, const Halcon::HTuple &ImageBlue);
LIntExport Herror add_scene_3d_label(const Halcon::HTuple &Scene3D, const Halcon::HTuple &Text, const Halcon::HTuple &ReferencePoint, const Halcon::HTuple &Position, const Halcon::HTuple &RelatesTo, Halcon::HTuple *LabelIndex);
LIntExport Herror add_scene_3d_label(const Halcon::HTuple &Scene3D, const Halcon::HTuple &Text, const Halcon::HTuple &ReferencePoint, const Halcon::HTuple &Position, const Halcon::HTuple &RelatesTo, Hlong *LabelIndex);
LIntExport Herror remove_scene_3d_label(const Halcon::HTuple &Scene3D, const Halcon::HTuple &LabelIndex);
LIntExport Herror remove_scene_3d_label(Hlong Scene3D, Hlong LabelIndex);
LIntExport Herror set_scene_3d_label_param(const Halcon::HTuple &Scene3D, const Halcon::HTuple &LabelIndex, const Halcon::HTuple &GenParamName, const Halcon::HTuple &GenParamValue);


}
